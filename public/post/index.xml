<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 好久不见</title>
    <link>http://domain.yqjdcyy.com/post/</link>
    <description>Recent content in Posts on 好久不见</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Powered by [姚清居](http://www.domain.yqjdcyy.com).</copyright>
    <lastBuildDate>Thu, 10 May 2018 19:10:00 +0800</lastBuildDate>
    
	<atom:link href="http://domain.yqjdcyy.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hello.RPC</title>
      <link>http://domain.yqjdcyy.com/post/hello.rpc/</link>
      <pubDate>Thu, 10 May 2018 19:10:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/hello.rpc/</guid>
      <description>[TOC]
概念 RPC 定义  远程过程调用  「请求」「应答」服务器，部署在「请求」服务器上的应用，想要调用「应答」服务器上应用提供的函数方法 由于不在一个内存空间，不能直接调用，需要通过网络来表达调用的语义和传达调用的数据   框架前缀 要点  通讯
 主要是通过在客户端和服务器之间建立TCP连接，传输远程调用所有交换的数据  按需连接，调用结束后就断掉 长连接，多个远程过程调用共享同一个连接   寻址
 「请求」服务器上的应用告诉底层的RPC框架，连接到「应答」服务器的 IP、端口、方式和相关的方法  基于Web服务协议栈的RPC，就要提供一个endpoint URI，或者是从UDDI服务上查找 RMI调用的话，还需要一个RMI Registry来注册服务的地址   序列化
 网络协议是基于二进制，内存中的参数的值要序列化成二进制的形式  反序列化
 对参数进行反序列化，恢复为内存中的表达方式，然后找到对应的方法（寻址的一部分）进行本地调用以得到返回值。  处理
 将反馈数据根据业务进行处理   图解    协议  CORBA  Common Object Request Broker Architecture 通用对象请求代理架构标准  Java RMI  Remote Method Invocation 远程方法调用  Web Service  服务导向架构  Thrift  接口描述语言和二进制通讯协议，用来定义和创建跨语言的服务 远程过程调用框架  Rest API  Representational State Transfer 表现层状态转化  Representational  表现层即资源  State Transfer  GET| POST| PUT| DELETE   网站即软件   Netty 定义  Netty 是提供一种事件驱动的，责任链式（也可以说是流水线）的网络协议实现方式  组成  网络协议  传输层协议 编码解码 压缩解压 身份认证 加密解密 请求的处理逻辑  责任链</description>
    </item>
    
    <item>
      <title>Go.GOPATH</title>
      <link>http://domain.yqjdcyy.com/post/go.gopath/</link>
      <pubDate>Thu, 10 May 2018 19:00:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.gopath/</guid>
      <description>[TOC]
作用  于 go/build 中引入，罗列本机 Go 代码的位置，可用于解析导入语句
 Unix  使用 : 分割  Windows  使用 ; 分割  Plan
 使用列表记录
默认   未设置时，默认为用户主目录下的 go 文件夹
 Unix  $HOME/go  Windows  %USERPROFILE%\go    补充  设置可参考 Reference.SettingGOPATH 可使用 go env GOPATH 查看当前配置 新 包 被 下载 时，将 默认 下载至 列表目录中的首项 目录地址中  目录结构 要求  配置的目录，需包含规定的结构  类型  src 目录拥有 源代码，而 src 下目录决定了引用路径和可执行文件名 pkg 目录拥有已安装的 包对象  在 Go 的树型结构中，各目标 操作系统和体系 架构均有对应的 pkg 子目录  bin 目录拥有已编译的 命令  DIR/src/foo/quux 将被安装至 DIR/bin/quux 而当 GOBIN 被设置时，会 指定生成至其配置目录中  GOBIN 必须为一个 绝对目录   internal 目录及其下级代码，仅可被 internal 的父目录下各目录代码引用 vendor  Go 1.</description>
    </item>
    
    <item>
      <title>Hello.性能测试</title>
      <link>http://domain.yqjdcyy.com/post/hello.%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Thu, 10 May 2018 00:00:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/hello.%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</guid>
      <description>[TOC]
Mistake  用的全是 平均 值 响应时间 没有和**吞吐量 TPS/QPS 挂钩 响应时间和吞吐量 没有和 成功率 挂钩  调整 Averages not work 噪点影响平均值  统计数据  [1ms,1ms,1ms,1ms,1ms,1ms,1ms,1ms,1ms,1s]  平均值  100ms  实际作法  去除噪点后计算平均值 或将数据排序后，取中间数据的平均值   百分比分页  统计数据  [10ms, 1s, 200ms, 100ms]  报告
 TP= Top Percentile = 当前数值的最高可能性 TP50&amp;lt;= 100ms TP90&amp;lt;= 1s
推荐格式  99.9%的请求必须小于 1ms，所有的平均时间必须小于1ms
  Latency &amp;amp; Thoughput 关联  随着并发量（吞吐量）的上升，系统愈发不稳定，响应时间延长   推荐格式  TP99小于100ms的时候，系统可以承载的最大并发数是1000qps  #Thoughput &amp;amp; Success.</description>
    </item>
    
    <item>
      <title>Python.Pack</title>
      <link>http://domain.yqjdcyy.com/post/python.pack/</link>
      <pubDate>Fri, 04 May 2018 12:00:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/python.pack/</guid>
      <description>[TOC]
类型  .py  项目源码 需要安装 Python 及依赖库  .pyc  Python 解释器可识别的二进制码 跨平台 需要安装 Python 及依赖库  .exe  不同平台的可执行文件   工具比较    Solution Windows Linux OS X Python 3 One file mode Zipfile import Eggs pkg_resources support     bbFreeze yes yes yes no no yes yes yes   py2exe yes no no yes yes yes no no   pyInstaller yes yes yes no yes no yes no   cx_Freeze yes yes yes yes no yes yes no   py2app no no yes yes no yes yes yes    详解 pyInstaller 注意事项  依赖于打包环境，无法于 x64 环境打 x86 的包 &amp;gt; Pyinstaller produces a binary depending from the python you used to build it.</description>
    </item>
    
    <item>
      <title>Tools.Profiler</title>
      <link>http://domain.yqjdcyy.com/post/tools.profiler/</link>
      <pubDate>Fri, 04 May 2018 10:30:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/tools.profiler/</guid>
      <description>[TOC]
监控 目的  通过收集程序运行时的信息来研究程序行为的动态分析方法。其目的在于定位程序需要被优化的部分，从而提高程序的运行速度或是内存使用效率  方式  事件方法  对于 Java，可以采用 JVMTI（JVM Tools Interface）API 来捕捉诸如方法调用、类载入、类卸载、进入/离开线程等事件，然后基于这些事件进行程序行为的分析。  统计抽样方法（sampling）  该方法每隔一段时间调用系统中断，然后收集当前的调用栈（call stack）信息，记录调用栈中出现的函数及这些函数的调用结构,基于这些信息得到函数的调用关系图及每个函数的 CPU 使用信息。 由于调用栈的信息是每隔一段时间来获取的，因此不是非常精确的，但由于该方法对目标程序的干涉比较少，目标程序的运行速度几乎不受影响。  植入附加指令方法（BCI）  该方法在目标程序中插入指令代码，这些指令代码将记录 profiling 所需的信息，包括运行时间、计数器的值等，从而给出一个较为精确的内存使用情况、函数调用关系及函数的 CPU 使用信息。 该方法对程序执行速度会有一定的影响，因此给出的程序执行时间有可能不准确。但是该方法在统计程序的运行轨迹方面有一定的优势。   常用功能  遥测（Telemetry）  遥测是一种用来查看应用程序运行行为的最简单的方法。 通常会有多个视图（View）分别实时地显示 CPU 使用情况、内存使用情况、线程状态以及其他一些有用的信息，以便用户能很快地发现问题的关键所在 CPU Telemetry 视图一般用于显示整个应用程序的 CPU 使用情况，有些工具还能显示应用程序中每个线程的 CPU 使用情况 Memory Telemetry 视图一般用于显示堆内存和非堆内存的分配和使用情况 Garbage Collection Telemetry 视图显示了 JVM 中垃圾收集器的详细信息 Threads Telemetry 视图一般用于显示当前运行线程的个数、守护进程的个数等信息 Classes Telemetry 视图一般用于显示已经载入和还没有载入的类的数量  快照（snapshot）  应用程序启动后，profiler 工具开始收集各种执行数据，其中一些数据直接显示在遥测视图中，而另外大部分数据被保存在内部，直到用户要求获取快照，基于这些保存的数据的统计信息才被 显示出来。 快照包含了应用程序在一段时间内的执行信息  CPU 快照  主要包含了应用程序中函数的调用关系及运行时间。  内存快照  主要包含了内存的分配和使用情况、载入的所有类、存在的对象信息及对象间的引用关系。    CPU Profiling  CPU Profiling 的主要目的是统计函数的调用情况及执行时间，或者更简单的情况就是统计应用程序的 CPU 使用情况。 方式  CPU 遥测 CPU 快照   内存 Profiling  主要通过统计内存使用情况检测可能存在的内存泄露问题及确定优化内存使用的方向。 方式  内存遥测 内存快照   线程 Profiling  线程 Profiling 主要用于在多线程应用程序中确定内存的问题所在  某个线程的状态变化情况 死锁情况 某个线程在线程生命期内状态的分布情况    工具 Java.</description>
    </item>
    
    <item>
      <title>Java.Tools.JMap</title>
      <link>http://domain.yqjdcyy.com/post/java.tools.jmap/</link>
      <pubDate>Fri, 04 May 2018 00:40:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/java.tools.jmap/</guid>
      <description>[TOC]
JMAP 作用  为进程、核心文件或远程调试服务器打印共享对象内存映射或堆内存细节 Java 1.8 版本中不支持   调用  jmap [option] &amp;lt;pid&amp;gt;|&amp;lt;executable &amp;lt;core&amp;gt;&amp;gt; | &amp;lt;[server_id@]&amp;lt;remoteServerIP | hostname&amp;gt;&amp;gt; 参数  &amp;lt;no option&amp;gt;  如果使用不带选项参数的jmap打印共享对象映射，将会打印目标虚拟机中加载的每个共享对象的起始地址、映射大小以及共享对象文件的路径全称  -dump:[live,]format=b,file=&amp;lt;filename&amp;gt;  以 hprof 二进制格式转储 Java 堆到指定文件中。live子选项是可选的 live子选项决定堆中只有活动的对象会被转储 可用 jhat 浏览 heap dump  -finalizerinfo  打印等待终结的对象信息  -heap  打印一个堆的摘要信息，包括使用的GC算法、堆配置信息和generation wise heap usage  -histo[:live]  打印堆的柱状图。其中包括每个Java类、对象数量、内存大小(单位：字节)- 、完全限定的类名 打印的虚拟机内部的类名称将会带有一个’*’前缀。如果指定了live子选项，则只计算活动的对象  -permstat  Java 1.8 版本中不支持 打印Java堆内存的永久保存区域的类加载器的智能统计信息 对于每个类加载器而言，它的名称、活跃度、地址、父类加载器、它所加载的类的数量和大小都会被打印  包含的字符串数量和大小   -F  强制模式。如果指定的pid没有响应，请使用jmap -dump或jmap -histo选项。此模式下，不支持live子选项  -h|help  打印帮助信息  -J&amp;lt;flag&amp;gt;  指定传递给运行jmap的JVM的参数    示例  jmap 24748 | 内存地址 | 内存占用 | 进程、核心文件或远程调试服务器 | |&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;|&amp;mdash;&amp;mdash;&amp;mdash;-|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;| | 0x0000000051560000 | 8740K | D:\server\Java\jdk1.</description>
    </item>
    
    <item>
      <title>Java.Tools.JINFO</title>
      <link>http://domain.yqjdcyy.com/post/java.tools.jinfo/</link>
      <pubDate>Thu, 03 May 2018 23:20:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/java.tools.jinfo/</guid>
      <description>[TOC]
JINFO 作用  输出进程、Core 文件或远程 Debug 服务器配置信息  Java 系统参数 命令行参数  运行于64位虚拟机上时，需指定 -J-d64 Java 1.8 版本中不支持  调用  jinfo [option] &amp;lt;pid&amp;gt; 参数  -flag &amp;lt;name&amp;gt;
 to print the value of the named VM flag  -flag [+|-]&amp;lt;name&amp;gt;
 to enable or disable the named VM flag  -flag &amp;lt;name&amp;gt;=&amp;lt;value&amp;gt;  to set the named VM flag to the given value  -flags
 to print VM flags    示例  jinfo pid  Caused by: sun.</description>
    </item>
    
    <item>
      <title>Java.Tools.JPS</title>
      <link>http://domain.yqjdcyy.com/post/java.tools.jps/</link>
      <pubDate>Thu, 03 May 2018 23:20:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/java.tools.jps/</guid>
      <description>[TOC]
JPS 作用  显示当前用户本地 JAVA 进程及进程号  机制  java 程序启动后，会在 java.io.tmpdir 指定临时目录下，生成名称类似于 hsperfdata_User 的文件夹，其中个别文件的名字就是 java 进程的 pid 示例  appuser 用户 ll /tmp/hsperfdata_appuser/  total 928 -rw------- 1 appuser appuser 32768 May 2 22:17 11337 -rw------- 1 appuser appuser 32768 May 2 22:17 11489    调用  jps [-q] [-mlvV] [&amp;lt;hostid&amp;gt;] 参数  -q  仅显示 pid 值  -m  显示调用时 main 函数收到的启动参数  -l  显示启动类的进程 ID 和完整路径名  -v  显示调用 JVM 时的相关参数    示例  /usr/java/jdk1.</description>
    </item>
    
    <item>
      <title>Java.Tools.JStack</title>
      <link>http://domain.yqjdcyy.com/post/java.tools.jstack/</link>
      <pubDate>Thu, 03 May 2018 23:20:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/java.tools.jstack/</guid>
      <description>[TOC]
JSTACK 作用  观察当前java虚拟机内每一条线程正在执行的方法堆栈的集合，以定位线程出现长时间停顿的原因，如线程间死锁、死循环、请求外部资源导致的长时间等待等 java 程序崩溃生成 core 文件，jstack工具可以用来获得 core 文件的java stack和native stack的信息，从而可以轻松地知道 java 程序是如何崩溃和在程序何处发生问题 Java 1.8 版本中不支持  机制  生成java虚拟机当前时刻的线程快照 观察 Object.Monitor 于线程拥有和区域的情况，获得各进程的相关情况 | 区域 | 状态 | 描述 | |&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;| | Entry Set | Waiting ThreadWaiting for monitor entry | BLOCKEDwaiting for monitor entry线程进入临界区（ synchronized 保护起来的代码区） | | The Owner | Active Thread | RUNNABLE | | Wait Set | Waiting Threadin Object.wait() | WAITING / TIMED_WAITING  in Object.</description>
    </item>
    
    <item>
      <title>Java.Tools.JStat</title>
      <link>http://domain.yqjdcyy.com/post/java.tools.jstat/</link>
      <pubDate>Thu, 03 May 2018 23:20:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/java.tools.jstat/</guid>
      <description>[TOC]
JSTAT 作用 - 监视vm内存内的各种**堆**和非堆的**大小**及其**内存使用**量，并可观察classloader，compiler，**gc**相关信息  调用  jstat -&amp;lt;option&amp;gt; [-t] [-h&amp;lt;lines&amp;gt;] &amp;lt;vmid&amp;gt; [&amp;lt;interval&amp;gt; [&amp;lt;count&amp;gt;]] 参数  option  选项  –class  监视类装载、卸载数量、总空间及类装载所耗费时间 | 字段 | 描述 | 数值 | |&amp;mdash;&amp;mdash;&amp;mdash;-|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;|&amp;mdash;&amp;mdash;&amp;mdash;| | Loaded | 装载类的数量 | 11736 | | Bytes | 装载类所占字节数 | 22293.3 | | Unloaded | 卸载类的数量 | 0 | | Bytes | 卸载类所占字节数 | 0.0 | | Time | 装载和卸载类所花的时间 | 13.24 |  –gc  监视Java堆状况，包括Eden区、2个Survivor区、老年代、永久代等的容量 | 字段 | 描述 | 数值 | |&amp;mdash;&amp;mdash;|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;|&amp;mdash;&amp;mdash;&amp;mdash;-| | S0C | 年轻代中第一个survivor（幸存区）的容量 (字节) | 20480.</description>
    </item>
    
    <item>
      <title>Error.CSharp</title>
      <link>http://domain.yqjdcyy.com/post/error.csharp/</link>
      <pubDate>Wed, 02 May 2018 16:45:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/error.csharp/</guid>
      <description> [TOC]
异常 在可以调用 OLE 之前，必须将当前线程设置为单线程单元(STA)模式，请确保您的Main函数带有STAThreadAttribute标记 解决  Main 方法上增加 [STAThread] 标志 ``` c# Thread app = new Thread(new ParameterizedThreadStart(ShowWindow)); app.ApartmentState = ApartmentState.STA;  Thread newThread = new Thread(new ThreadStart(ThreadMethod)); newThread.SetApartmentState(ApartmentState.MTA); ```
解析  STA  线程创建并进入一单线程单元  MTA  线程创建并进入一多线程单元  Unknown  尚未设置 ApartmentState 属   过程  COM 类中使用的公共语言库需要在 COM interop 情况下调用 COM 对象时创建单元  其中托管进程帮忙创建时允许其进入一个线程的单线程单元（STA）或多线程单元（MTA）   </description>
    </item>
    
    <item>
      <title>Hello.Linux</title>
      <link>http://domain.yqjdcyy.com/post/hello.linux/</link>
      <pubDate>Wed, 02 May 2018 16:30:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/hello.linux/</guid>
      <description>[TOC]
进度 Linux 基础文件  14&amp;frasl;30
Linux 架站文件 0/ 31
Linux 安全 0/ 1
Solaris 0/ 1
  概述 系统特点  开源免费、稳定性 安全性 处理多并发性能好  系统管理事项(kernel)  系统呼叫接口 行程管理：多任务 内存管理：控制内存，虚拟内存 档案系统管理：数据I/O及NTFS档案格式硬盘 装置驱动     系统演化  Unix - 1973  IBM AIX SUM SOLARIS HP HP UNIX 伯克利分校 MINIX  LINUS LINUX - 1994  REDHAT S.U.S.E 红旗     VMWare安装 学习流程  Linux平台开发，含vi,gcc,gdb,make,jdk,tomcat,mysql和linux基本操作 加厚c语言功底（c专家编程）或java语言 学习 Unix 环境高级编程（Unix环境高级编程） Linux应用系统开发或嵌入式开发  推荐书籍  《鸟哥的Linux私房菜》 《Linux编程从入门到精通》 《Linux内核完全剖析》  常用概念 安装  yum  进行软件包管理安装，一般用于自动从中央仓库下载安装指令 yum -y install make|patch|ntp  make  主要针对tar.</description>
    </item>
    
    <item>
      <title>跟腱炎</title>
      <link>http://domain.yqjdcyy.com/post/%E8%B7%9F%E8%85%B1%E7%82%8E/</link>
      <pubDate>Sat, 28 Apr 2018 14:50:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E8%B7%9F%E8%85%B1%E7%82%8E/</guid>
      <description>[TOC]
跟腱炎 概况  跟腱位于小腿下段，平均有15cm 长，是人体最大最粗壮的肌腱。跑步过程中脚踝的缓冲和扒地动作。
 原因  类型
 过度使用操作（常规原因） 勾脚尖幅度不足  膝盖伸直时，勾脚尖幅度不够，则跟腱过紧，风险增大  脚踝内外翻异常  崴脚等造成内外翻运动过多  绷脚力量弱  绷脚力量不足时，跟腱需承受更大负荷  扁平足  扁平足且足踝力线异常，导致跟腱异常受力    位置
 跟腱腱体上疼痛（距离跟腱止点近端2-6cm） 跟腱止点处疼痛 诊断  跟腱腱体，即跟腱附着于跟骨处（跟腱止点）上方2-6cm处
 跟腱连接跟骨的位置
 跟腱病 | 足跟滑囊炎 | 跟骨Haglund畸形
治疗  康复训练
 安排    动作详解  离心训练（核心）  脚前掌立于台阶，快起(1-2秒)慢落(6-8秒) 下落时脚跟可低于前掌，但以不产生疼痛幅度为准   压网球    快速勾脚    脚踝人工抗阻内外翻     落地缓冲  前脚掌着地过渡至脚后跟落地 落地无声响说明缓冲良好，同时落地后保持单脚稳定2秒   抓毛巾    脚踝稳定性  单脚站立+ 睁闭眼    理疗</description>
    </item>
    
    <item>
      <title>表情.符号</title>
      <link>http://domain.yqjdcyy.com/post/%E8%A1%A8%E6%83%85.%E7%AC%A6%E5%8F%B7/</link>
      <pubDate>Sat, 28 Apr 2018 12:30:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E8%A1%A8%E6%83%85.%E7%AC%A6%E5%8F%B7/</guid>
      <description>╮(￣▽￣&amp;rdquo;)╭　(~￣▽￣)~ =￣ω￣= →_→ ←_← (✧≖‿≖) ╮（￣▽￣）╭ ╮（￣﹏￣）╭　╮(￣▽￣)╭ (=^ω^=) 狐狸 ヽ(￣ω￣(￣ω￣(￣ω￣(￣ω￣(￣ω￣〃)ゝ (～o￣▽￣)～o （；￣ェ￣） (=ﾟωﾟ)ﾉ (ლ(￣ε￣ლ) (￣(工)￣) &amp;lt;(￣︶￣)&amp;gt; []~(￣▽￣)~* (￣︶￣)&amp;gt; &amp;lt;(￣︶￣)/ (@口@) Σ(@) (￣￣)+ Σ(⊙▽⊙&amp;rdquo;a (@[]@!!) (￣ε(#￣) Σ( ° △ °|||)︴ (￣▽￣)~* (￣▽￣)&amp;rdquo; ╮(╯▽╰)╭ (￣３￣)a ￣▽￣ ╮(╯3╰)╭ ╮(╯╰)╭ o(︶︿︶)o (￣.￣) ..@@|||||.. …(⊙_⊙;)… O__O O_o ＜（￣︶￣）＞ ＼（￣︶￣）／　（￣▽￣）～■□～（￣▽￣） ＜（￣︶￣）＞＜（￣︶￣）＞＜（￣︶￣）＞ 〒▽〒 （╯‵□′）╯︵┴─┴ ┴─┴︵╰（‵□′╰） （╬￣皿￣）＝○＃（￣＃）３￣） ＜( ￣︿￣)︵θ︵θ︵θ︵θ︵☆（＞口＜－） （￣口￣） ≡￣﹏￣≡ （￣ c￣）y▂ξ　（～￣▽￣～）　(&amp;ldquo;▔□▔)/(&amp;ldquo;▔□▔)/(&amp;ldquo;▔□▔)/　(メ▼へ▼)/�{︻┻┳═一 ≡(▔﹏▔)≡</description>
    </item>
    
    <item>
      <title>SQL.优化</title>
      <link>http://domain.yqjdcyy.com/post/sql.%E4%BC%98%E5%8C%96/</link>
      <pubDate>Fri, 27 Apr 2018 19:30:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/sql.%E4%BC%98%E5%8C%96/</guid>
      <description>[TOC]
特点  SQL为非过程化语言，只需要告诉机器做什么，而不需要指名每一步该怎么做。 SQL语句的输入输出均为同一类型数据对象（记录集），因此可以轻松实现嵌套功能。  优化 TOP-N问题  table  student{sid, sname, sage}  sql sql select sid, sname, sage from ( select rownum temp_no, sid, sname, sage from( select sid, sname, sage from student order by sid ) ) where temp_no between 4 and 6;   恰当使用索引  创建  简单索引= 指定字段值 + ROWID  隐藏字表，而ROWID相当于目录当中的页码   影响  select 查找的字段有索引，加快查找速度 insert 则会减速 delete/update 则加快和减慢的可能性都存在   用case表达式替代多次查询  普通查询  select count(*) &amp;ldquo;below 25&amp;rdquo; from student where sage &amp;lt;= 25; select count(*) &amp;ldquo;between 25 and 30&amp;rdquo; from student where sage &amp;gt;25 and sage &amp;lt;30; select count(*) &amp;ldquo;above 30&amp;rdquo; from student where sage &amp;gt;=30;  case实现 sql select count(case when sage&amp;lt;=25 then 1 else null end) &amp;quot;below 25&amp;quot;, count(case when sage&amp;gt;25 and sage&amp;lt;30 then 1 else null end) &amp;quot;between 25 and 30&amp;quot;, count(case when sage&amp;gt;30 then 1 else null end) &amp;quot;above 30&amp;quot;, from student;   用where子句代替having子句 select * from table group by num having num=1; where num=1 group by num;  多表开发注意事项  正确连接方式</description>
    </item>
    
    <item>
      <title>经典</title>
      <link>http://domain.yqjdcyy.com/post/%E7%BB%8F%E5%85%B8/</link>
      <pubDate>Fri, 27 Apr 2018 19:30:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E7%BB%8F%E5%85%B8/</guid>
      <description>[TOC]
故事 梁思成&amp;amp; 林徽因  婚前，梁思成问林徽因：“有一句话，我只问这一次，以后都不会再问，为什么是我？” 林徽因答：“答案很长，我得用一生去回答你，准备好听我说了吗？
 落水  女生问：我和你妈掉水里了，你先救谁，只能救一个。男生应该这样答：救我妈，她给了我生命。然后和你一起死，因为没有你，生命对我没有意义”。
 52赫兹鲸鱼 | 52-hertz whale  一条在太平洋出没，发出不寻常52赫兹声音的鲸鱼。 由于它叫声的频率比起任何已知品种的鲸鱼都高很多（蓝鲸的频率为10-39赫兹；长须鲸为20赫兹），因此科学家认为它的叫声一直无法被其他鲸鱼接收得到，所以亦称它为“世界上最寂寞的鲸鱼”（The world&amp;rsquo;s loneliest whale）。
 她语  王菲  爱是天时地利的迷信。  冯唐  一个女人的美丽，一分姿色，二分打扮、三分聪明，四分淫荡。  张枣  《镜中》  望着窗外,只要想起一生中后悔的事 梅花便落满了南山   北岛  你没有如期归来，而这也正是离别的意义。  几米  《希望井》  我在最深的绝望里，遇见最美丽的惊喜。—   李敖  她不需要做爱，但是可以做；他需要做爱，但是可以不做——这是美人与英雄的分野。  《麦田里的守望者》  说来好笑。你千万别跟任何人谈任何事情。你只要一谈起，就会想念起每一个人。  王朔  《过把瘾就死》  吵到最后，我们什么都骂出来了，就像一对不共戴天的仇敌。我们互相太熟悉了，因而我们刺向对方的刀刃格外锋利，弹无虚发，沉重打击了对方。   《两小无猜》  好的爱情是你通过一个人看到整个世界，坏的爱情是你为了一个人舍弃世界。  独木舟《深海里的星星Ⅱ》  年轻吗 不要紧 听过几首歌 爱过几个人 就老了  尼采  我感到难过，不是因为你欺骗了我，而是因为我再也不能相信你了。  三毛  我来不及认真地年轻，待明白过来时，只能选择认真地老去。 人性本凉薄，又何介 谁比谁更多。心，若没有栖息的地方，到哪里都是流浪&amp;hellip; 如果你给我的，和你给别人的是一样的，那我就不要了。  莎士比亚</description>
    </item>
    
    <item>
      <title>Java.Jar</title>
      <link>http://domain.yqjdcyy.com/post/java.jar/</link>
      <pubDate>Thu, 26 Apr 2018 16:00:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/java.jar/</guid>
      <description>[TOC]
Package  Create Artifacts
 Open 「Project Structure」    Create Artifacts    Setting     Build Artifacts
     Run  java -jar PDFBox.jar C:\Users\Yao\Desktop\anythingToPPTX\from\sliders.pdf  PDFBox.jar中没有主清单属性   Fix  Open MANIFEST.MF  PDFBox.jar/META-INF/MANIFEST.MF  Add Main-Class  Main-Class: com.yao.main.PDFBoxMain  Save  Reference  主要  How to Create an Executable JAR with Maven idea打包java可执行jar包  补充  A如何打包可运行jar的一个问题 JAR包中的MANIFEST.</description>
    </item>
    
    <item>
      <title>Java.Keyword</title>
      <link>http://domain.yqjdcyy.com/post/java.keyword/</link>
      <pubDate>Thu, 26 Apr 2018 00:30:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/java.keyword/</guid>
      <description>[TOC]
List Access  private protected public  class, method, variable  abstract class extends implements interface native  The native keyword may be applied to a method to indicate that the method is implemented in a language other then Java. 用于说明该方法为原生函数，由 C|C++ 实现并编译成 DLL 提供给 Java 进行调用  统一由操作系统实现   new static strictfp  strict float point | 精确浮点 确保数值计算均严格遵守 FP-strict 限制，并符合 IEEE-754 规范 保障不会因为不同的硬件平台导致计算结果不一致 可声明于类、接口或方法上  synchronized  The synchronized keyword may be applied to a method or statement block and provides protection for critical sections that should only be executed by one thread at a time.</description>
    </item>
    
    <item>
      <title>Java.Stream</title>
      <link>http://domain.yqjdcyy.com/post/java.stream/</link>
      <pubDate>Wed, 25 Apr 2018 23:30:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/java.stream/</guid>
      <description>[TOC]
分类 InputStream  PipedInputStream ObjectInputStream FilterInputStream  DataInputStream PushbackInputstream BufferedInputStream  FileInputStream SequenceInputStream ByteArrayInputStream  OutputStream  PipedOutputStream ObjectOutputStream FilterOutputStream  DataOutputStream BufferedOutputStream PrintStream  FileOutputStream ByteArrayOutputStream  Reader  StringReader PipedReader CharArrayReader InputStreamReader  FileReader  FilterReader  PushbackReader  BufferedReader  LineNumberReader   Writer  StringWriter PipedWriter ChatArrayWriter FilterWriter OutputStreamWriter  FileWriter  BufferedWriter PrintWriter  明细 Interface OutputStream  methods  write(int b) write(byte b[]) write(byte b[], int off, int len) flush() close()   InputStream  methods  read() read(byte b[]) read(byte b[], int off, int len) skip(long n) available() close() synchronized void mark(int readlimit) synchronized void reset()   Reader  params  Object lock  methods  read([char buf[], [int off, int len]]) skip(long n) ready() mark(int readAheadLimit) reset() close()   Writer  params  char[] writeBuffer Object lock  methods  write(int|char[]|string) Writer append(CharSequence csq[, int start, int end]) flush() close()   Stream Piped*Stream  用法  多线程时通过管道进行线程间的通讯  设计  PipedOutputStream  methods  connect(PipedInputStream snk) write(int b) write(byte b[], int off, int len)   PipedInputStream  params  DEFAULT_PIPE_SIZE = 1024 Thread readSide, writeSide;  methods  connect(PipedOutputStream src) receive(int b) receive(byte b[], int off, int len) read() read(byte b[], int off, int len)     Object*Stream  用法  通过文件永久地存储住对象（需支持 Serializable 接口）  设计  ObjectOutputStream  params  BlockDataOutputStream bout HandleTable handles ReplaceTable subs  methods  ObjectOutputStream(OutputStream out) write[Object|Boolean|Short|Char|Int|Long|Double|Bytes|Chars]   ObjectInputStream  params  BlockDataInputStream bin HandleTable handles  methods  ObjectInputStream(InputStream in) read[Object|Boolean|Short|Char|Int|Long|Double|Bytes|Chars]     Filter*Stream  用法  包含其它流，并作为基础的数据源  设计</description>
    </item>
    
    <item>
      <title>IDEA.Java.Version</title>
      <link>http://domain.yqjdcyy.com/post/idea.java.version/</link>
      <pubDate>Fri, 20 Apr 2018 14:30:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/idea.java.version/</guid>
      <description>[TOC]
Error  Run  Error:java: Compilation failed: internal java compiler error  Install  Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:compile (default-compile) on project thinking-in-java: Compilation failure: Compilation failure: xxxx.java:[26,56] -source 1.5 中不支持 diamond 运算符   Fix IDEA.Setting  Project Structure
 快捷键  Ctrl+ Alt+ Shift+ S  设置  project Setting/ Porject  Project SDK-&amp;gt; 1.8 Project language level-&amp;gt; 8 - Lambdas, type annotation etc.  project Setting/ Modules  choice your error modules Sources/ Language level-&amp;gt; 8 - Lambdas, type annotation etc.</description>
    </item>
    
    <item>
      <title>Java.&amp;0xff</title>
      <link>http://domain.yqjdcyy.com/post/java.0xff/</link>
      <pubDate>Fri, 20 Apr 2018 13:30:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/java.0xff/</guid>
      <description> [TOC]
Code  PipedInputStream.receive(int b)  buffer[in++] = (byte)(b &amp;amp; 0xFF);   Reason 原因  int= 32bits byte= 8bits 截取末 8 bit时，存在将数值位当符号位情况  示例  int-&amp;gt; byte  222 -&amp;gt; -34  222.补码  00000000 00000000 00000000 11011110  截取  11011110  反码  11011101  原码  10100010= -34   解决方案  222* 0xff    Supplement Java 使用 补码 进行数值存储  简化计算机运算，让符号位也参与运算，使计算机设计中只有加法，没有减法 示例  1[00000001] + -1[11111111] = 0[1 00000000]= 0[00000000] 丢弃高位数值   *码  原码  符号位+ 数字二进制表示 +7 [00000111] -7 [10000111]  反码  正数时同原码，负数时，符号位不变，其它位数取反 +7 [00000111] -7 [11111000]  补码  正数时同原码，负数时则为反码+1 +7 [00000111] -7 [11111001]   Reference  java中byte转换int时为何与0xff进行与运算 java原码、补码、反码总结 原码, 反码, 补码 详解  </description>
    </item>
    
    <item>
      <title>Java.Exception</title>
      <link>http://domain.yqjdcyy.com/post/java.exception/</link>
      <pubDate>Wed, 18 Apr 2018 18:00:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/java.exception/</guid>
      <description>[TOC]
分类 Throwable Exception  ReflectiveOperationException  NoSuchMethodException IllegalAccessException NoSuchFieldException InstantiationException ClassNotFoundException  CloneNotSupportedException InterruptedException  ClassCastException EnumConstantNotPresentException IllegalStateException NullPointException IllegalMonitorStateException IllegalArgumentException  IllegalThreadStateException NumberFormatException  SecurityException  RuntimeException  ArithmeticException TypeNotPresentException IndexOutOfBoundsException  ArrayIndexoutOfBoundsExxception StringIndexoutOfBoundsException  NegativeArraySizeException ArrayStoreException UnsupportedOperationException UnCheckIOException  IOException
 SyncFailedException CharConversionException UnsupportedEncodingException ObjectStreamException  NotSerializableException InvalidObjectException NotActiveException InvalidClassException WriteAbortedException StreamCorruptedException OptionDataException  InterruptedIOException UTFDataFormatException FileNotFoundException EOFException
Error  VirtualMachineError
 InternalError StackOverflowError UnknownError OutOfMemoryError  ThreadDeath</description>
    </item>
    
    <item>
      <title>方案.敏感词.DFA</title>
      <link>http://domain.yqjdcyy.com/post/%E6%96%B9%E6%A1%88.%E6%95%8F%E6%84%9F%E8%AF%8D.dfa/</link>
      <pubDate>Wed, 18 Apr 2018 11:00:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E6%96%B9%E6%A1%88.%E6%95%8F%E6%84%9F%E8%AF%8D.dfa/</guid>
      <description> [TOC]
Situation  String.contain | pattern DFA  Theory  词库存储结构     Enviroment  Windows 10 Intel i7-4710MQ 2.5Ghz 16G 内存  Code  algorithm.DFA  Test    Type Duration Remark     Read File 45ms 65K   Fill in map 10ms 5146   check 0ms 10/200/500  match or not   query 0ms 10/200/500  match or not   replace 0~1ms 10/200/500  match or not    Reference  网站敏感词过滤的实现 DFA算法-敏感词过滤 简易敏感词过滤算法  </description>
    </item>
    
    <item>
      <title>CSGO.地图</title>
      <link>http://domain.yqjdcyy.com/post/csgo.%E5%9C%B0%E5%9B%BE/</link>
      <pubDate>Sun, 15 Apr 2018 18:00:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/csgo.%E5%9C%B0%E5%9B%BE/</guid>
      <description>[TOC]
项目 改准心  地图  Crosshair Generator V2  资源
 https://steamcommunity.com/sharedfiles/filedetails/?id=308490450&amp;amp;searchtext=Crosshair+Generator+V2
投掷物训练  地图
 Training maps (smoke,Molotov,Flash)  资源
 Dolnma *RankSea.com Yesber
预瞄点与投掷物热身训练  地图
 Warmup and Training  资源
 Yesber
瞄准训练  地图
 training_aim_csgo2  资源
 https://steamcommunity.com/sharedfiles/filedetails/?id=213240871&amp;amp;searchtext=training_aim_csgo2
跳跃训练  地图
 Jumps Training  资源
 https://steamcommunity.com/sharedfiles/filedetails/?id=314892291&amp;amp;searchtext=Jumps+Training
瞄准课程  地图
 Aim Course 2  资源
 https://steamcommunity.com/sharedfiles/filedetails/?id=379868494&amp;amp;searchtext=Aim+Course+2
快速路线训练  地图</description>
    </item>
    
    <item>
      <title>Python.Logging</title>
      <link>http://domain.yqjdcyy.com/post/python.logging/</link>
      <pubDate>Wed, 11 Apr 2018 18:00:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/python.logging/</guid>
      <description>[TOC]
组成 Logger  作用  日志对外暴露接口  创建
 logger = logging.getLogger(logger_name)
Handler  作用
 将日志内容转至相应文件  类型
 StreamHandler  sh = logging.StreamHandler(stream=None)  FileHandler  fh = logging.FileHandler(filename, mode=&#39;a&#39;, encoding=None, delay=False)  NullHandler
Filter  作用
 将日志内容进行过滤
Formater  作用
 控制日志输出格式  LogRecord.对象
 name  日志记录器名称 不会因 Handler 将其转到其它 Logger 而改变  level  日志级别名称 如INFO、ERROR  pathname  源文件的完整路径名称  lineno  调用处在源文件中行号  msg  日志消息体  args  参数+ 日志消息体  exc_info  当前异常信息  func  调用处所在的方法体名称   LogRecord.</description>
    </item>
    
    <item>
      <title>厦门软件园公寓租赁</title>
      <link>http://domain.yqjdcyy.com/post/%E5%8E%A6%E9%97%A8%E8%BD%AF%E4%BB%B6%E5%9B%AD%E5%85%AC%E5%AF%93%E7%A7%9F%E8%B5%81/</link>
      <pubDate>Wed, 04 Apr 2018 10:30:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E5%8E%A6%E9%97%A8%E8%BD%AF%E4%BB%B6%E5%9B%AD%E5%85%AC%E5%AF%93%E7%A7%9F%E8%B5%81/</guid>
      <description>[TOC]
背景  要换房子，时值出差至北京「朋友A」所申请的一室一厅正好刚要被通过  考虑到大学舍友，关系好，在一起也便于互相照应 而政策允许最多有两个同住人 后面每年只要「朋友A」每年再提供一次公司在职证明、公司营业执照  情况稳定，不会像现在会有房东突然要求解约、涨房租情况  授权委托本人进行处理即可   结果  「朋友A」仅可单独申请，不允许添加同住人  虽然手续齐全 驳回原因为「审核人男」觉得一室一厅中住两男一女不适合  人为审核，不同意就没办法   后续处理  原房子四月中旬到期，现需赶紧重新找房子  很可惜，等待审批过程中有看到几套有阳台厨房的，但因为手续已在申办而放弃  考虑于建议板块提交代办流程和相关手续整理资料 考虑于投诉板块进行投诉   流程 申诉  2016.6.24  提交申请  2018.3.17  确认申请情况  2018.3.21  短信通知已取消 上官网查看为未接电话，已取消 手机确认无未接来电 上官网投诉，并拨打客服电话（0592-2950000）进行确认 申诉成功，等待月底别人退房后看房   看房  时间  3.27号通知看房 3.28 16:00 前回复  信息  东门-71号-501 一室一厅 1430元/月  补充  东门-73号 前台说看房，报房号取钥匙 户型特点  优点  一室一厅，面积很大 三个墙面大小的窗户，采光极好  缺点  无阳台、无厨房 家具全无，需要自行打理（已知） 本栋类似 SOHO，商住两用     手续  押一付六  1430* 7= 10,010  申请一</description>
    </item>
    
    <item>
      <title>汽车.学车</title>
      <link>http://domain.yqjdcyy.com/post/%E6%B1%BD%E8%BD%A6.%E5%AD%A6%E8%BD%A6/</link>
      <pubDate>Tue, 03 Apr 2018 15:30:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E6%B1%BD%E8%BD%A6.%E5%AD%A6%E8%BD%A6/</guid>
      <description>[TOC]
参考条件  身高 180 练习时教练传授的相关口诀和体会、尝试，仅供参考  科目一 挂学时 刷题目 考试  自行前往车管所 到时先行录指纹 等叫到号时进入 完成考试后领取成绩单  科目二 注意事项  注意调整座椅、后视镜等  后视镜上沿可见后侧门把手 车身占后视镜 1&amp;frasl;4 左右   启动三保险  离合踩满 刹车踩满 挂空档  打满= 90度= 打三把  一把= 单手半圈   流程  注意事项  考试过程中，身体任意部位不能伸出车窗 考试不及格，需从专门车道返回重考 有一次重考机会 场地     入场  穿反光马甲 识别身份证，按指纹  启动  调整座位、后视镜 绑定安全带，挂空档，踩刹车、离合，启动 拉手刹、挂一档、打左车向灯前进  侧方停车  出库时打左转向灯 不及格  入库停止后，车身出线  扣10分  行驶中轮胎压线   定点与半坡起步  前保险框停于实线处 起步前手刹拉起三秒，打左转向灯 起步熄火时，立马踩刹车重新启动 不及格  前保险框停于虚线外 后溜超过30公分 未于30s内启动  扣10分  前保险框位于虚线内实线外 后溜30公分   直角转弯  不及格  行驶中车轮压线 中途停车   曲线  不及格  行驶中车轮压线 中途停车   倒车入库  不及格  不按规定路线、顺序行驶 车身出线 中途停车 时长超过4min    实际体验  申请  第一次预约  286&amp;frasl;300 提前几天通知预约失败 与教练确认是由于预约顺序与科目一考试的时间有关 提前几天，短信通知到预约失败  第二次预约  顺利   集合  6:55 训练场集合  入场  7:30 到达考场，后直接刷身份证进去  排队  安排的9:30的场 分排「8:00-9:30」与「9:30-12:00」的场    8点的场进去后便可进入  刷身份证+ 脱眼镜拍照   考试  进考场  坐在大厅等待提示 提示自己「6」号车后，对照了解需进第三号考场    去了一下洗手间，手机静音  考试  紧张等待「6」号车返回 听大妈讲刚考过，紧张到脚抖至走不动的故事 上车，检查座椅、左右后视镜  左右后视镜无法再调整，幸好还有辅助镜子  使用身份证签到，对摄像头拍照 重新启动出发  安全员搭话，忘记启动打左转向，囧  侧方 半坡  位置停不准  直角 S弯 倒库  80分及格   难点 倒车入库 左倒车  前进至车身挡住对面车道线，方向盘向左打满 直视前方，快对直时拉直（右打满） 继续前进至左侧远端黄线与手肘对齐 踩满离合、刹车后，挂倒档 倒至左侧后视镜杆挡住远端黄线时左转打满（左打三把） 观察左侧后视镜中，车身离左侧库角70厘米左右，回（右）1.</description>
    </item>
    
    <item>
      <title>License.Choose</title>
      <link>http://domain.yqjdcyy.com/post/license.choose/</link>
      <pubDate>Fri, 30 Mar 2018 11:00:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/license.choose/</guid>
      <description>[TOC]
作用 计算机软件的版权许可协议，其使源代码可用在允许修改和重分发而不要向原始创建者付费的条件下 开源许可证是一种法律许可。通过它，版权拥有人明确允许，用户可以免费地使用、修改、共享版权软件。 版权法默认禁止共享，也就是说，没有许可证的软件，就等同于保留版权，虽然开源了，用户只能看看源码，不能用，一用就会侵犯版权。所以软件开源的话，必须明确地授予用户开源许可证。
简诉    类型 MIT  历史  名源自麻省理工学院（Massachusetts Institute of Technology, MIT），又称「X许可协议」（X License）或「X11许可协议」(X11 License）  声明
The MIT License (MIT) Copyright (c) [year] [copyright holders] Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</description>
    </item>
    
    <item>
      <title>Python.Conda</title>
      <link>http://domain.yqjdcyy.com/post/python.conda/</link>
      <pubDate>Mon, 26 Mar 2018 15:00:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/python.conda/</guid>
      <description>[TOC]
作用  用于科学计算的Python发行版 提供了包管理与环境管理的功能 方便地解决多版本python并存、切换以及各种第三方包安装问题  分类  conda  工具 提供包管理和环境管理 将所有工具、第三方包、python 和 conda自身均当成 package 对待  Anaconda  打包集合  预装 conda 特地版本 python 众多 apckages 科学计算工具   Miniconda  基础版本  仅包含 python 与 conda    安装  参考  Installation—Conda documentation Installing on Windows  确认      指令 环境管理  新增  conda create -n &amp;lt;env_name&amp;gt; &amp;lt;package_names|python[=version]&amp;gt;  删除  conda env remove -n &amp;lt;env_name&amp;gt;  列表  conda env list  进入  Windows  activate &amp;lt;env_name&amp;gt;  OSX | Linux  source activate &amp;lt;env_name&amp;gt;   退出  Windows  deactivate  OSX | Linux  source deactivate   导出配置  conda env export &amp;gt; &amp;lt;/path/environment.</description>
    </item>
    
    <item>
      <title>Python.__main__</title>
      <link>http://domain.yqjdcyy.com/post/python.__mian__/</link>
      <pubDate>Mon, 26 Mar 2018 11:00:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/python.__mian__/</guid>
      <description> [TOC]
参考  Python 中 name == &amp;lsquo;main&amp;rsquo; 的作用 if name == &amp;lsquo;main&amp;rsquo; 如何正确理解?  作用  保障模块既可以被导入，也可作为脚本来执行  直接运行时，模块名为 main，因为对应代码块可被运行 导入时，代码块不执行   </description>
    </item>
    
    <item>
      <title>竞标-厦大海洋学院</title>
      <link>http://domain.yqjdcyy.com/post/%E7%AB%9E%E6%A0%87-%E5%8E%A6%E5%A4%A7%E6%B5%B7%E6%B4%8B%E5%AD%A6%E9%99%A2/</link>
      <pubDate>Mon, 26 Mar 2018 11:00:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E7%AB%9E%E6%A0%87-%E5%8E%A6%E5%A4%A7%E6%B5%B7%E6%B4%8B%E5%AD%A6%E9%99%A2/</guid>
      <description>动态效果  http://pubg.qq.com/  整屏滚动  js  swiper   丰富防具  CSS  丰富的天气和地形  天气和地形切换  js+ css  鼠标移动，着重显示对应明细  css   瞬息万变 策略为王  呼吸状白圈+号  css3  鼠标移动至白+时，浮现提示  css    http://www.mazda.com.cn/cars/mx-5#1 http://consumer.huawei.com/cn/phones/mate10/ https://www.dji.com/cn https://loudsrl.com/our-projects https://conference.awwwards.com/san-francisco  适合展示老师、历史节点  http://www.uunn.cn/  首屏  上层文字透明底 下层视频  设计尝试  切换  js  动物动画  svg   响应式设计  框中内容上下浮动切换  css     静态布局  https://www.</description>
    </item>
    
    <item>
      <title>CSGO.技巧.跳跃</title>
      <link>http://domain.yqjdcyy.com/post/csgo.%E6%8A%80%E5%B7%A7.%E8%B7%B3%E8%B7%83/</link>
      <pubDate>Thu, 15 Mar 2018 15:00:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/csgo.%E6%8A%80%E5%B7%A7.%E8%B7%B3%E8%B7%83/</guid>
      <description> 连跳  W Space+ A+ 鼠标左摆 落地时+ Space+ D  跳箱子  正对箱子，Ctrl+ Space Ctrl+ W  跳远  W Space A+ 鼠标左摆 D+ 鼠标右摆  参考  CSGO跳跃技巧及操作方法心得详解  </description>
    </item>
    
    <item>
      <title>CSGO.脚本</title>
      <link>http://domain.yqjdcyy.com/post/csgo.%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Thu, 15 Mar 2018 14:00:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/csgo.%E8%84%9A%E6%9C%AC/</guid>
      <description>设置项  CSGO详细参数.md  脚本 示例  单人模式  single.cfg  sv_cheats 1 bot_kick sv_infinite_ammo 1 noclip bind &amp;quot;H&amp;quot; &amp;quot;noclip&amp;quot; mp_startmoney &amp;quot;16000&amp;quot; sv_grenade_trajectory &amp;quot;1&amp;quot; sv_grenade_trajectory_time &amp;quot;20&amp;quot; sv_grenade_trajectory_dash &amp;quot;0&amp;quot; sv_grenade_trajectory_thickness &amp;quot;1&amp;quot; sv_grenade_trajectory_time_spectator &amp;quot;1&amp;quot; sv_showimpacts 1 sv_showimpacts_time 25 mp_roundtime 99 mp_timelimit &amp;quot;999&amp;quot; mp_freezetime &amp;quot;0&amp;quot; mp_buy_anywhere &amp;quot;1&amp;quot; mp_buytime 9999 bind &amp;quot;k&amp;quot; &amp;quot;bot_add_ct&amp;quot; bind &amp;quot;l&amp;quot; &amp;quot;bot_add_t&amp;quot; bot_zombie &amp;quot;0&amp;quot;  备注  目前尝试无效项 冻结时间取消 金钱设置 回合时长    开启开发者控制台  「游戏设置选项」  「游戏设置」  「启用开发者控制台」    执行  将 single.</description>
    </item>
    
    <item>
      <title>JWT</title>
      <link>http://domain.yqjdcyy.com/post/jwt/</link>
      <pubDate>Fri, 09 Mar 2018 16:00:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/jwt/</guid>
      <description>[TOC]
定义 Json web token (JWT), 是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准（(RFC 7519).该token被设计为紧凑且安全的，特别适用于分布式站点的单点登录（SSO）场景。JWT的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源，也可以增加一些额外的其它业务逻辑所必须的声明信息，该token也可直接被用于认证，也可被加密。  实现  组成  header.playload.signature header  typ  声明类型  alg  加密算法  RSA1_5 HS256    playload  组成  Registered Claim Names  iss  Issuer 该 JWT 的签发者 可选项，大小写敏感  sub  Subject 该JWT所面向的用户，局部上下文或全局唯一 可选项，大小写敏感  aud  Audience 接收该 JWT 的一方，指定应用方 可选项，大小写敏感  exp  Expiration Time 过期时间，Unix时间戳 可选项  nbf  Not Before 起始可用时间，Unix时间戳  iat  Issued At 标记签发时间，Unix时间戳 可选项  jti  JWT ID 可选项   Public Claim Names  可添加任意信息  常用于培养出用户、业务相关信息 不建议添加敏感信息   Private Claim Names  提供者和消费者的共同声明    signature  encrypt(base64(header)+ &amp;lsquo;.</description>
    </item>
    
    <item>
      <title>王垠-如何掌握所有的程序语言</title>
      <link>http://domain.yqjdcyy.com/post/%E7%8E%8B%E5%9E%A0-%E5%A6%82%E4%BD%95%E6%8E%8C%E6%8F%A1%E6%89%80%E6%9C%89%E7%9A%84%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/</link>
      <pubDate>Tue, 06 Mar 2018 15:00:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E7%8E%8B%E5%9E%A0-%E5%A6%82%E4%BD%95%E6%8E%8C%E6%8F%A1%E6%89%80%E6%9C%89%E7%9A%84%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/</guid>
      <description>[TOC]
王垠-如何掌握所有的程序语言 针对处理  你是编程初学者，不知道该选择什么程序语言来入门。 你是资深的程序员或者团队领导，对新出现的种种语言感到困惑，不知道该投资哪种语言。 你的团队为使用哪种程序语言争论不休，发生各种宗教斗争。 你追逐潮流采用了某种时髦的语言，结果两个月之后发现深陷泥潭，痛苦不堪……  重视语言特性，而不是语言  任何一种“语言”，都是各种“语言特性”的组合  一个程序语言就像一台电脑。不同的语言则相对于不同的品牌。 你得看看它里面装的是什么型号的处理器，有多少个核，主频多少，有多少 L1 cache，L2 cache……，有多少内存和硬盘，显示器分辨率有多大，显卡是什么 GPU，网卡速度，等等各种“配置”。有时候你还得看各个组件之间的兼容性。   通用特点  语言特性
 变量定义 算术运算 for 循环语句，while 循环语句 函数定义，函数调用 递归 静态类型系统 类型推导 lambda 函数 面向对象 垃圾回收 指针算术 goto 语句  掌握通用特性
 比如变量，函数，整数和浮点数运算，这些是每个通用程序语言里面都必须有的 掌握基本的特性后，即可随时将这些知识应用到任何其它语言  学习方法
 手头有问题 用两分钟浏览一下这语言的手册，看看这语言大概长什么样 例子代码来开始修改捣鼓，想法把这代码改成自己正想解决的问题 实现过程中自然带出问题  这个语言的“变量定义”是什么语法，需要“声明类型”吗，还是可以用“类型推导”？ 它的“类型”是什么语法？是否支持“泛型”？泛型的 “variance” 如何表达？ 这个语言的“函数”是什么语法，“函数调用”是什么语法，可否使用“缺省参数”？  补充  因为掌握了语言特性的人都知道，自己需要的特性，在任何语言里面一定有对应的表达方式。 如果没有直接的方式表达，那么一定有某种“绕过方式”。如果有直接的表达方式，那么它只是语法稍微有所不同而已。  带着问题找特性，就像查字典一样，而不是被淹没于大部头的手册里面    语言特性</description>
    </item>
    
    <item>
      <title>洋酒.入门</title>
      <link>http://domain.yqjdcyy.com/post/%E6%B4%8B%E9%85%92.%E5%85%A5%E9%97%A8/</link>
      <pubDate>Tue, 06 Mar 2018 11:00:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E6%B4%8B%E9%85%92.%E5%85%A5%E9%97%A8/</guid>
      <description> [TOC]
洋酒.入门 单一麦芽 The Singleton of Dufftown 12 YO  名称  苏格登达夫镇12年单一麦芽  特征  清淡的鲜花、水果、坚果、香草味，容易入口 销量高  价位  320元  图示     Glen Moray Classic  名称  格兰莫雷经典单一麦芽  特征  以味道清淡著称，清淡而不单调，有着丰富的韵味 最便宜的单一麦芽之一  价位  400元  图示     The Glenlivet 12 YO  名称  格兰威特12年单一麦芽  特征  12年平衡性最佳  价位  300元  图示     Hakushu 12 YO  名称  白州12年单一麦芽  特征  清新的香气，淡而不简单，余韵稍欠  价位  330元  图示     调和威士忌 Famous Grouse  名称  三得利老威士忌  价位  100元  图示     Jameson  名称  尊美醇爱尔兰威士忌  特征  单纯的清淡 仅建议从调和威士忌入门时饮用  价位  130元  图示     Chivas 12 YO  名称  芝华士12年  特征  适合净饮  图示     干邑  80% 产量由四个家族（轩尼诗、马爹利、人头马、拿破仑）包办  Remy Martin VSOP  名称  人头马干邑VSOP  特征  用干邑区里最适合陈年的大、小香槟区的生命之水调配的VSOP 酒体平衡，价格合理 相对山寨货几率更低  图示     Courvoisier VSOP  名称  拿破仑干邑VSOP  特征  用了大香槟区、小香槟区、边缘区、优质林区四个地区的生命之水调配 姜饼、梅子、紫罗兰的气息相当明显  图示     雅文邑  只经过一次蒸馏，酒体中残留的风味物质非常多 经过陈酿以后与橡木桶赋予的味道香融合，整体的风格非常强烈 没有泥煤威士忌那种突出且不易为初学者接受的消毒药水味 Bas-Armagnac  公认品质最好的子产区  Folle Blanche  最适合在年轻时饮用，花香明显   Tariquet VSOP Bas-Armagnac  名称  塔希克VSOP雅文邑  特征  于表现花香  价位  350元  图示     Chateau Laubade Blanche  名称  朗巴德白雅文邑  特征  经过一次蒸馏后酒精含量只在55%左右，酒中残留的风味物质非常多，风格突出，比伏特加之类的白色烈酒有更多风味 先取样送往雅文邑行业管理局，又烈酒专家团进行一次盲品测试  在新鲜度、复杂度、花果香气均达到标准的，才批准装瓶出售 达标的，则不允许出售，只能倒掉卖给产区外的烈酒生产商    参考  对洋酒比较感兴趣，想入门应该买些什么酒来喝？ 100 元以下的价位有什么好喝的酒？  </description>
    </item>
    
    <item>
      <title>鸡尾酒</title>
      <link>http://domain.yqjdcyy.com/post/%E9%B8%A1%E5%B0%BE%E9%85%92/</link>
      <pubDate>Mon, 05 Mar 2018 19:00:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E9%B8%A1%E5%B0%BE%E9%85%92/</guid>
      <description> [TOC]
国际调酒师协会指定比赛鸡尾酒  阿美利加诺（Americano）  做法  依次倒入  30ml甜味味美思（Vermouth） 30ml金巴利（Carmpari） 冰块 少量苏打水  装饰  桔子皮| 柠檬瓣    毕和毕（B&amp;amp;B）  做法  依次倒入分层堆叠  白兰地（Brandy） 香草甜酒（Benedictine）    贝利尼（Bellini）  评价  1948年发明，用于纪念画家贝利尼  做法  依次倒入搅拌  桃子酒* 2&amp;frasl;3 石榴糖浆 葡萄酒* 1&amp;frasl;3    血腥玛丽  评价  被认为是世界上最难喝的鸡尾酒  做法  倒入后晃匀  冰块 辣椒油 伏特加 番茄汁 柠檬汁  搅拌  黑胡椒粉 干辣椒粉  装饰  柠檬片 芹菜杆    布朗克斯（Bronx）  评价  西方世界最受欢迎鸡尾酒前三  做法  摇匀过滤  冰块 琴酒* 60ml 柳橙汁* 30ml 甜香艾酒* 4ml 不甜香艾酒* 4ml 冰块    德思威他（Dolce Vita）  做法  倒入后搅拌  坦布勒杯 草莓甜酒* 1&amp;frasl;10 琴酒* 3&amp;frasl;10 马天尼玫瑰红酒  装饰  橙片| 柠檬片    干冽玫瑰（Dry Rose）  做法  倒入后搅拌  干味美思* 40ml 基尔希樱桃白兰地* 20ml 石榴糖浆* 4ml    佛妙3(Formule 3)  做法  依次加入  坦布勒杯 冰块 西柚汁* 3&amp;frasl;10 草莓甜酒* 2&amp;frasl;10 俄得克酒* 5&amp;frasl;10  加满  汤力水    金菲士（Gin Fizz）  做法  摇匀  糖粉| 糖浆 柠檬汁 金酒  倒至坦布勒杯 补满苏打水   金合义（Gin and it）  做法  依次倒入  辛辣金酒* 1&amp;frasl;2 甜味苦艾酒* 1&amp;frasl;2    乾马天尼  做法  倒入后搅拌  马天尼干酒* 2&amp;frasl;10 金酒* 8&amp;frasl;10  装饰  橄榄| 拧绞柠檬皮    完美马天尼（Medium or perfect Martini）  做法  倒入后搅拌  马天红酒* 3&amp;frasl;10 马天尼干酒* 3&amp;frasl;10 金酒* 4&amp;frasl;10  装饰  鸡尾酒杯 樱桃| 拧绞柠檬皮    甜马天尼（Sweet Martini）  做法  倒入后搅拌  金酒* 6&amp;frasl;10 甜味美思* 4&amp;frasl;10 冰块  装饰  过滤倒入鸡尾酒杯 红樱桃    尼格龙尼（Negroni）  做法  依次倒入  坦布勒杯 冰块 马天尼红酒* 3&amp;frasl;10 马天尼苦酒* 3&amp;frasl;10 金酒* 4&amp;frasl;10  装饰  半片橙片    古典鸡尾酒（Old fashioned）  做法  搅拌  方糖 苦精 苏打水  加满  冰块 威士忌  装饰  柠檬皮 柳橙片 无渍樱桃    波菲利普（Porto Flip）  做法  倒入后摇匀  白兰地* 15ml 波特葡萄酒* 45ml 糖粉 蛋黄 冰块  装饰  倒入鸡尾酒杯 豆蔻粉    罗伯洛伊（Rob Roy）  评价  为苏格兰著名的义贼 Rob Roy 创建  做法  倒入后搅拌  英格兰威士忌* 45ml 甜香艾酒* 15ml 柑橘苦精  装饰  倒入鸡尾酒杯 柠檬皮    苏格兰酸（Scotch sour）  评价    做法  倒入后摇匀  苏格兰威士忌* 60ml 生鲜柠檬汁 糖浆  装饰  过滤倒入 甜酒浸樱桃    螺丝刀  做法  依次倒入  坦布勒杯 冰块 俄得克酒* 4&amp;frasl;10 橙汁* 6&amp;frasl;10    痛击（Stinger）  评价  口味辛辣，适合餐后饮用  做法  倒入后摇匀  冰块 干邑白兰地* 50ml 白薄荷力娇酒* 20ml    汤姆可林（Tom Collins）  评价    做法  倒入后摇匀  冰块 琴酒* 60ml 鲜榨柠檬汁* 22ml 糖浆* 30ml  装饰  过滤后倒入可林杯 苏打水 糖渍樱桃 柳橙片    伏特加丁尼（Vodkatini）  评价  “金汤尼”的伏特加版  做法  倒入后搅拌  冰块 伏特加* 45ml 汤尼水  装饰  柠檬片     分类 亚历山大类  亚历山大 (鸡尾酒)（Alexander）  做法  倒入后摇匀  冰块 白兰地* 1&amp;frasl;3 可可利口酒* 1&amp;frasl;3 鲜奶油* 1&amp;frasl;3  装饰  鸡尾酒杯 豆蔻粉    咖啡亚历山大（Coffee Alexander） 金酒亚历山大（Gin Alexander）  霸克类  金霸克（Gin Buck）  做法  倒入后搅拌  坦布勒杯 金酒* 45ml 柠檬汁* 1&amp;frasl;2 冰块 姜汁汽水  装饰  柠檬片    白兰地霸克（Brandy Buck）  可林类  兰姆可林（Rum Collins）  评价    做法  倒入后搅拌  清淡朗姆酒* 45ml 柠檬汁* 20ml 糖浆* 2 冰镇苏打水  装饰  柠檬片 红樱桃    波本可林（Bourbon Collins）  考比勒类  白兰地考比勒（Brandy Cobbler）  评价    做法  倒入后搅拌  冰块 覆盆子糖浆| 香甜酒* 22ml 水* 30ml 捣汁  去皮凤梨* 1角 柳橙片* 1片 柠檬角* 1个   装饰  过滤 凤梨角 柳橙片    香槟考比勒（Champagne Cabbler） 威士忌考比勒（Whisky Cabbler）  福赞类（Frozen）  冰冻黛克蕾（Frozen Daiquiri）  做法  倒入后搅拌  碎冰 白色朗姆酒* 2&amp;frasl;3 青柠汁* 1&amp;frasl;3 石榴糖浆  装饰  搅拌至成冰糕状 倒至香槟酒杯     菲丽普类  白兰地菲丽普（Brandy Flip）  评价  需尽快饮用，因蛋黄缘故酒体容易分层  做法  倒入后摇匀  白兰地* 45ml 蛋黄 砂糖 豆蔻  装饰  倒入波特酒杯    雪梨菲丽普（Sherry Flip） 味美思菲丽普（Vermouth Flip）  戴兹类  馨馨戴兹（Ching Ching Daisy） 金戴兹（Gin Daisy） 威士忌戴兹（Whisky Daisy）  蛋诺类  白兰地蛋诺（Brandy Eggnog）  评价  北美圣诞节时饮用  做法  倒入后摇匀  冰块* 1&amp;frasl;2 白兰地* 45ml 白朗姆酒* 15ml 鲜奶* 75ml 糖浆* 15ml 蛋黄  装饰  摇至雪克瓶外部结霜 过滤至鸡尾酒杯 豆蔻粉    覆盆子蛋诺（Eggnog Framboise） 波旁蛋诺（Bourbon Eggnog）  宾治类  拓荒者宾治（Plant&amp;rsquo;s Punch）  评价    做法  倒入后摇匀  黑朗姆酒* 45ml 橙汁* 35ml 青柠汁* 20ml 石榴糖浆* 10ml 糖浆* 10ml  装饰  柯林杯 冰块 过滤后倒入 苦酒* 2ml 橙片    苹果白兰地宾治（Applejack Punch） 茶宾治（Tea Punch） 威士忌宾治（Whisky Punch）  鸡尾类  蚱蜢（Grasshopper）  评价  适合女性初试鸡尾酒  做法  倒入后摇匀  绿色薄荷酒* 1&amp;frasl;3 白色可可甜酒* 1&amp;frasl;3 鲜奶油* 1&amp;frasl;3    吉布森（Gibson） 日出特吉拉 杰克玫瑰（Jack Rose） 天堂 粉佳人（Pink Lady） 黑天鹅绒（Black Velvet） 兰潟湖（Blue Lagoon） 白俄 莫斯科驴子（Moscow Mule） 玛格丽塔（Margarita） 反舌鸟  德贵丽类  德贵丽（Daiquiri）  评价  古巴城市圣地亚哥郊外的矿山名称 1896年矿山技师发明  做法  倒入后摇匀  白朗姆酒* 3&amp;frasl;4 酸橙汁* 1&amp;frasl;4 砂糖 冰块  装饰  过滤倒入鸡尾酒杯    菠萝德贵丽（Pineapple Daiquiri） 桃德贵丽（Peach Daiquiri）  推荐 推荐女士 含奶制品类  Grasshopper（绿色蚱蜢） Alexander / Brandy Alexander（亚历山大） White Russian（白色俄罗斯）  透明汽水类  Gin Tonic（金汤力） Mojito Moscow Mule（莫斯科骡子）  果汁类  Cosmopolitan （大都会） Singapore Sling （新加坡司令）  不可描述 无声杀手  Zombie （僵尸） Long Island Iced Tea （长岛冰茶）  烈酒  Appletini / Apple Martini （苹果马天尼） Manhattan （曼哈顿） B-52  参考  酒吧里比较常见且适合女生喝的鸡尾酒 酒吧里最适合女生喝的6类16款鸡尾酒 酒吧里比较常见且适合女生喝的是哪些鸡尾酒，各自有什么特点？ DIY六款高颜值鸡尾酒 灌醉小鲜肉  </description>
    </item>
    
    <item>
      <title>PDF部分页面转图片异常</title>
      <link>http://domain.yqjdcyy.com/post/pdf%E9%83%A8%E5%88%86%E9%A1%B5%E9%9D%A2%E8%BD%AC%E5%9B%BE%E7%89%87%E5%BC%82%E5%B8%B8/</link>
      <pubDate>Sun, 04 Mar 2018 10:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/pdf%E9%83%A8%E5%88%86%E9%A1%B5%E9%9D%A2%E8%BD%AC%E5%9B%BE%E7%89%87%E5%BC%82%E5%B8%B8/</guid>
      <description>[TOC]
Error java.lang.IllegalArgumentException: Numbers of source Raster bands and source color space components do not match at java.awt.image.ColorConvertOp.filter(ColorConvertOp.java:482) at com.sun.imageio.plugins.jpeg.JPEGImageReader.acceptPixels(JPEGImageReader.java:1268) at com.sun.imageio.plugins.jpeg.JPEGImageReader.readImage(Native Method) at com.sun.imageio.plugins.jpeg.JPEGImageReader.readInternal(JPEGImageReader.java:1236) at com.sun.imageio.plugins.jpeg.JPEGImageReader.read(JPEGImageReader.java:1039) at javax.imageio.ImageReader.read(ImageReader.java:939) at org.apache.pdfbox.filter.DCTFilter.decode(DCTFilter.java:85) at org.apache.pdfbox.cos.COSInputStream.create(COSInputStream.java:69) at org.apache.pdfbox.cos.COSStream.createInputStream(COSStream.java:162) at org.apache.pdfbox.pdmodel.common.PDStream.createInputStream(PDStream.java:235) at org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.&amp;lt;init&amp;gt;(PDImageXObject.java:125) at org.apache.pdfbox.pdmodel.graphics.PDXObject.createXObject(PDXObject.java:70) at org.apache.pdfbox.pdmodel.PDResources.getXObject(PDResources.java:409) at org.apache.pdfbox.contentstream.operator.graphics.DrawObject.process(DrawObject.java:53) at org.apache.pdfbox.contentstream.PDFStreamEngine.processOperator(PDFStreamEngine.java:838) at org.apache.pdfbox.contentstream.PDFStreamEngine.processStreamOperators(PDFStreamEngine.java:495) at org.apache.pdfbox.contentstream.PDFStreamEngine.processStream(PDFStreamEngine.java:469) at org.apache.pdfbox.contentstream.PDFStreamEngine.processPage(PDFStreamEngine.java:150) at org.apache.pdfbox.rendering.PageDrawer.drawPage(PageDrawer.java:206) at org.apache.pdfbox.rendering.PDFRenderer.renderImage(PDFRenderer.java:145) at org.apache.pdfbox.rendering.PDFRenderer.renderImageWithDPI(PDFRenderer.java:94) at com.yunkai.component.resource.service.impl.PDFConvertServiceImpl.convertToImage(PDFConvertServiceImpl.java:72) at com.yunkai.component.resource.service.impl.PDFConvertServiceImpl.convertToImage(PDFConvertServiceImpl.java:88) at com.yunkai.component.resource.service.impl.PDFConvertServiceImpl.convertToImage(PDFConvertServiceImpl.java:93) at com.yunkai.component.resource.service.impl.ConvertServiceImpl.pdf2Image(ConvertServiceImpl.java:171) at com.yunkai.training.commons.resource.service.impl.LogicConvertServiceImpl.handlerPDF(LogicConvertServiceImpl.java:319) at com.</description>
    </item>
    
    <item>
      <title>小丸压缩视频转M3U8异常</title>
      <link>http://domain.yqjdcyy.com/post/%E5%B0%8F%E4%B8%B8%E5%8E%8B%E7%BC%A9%E8%A7%86%E9%A2%91%E8%BD%ACm3u8%E5%BC%82%E5%B8%B8/</link>
      <pubDate>Sat, 03 Mar 2018 18:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E5%B0%8F%E4%B8%B8%E5%8E%8B%E7%BC%A9%E8%A7%86%E9%A2%91%E8%BD%ACm3u8%E5%BC%82%E5%B8%B8/</guid>
      <description>[TOC]
异常反馈  2 frames left in the queue on closing  Command  原始转换请求转换语句 &amp;gt; /usr/local/ffmpeg/bin/ffmpeg -i /static/cdn/prod/video/38ad11be-f1c7-4dea-9ce0-6ed13a93d906.mp4 -vcodec libx264 -r 24 -vf scale=640:360,pad=640:360:0:0:black -acodec aac -ar 22050 -ab 24k -map 0 -f ssegment -segment_format mpegts -segment_list /static/cdn/prod/video/38ad11be-f1c7-4dea-9ce0-6ed13a93d906_640x360/index.m3u8 -segment_time 10 /static/cdn/prod/video/38ad11be-f1c7-4dea-9ce0-6ed13a93d906_640x360/%04d.ts  Info  /usr/local/ffmpeg/bin/ffprobe -i /static/cdn/prod/video/38ad11be-f1c7-4dea-9ce0-6ed13a93d906.mp4 客户使用「小丸」进行视频压缩，添加末帧图片作为视频流，导致转 M3U8 时缓存不足引起转换失败  理解为 FFMPEG 进行转码时，对各通道流进行同步缓存 而图片流中图片仅存在于末帧，导致需要缓存的数据过多引发如上异常 仅为与同事探讨的可能，如有知情，请烦请知会 &amp;gt; Stream #0:0(und): Video: h264 (High) (avc1 / 0x31637661), yuv420p(tv, bt709/unknown/unknown), 1920x1080, 340 kb/s, 25 fps, 25 tbr, 25 tbn, 50 tbc (default) Stream #0:1(und): Audio: aac (LC) (mp4a / 0x6134706D), 48000 Hz, stereo, fltp, 129 kb/s Stream #0:2: Video: png, rgba(pc), 1920x1080, 90k tbr, 90k tbn, 90k tbc   Ask  ffmpeg -max_muxing_queue_size [bug][regression] Too many packets buffered for output stream Conversion failed!</description>
    </item>
    
    <item>
      <title>调酒</title>
      <link>http://domain.yqjdcyy.com/post/%E8%B0%83%E9%85%92/</link>
      <pubDate>Sat, 03 Mar 2018 18:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E8%B0%83%E9%85%92/</guid>
      <description> [TOC]
Mojito 莫吉托 材料  白郎姆酒 40ml 青柠檬汁 30ml  可用屈臣氏青柠汁替换  薄荷叶 6片 白糖 2茶匙 苏打水  可用屈臣氏苏打水替换  冰块  杯子  海波杯  做法  薄荷叶+ 白糖+ 青柠（檬）汁混合捣碎 加苏打水后，加冰块填满本子 加入郎姆酒后添苏打水至满杯 以薄荷叶或柠檬片装饰  </description>
    </item>
    
    <item>
      <title>富爸爸穷爸爸</title>
      <link>http://domain.yqjdcyy.com/post/%E5%AF%8C%E7%88%B8%E7%88%B8%E7%A9%B7%E7%88%B8%E7%88%B8/</link>
      <pubDate>Thu, 22 Feb 2018 18:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E5%AF%8C%E7%88%B8%E7%88%B8%E7%A9%B7%E7%88%B8%E7%88%B8/</guid>
      <description>富爸爸穷爸爸 课程 富爸爸，穷爸爸  我怎样才能付得起？ 贫穷和破产的区别是：破产是暂时的，而贫穷是永久的。  富人不为钱工作  如果你不能下定决心，就永远也学不会如何赚钱。 在生活推着他转的同时，抓住生活赐予的每个机会； 如果你认为是我的问题，你就会想改变我；如果你认为问题在你那儿，你就会改变自己，学习一些东西让自己变得更聪明。大多数人认为世界上除了自己外，其他人都应该改变。让我告诉你吧，改变自己比改变他人更容易。 老鼠赛跑  学习为钱工作很容易，特别是当你一谈到钱就觉得恐惧时，学习为钱工作就更容易了。 没钱的恐惧会促使他们努力工作，得到报酬后，贪婪或欲望又让他们想拥有所有用钱能买到的好东西。  控制欲望，控制自己  你无需告诉别人你的感觉，只有你自己知道。 人生实际上是在无知和觉醒之间的一场斗争。 忠实于你的感情，以你喜欢的方式运用你的头脑和感情，不要让它们控制你。 你有两种感情——恐惧和欲望，如果你让它们来控制你的思想，你就会落入一生中最大的陷阱。   为什么要教授财务知识  只有知识才能解决问题并创造财富，那些不是靠财务知识挣来的钱也不会长久。 从长远来看，重要的不是你挣了多少钱，而是你能留下多少钱，以及能够留住多久。 聪明人总是雇用比他更聪明的人。 你为别人工作。就像为工资而工作的大多数人一样，你的工作只会使雇主或股东更加富有，你的努力和成功将使雇主更加成功并得以提早退休。 财富就是支撑一个人生存多长时间的能力，或者说，如果我今天停止工作，我还能活多久？ 财富是将资产项产生的现金与支出项流出的现金进行比较而定的。  关注自己的事业  从事你所学的专业的可怕后果在于，它会让你忘记关注自己的事业。人们耗尽一生去关注别人的事业并使他人致富。 只有你把额外的收入用来购买可产生收入的资产，你才能获得真正的财务安全。  不需到场就可以正常运作的业务 股票 债券 能够产生收入的房地产 版税，如音乐、手稿、专利   富人的投资  我们都拥有巨大的潜能——这是上天赏赐的礼物。然而，我们都或多或少地存在着某种自我怀疑的心理，从而阻碍前进的步伐。这种障碍很少是缺乏某种技术性的东西，更多的是缺乏自信。有些人更容易受到外界的影响。 财务知识 投资策略 市场、供给与需求 法律规章 如何寻找其他人都忽视的机会 怎样把精明的人组织起来  学会不为钱工作  财商是会计、投资、市场和法律等各方面知识和能力的综合。  “工作（job）一词就是‘比破产强一点’（just over broke）。” “工人付出最大努力以免于被解雇，而雇主提供最低工资以防止工人辞职。” 在很多情况下，他们贫穷、财务困难或者只能挣到低于他们应得的薪水，不是因为他们已知的东西而是因为他们未知的东西。  这些聪明的年轻人并不去专项钻研某一个部门的业务，而是从一个部门跳到另一个部门，从而学到整个企业各个系统的知识。  能对如何经营一家企业有一个整体的认识，并可以了解不同部门的相互关系。 必需的管理技能  对现金流的管理 对系统（包括你本人、时间及家庭）的管理 对人员的管理。   你在处理人际关系、商务谈判和被拒绝时的恐惧心理等方面做得越好，生活就会越轻松。  开端 克服困难  困难  恐惧心理 愤世嫉俗 懒惰 不良习惯 自负  关键</description>
    </item>
    
    <item>
      <title>小王子</title>
      <link>http://domain.yqjdcyy.com/post/%E5%B0%8F%E7%8E%8B%E5%AD%90/</link>
      <pubDate>Thu, 22 Feb 2018 14:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E5%B0%8F%E7%8E%8B%E5%AD%90/</guid>
      <description> 小王子(65周年纪念版) 旅伴  玫瑰 国王 地理学家 商人 酒鬼 自高自大的人 玫瑰  标注  如果有一个人爱上在这亿万颗星星中仅有的一朵花，这人望着星空的时候，就会觉得幸福。 审判自己，比审判别人难得多。你若是能够公正地审判自己，那你就是一个真正的贤士。 在我看来，你只不过是一个小男孩，跟成千上万的男孩毫无两样。我不需要你，你也不需要我。对你来说我只不过是一只狐狸，跟成千上万的狐狸毫无两样。但是，你如果驯养了我，那么我们俩就彼此相互需要。对我来说，你是世界上独一无二的；我在你看来，也是世界上独一无二的…… 正是因为你为你的玫瑰，花费了时间，才使你的花儿变得那么重要。 无论是房子、星星或沙漠，使它们美丽的东西是看不见的。  </description>
    </item>
    
    <item>
      <title>阅读清单-2018</title>
      <link>http://domain.yqjdcyy.com/post/%E9%98%85%E8%AF%BB%E6%B8%85%E5%8D%95-2018/</link>
      <pubDate>Mon, 12 Feb 2018 18:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E9%98%85%E8%AF%BB%E6%B8%85%E5%8D%95-2018/</guid>
      <description> 技术  Apache Common/ Guava 等常用工具类 JVM Java并发编程实践 Java7&amp;amp; 8 深入Java虚拟机 算法  思考  凯文·凯利  失控  沈君山  浮生三记 浮生再记  丁文江  少数人的责任  黄仁宇  万历十五年  尼尔.波兹曼  娱乐至死  史铁生  我与地坛   金融相关  罗伯特·清崎和莎朗·L·莱希特  穷爸爸与富爸爸  朱宁  投资者的敌人  格林斯潘  动荡的世界：风险、人性与未来的前景   </description>
    </item>
    
    <item>
      <title>知乎架构变迁史</title>
      <link>http://domain.yqjdcyy.com/post/%E7%9F%A5%E4%B9%8E%E6%9E%B6%E6%9E%84%E5%8F%98%E8%BF%81%E5%8F%B2/</link>
      <pubDate>Mon, 12 Feb 2018 12:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E7%9F%A5%E4%B9%8E%E6%9E%B6%E6%9E%84%E5%8F%98%E8%BF%81%E5%8F%B2/</guid>
      <description>知乎架构变迁史 引言  You jump off a cliff and you assemble an aeroplane on the way down. - Reid Hoffman   阶段 上线   选型
 Python.Tornado  Python  简单强大、快速上手、开发效率高、社区活跃  Tornado  支持异步、适合实时Comet应用开发、简单轻量、学习成本低 FriendFeed 的成熟案例 Facebook 的社区支持    优化
 主从延迟  参见参考项「MySQL主从复制延迟的监测及缓解」和「彻底终结mysql同步延迟问题」  资源隔离  图片资源独立部署  内网优化  更换设备  硬盘升级   应用层灵活调用 Redis Shard  github.com/zhihu/redis-shard   工具</description>
    </item>
    
    <item>
      <title>海姆立克急救法</title>
      <link>http://domain.yqjdcyy.com/post/%E6%B5%B7%E5%A7%86%E7%AB%8B%E5%85%8B%E6%80%A5%E6%95%91%E6%B3%95/</link>
      <pubDate>Sun, 11 Feb 2018 18:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E6%B5%B7%E5%A7%86%E7%AB%8B%E5%85%8B%E6%80%A5%E6%95%91%E6%B3%95/</guid>
      <description> 海姆立克急救法 参考  海姆立克急救法  简介  海姆立克急救法（Heimlich Maneuver），又名“海氏急救法” 美国医师亨利·海姆力克（Henry J·Heimlich）1974年发明的一套利用肺部残留气体，形成气流冲出异物的急救方法。  手法 成人  急救者首先以前腿弓，后腿登的姿势站稳，然后使患者坐在自己弓起的大腿上，并让其身体略前倾 将双臂分别从患者两腋下前伸并环抱患者 左手握拳，右手从前方握住左手手腕，使左拳虎口贴在患者胸部下方，肚脐上方的上腹部中央，形成“合围”之势，然后突然用力收紧双臂，用左拳虎口向患者上腹部内上方猛烈施压，迫使其上腹部下陷   婴幼儿  幼儿趴在自己大腿上，面向地板，身体和头部向下倾斜 一手拖住宝宝的颈部，另一手拍击宝宝两侧肩胛骨中间，观察异物是否吐出 否则将幼儿转身面朝上，头部稍微向下倾斜，手指并拢胸骨下凹陷按5下 随时观察孩子嘴里有没有东西出来，如果有东西，救护应该用手指将异物勾取出来，千万不要捅   自救  无工具
 一只手握拳，并用大拇指的一侧顶住上腹部，在肋弓之下肚脐之上 用另一只手抓住握拳的那只手，并迅速用力向上挤压 重复动作，直至导致窒息的物体排出  有工具
 依靠在一个固定的水平物体上（如桌子边缘、椅子、扶手等） 用物体的边缘对上腹部施压，制造出强大的向上冲击力 重复挤压，直至导致窒息的物体排出    注意事项  尤其对老年人，因其胸腹部组织的弹性及顺应性差，故容易导致损伤的发生  如腹部或胸腔内脏的破裂、撕裂及出血、肋骨骨折等 应首先采用其他方法排除异物，在其他方法无效且患者情况紧急时才能使用该法。   </description>
    </item>
    
    <item>
      <title>扫描二维码自动连接WIFI</title>
      <link>http://domain.yqjdcyy.com/post/%E6%89%AB%E6%8F%8F%E4%BA%8C%E7%BB%B4%E7%A0%81%E8%87%AA%E5%8A%A8%E8%BF%9E%E6%8E%A5wifi/</link>
      <pubDate>Sat, 10 Feb 2018 16:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E6%89%AB%E6%8F%8F%E4%BA%8C%E7%BB%B4%E7%A0%81%E8%87%AA%E5%8A%A8%E8%BF%9E%E6%8E%A5wifi/</guid>
      <description> 扫描二维码自动连接WIFI 参考  想更优雅地分享 Wi-Fi 密码，只需一枚二维码 Wifi Network config  场景  手机扫描二维码，自动弹出「连接 WI-FI」建议  连接指令  WIFI:T:【加密类型】;S:【Wi-Fi 名称】;P:【你的密码】;;  例  WIFI:T:WPA2;S:Z905;P:nd123456;;   指定协议支持，可参考 PC 端的 mailto: 指令  推荐 IOS  使用 EFQRCode 创建二维码  支持 GIF 等形式   注意事项  需要支持 zxing 提出的「Wifi Network config (Android)」编码形式  支持该类编码的设备，捕获到如上指令时则自动弹出「加入 WI-FI」的建议  需要在 WI-FI 覆盖范围内  </description>
    </item>
    
    <item>
      <title>IDEA.快捷键</title>
      <link>http://domain.yqjdcyy.com/post/idea.%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <pubDate>Thu, 08 Feb 2018 18:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/idea.%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <description> [TOC]
参考  http://www.cnblogs.com/tonycody/p/3257601.html http://www.importnew.com/15462.html  快捷键 包、结构或视图  Alt+回车 导入包,自动修正 Ctrl+Alt+O 优化导入的类和包 Ctrl+E 最近打开的文件 Ctrl+H 显示类结构图，比如查看实现类 Ctrl+Q 显示注释文档 Alt+F1 查找代码所在位置 Alt+1 快速打开或隐藏工程面板 Ctrl+Alt+ left/right 返回至上次浏览的位置 Alt+ left/right 切换代码视图  文件操作和视图  Ctrl+N 查找类 Ctrl+Shift+N 查找文件 Ctrl+Shift+Alt+N 查找类中的方法或变量 Ctrl+F12 显示当前类结构 ctr+G 定位某一行 Alt+ Up/Down 在方法间快速移动定位
 Alt+F1 查找代码所在位置 Ctrl+O，显示可重载方法 Ctrl+Q，查看方法定义；而Ctrl+P 查看参数定义  代码相关  Ctrl+Alt+L 格式化代码 Ctrl+Alt+Space 类名或接口名提示 Alt+Insert 生成代码(如get,set方法,构造函数等) Ctrl+Shift+Space 自动补全代码 Ctrl+空格 代码提示 Ctrl+/ 或 Ctrl+Shift+/ 注释（ 或者/&amp;hellip;/ ） Ctrl+ Alt+ T，用指定方法体围绕代码行 Ctrl+Shift+Up/Down 代码向上/下移动。 F2 或Shift+F2 高亮错误或警告快速定位 Ctrl+Shift+先上键 将该功能代码上移 Ctrl+X 删除行 Ctrl+D 复制行 Ctrl+J Live Templates列表 选中变量后按 Alt+F7，可以查看该变量的所有应用场景 Ctrl+B，跳转至对应类 Ctrl+Alt+B，显示接口相应的实现类 Ctrl+Shift+ Alt+ U，显示类关系图 Ctrl-Shift-Backspace，可切换回之前修改的代码处  文字类型相关  Shift+F6 重构-重命名 ctr+shift+U大小写转化 代码标签输入完成后，按Tab，生成代码。 选中文本，按Ctrl+Shift+F7 ，高亮显示所有该文本，按Esc高亮消失。 选中文本，按Alt+F3 ，逐个往下查找相同文本，并高亮显示。 Ctrl+Up/Down 光标跳转到第一行或最后一行下 Ctrl+W 向上层级代码选中 Ctrl+Shift+J，自动缩进合并多行代码  Debug 相关  alt+f8 debug时选中查看值 f8相当于eclipse的f6跳到下一步 shift+f8相当于eclipse的f8跳到下一个断点，也相当于eclipse的f7跳出函数 f7相当于eclipse的f5就是进入到代码 alt+shift+f7这个是强制进入代码 ctrl+shift+f9 debug运行java类 ctrl+shift+f10正常运行java类 command+f2停止运行  </description>
    </item>
    
    <item>
      <title>彻底终结MySQL同步延迟问题</title>
      <link>http://domain.yqjdcyy.com/post/%E5%BD%BB%E5%BA%95%E7%BB%88%E7%BB%93mysql%E5%90%8C%E6%AD%A5%E5%BB%B6%E8%BF%9F%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 07 Feb 2018 18:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E5%BD%BB%E5%BA%95%E7%BB%88%E7%BB%93mysql%E5%90%8C%E6%AD%A5%E5%BB%B6%E8%BF%9F%E9%97%AE%E9%A2%98/</guid>
      <description>彻底终结MySQL同步延迟问题 参考  彻底终结MySQL同步延迟问题 Binary Logging Options and Variables Estimating potential for MySQL 5.7 parallel replication  版本  MySQL.Version  5.7  Storage.Engine  TokuDB   影响因素 网络  主机或者从机的带宽打满 主从之间网络延迟很大  机器性能  从机使用了烂机器
 比如主机使用SSD而从机还是使用的SATA  从机高负载
 很多业务会在从机上做统计，把从机服务器搞成高负载 使用 top 查看使用情况  从机磁盘有问题
 检查磁盘、raid卡、调度策略  raid卡电池充放电的时候，在没有设置强行write back的情况下得会将write back模式修改为write through。  使用 iostat 命令查看 DB 数据盘的 IO 情况，是否是单个 IO 的执行时间很长，块大小和磁盘队列情况等，   大事务  检查是否经常有大事务  在RBR模式下，执行带有大量的delete操作 在MBR模式下删除的时候添加了不确定语句（类似limit）， 一个表的alter操作等  通过查看 processlist 相关信息 使用 mysqlbinlog 查看 binlog 中的 SQL 就能快速进行确认  锁  检查锁冲突  从机上有一些 select .</description>
    </item>
    
    <item>
      <title>美国-夏威夷</title>
      <link>http://domain.yqjdcyy.com/post/%E5%A4%8F%E5%A8%81%E5%A4%B7%E4%B9%8B%E6%97%85/</link>
      <pubDate>Tue, 06 Feb 2018 18:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E5%A4%8F%E5%A8%81%E5%A4%B7%E4%B9%8B%E6%97%85/</guid>
      <description> 夏威夷 参考  ALOHA! 夏威夷之旅  路线  夏威夷大岛（Islandof Hawaii） 茂宜岛（Maui） 欧湖岛（Oahu）檀香山  夏威夷大岛 - 火山  由两座活火山组成，分别为基拉韦厄（ Kilauea）和冒那罗亚（Mauna Loa） 路线
 火山国家公园  火山口链路  雨林 海岸  越野十英里 岩浆活跃区   赏析
                 茂宜岛  路线
 Kahului市 海纳之路 山顶牧场 哈雷阿卡拉死火山口 观鲸  赏析
                   欧湖岛  赏析        </description>
    </item>
    
    <item>
      <title>阿里为什么不去清华招人？</title>
      <link>http://domain.yqjdcyy.com/post/%E9%98%BF%E9%87%8C%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%8E%BB%E6%B8%85%E5%8D%8E%E6%8B%9B%E4%BA%BA/</link>
      <pubDate>Tue, 06 Feb 2018 18:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E9%98%BF%E9%87%8C%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%8E%BB%E6%B8%85%E5%8D%8E%E6%8B%9B%E4%BA%BA/</guid>
      <description>阿里为什么不去清华招人？ 参考  阿里为什么不去清华招人？｜草铺半生  整理 卫哲  29岁，成为普华永道史上最年轻的合伙人之一 32岁，担任百安居中国区总裁，也是最年轻的世界500强中国区总裁 36岁，执掌阿里巴巴 嘉御基金的创始人，管理着10亿美金的资产  示例   微软.Steve Ballmer  我们和苹果竞争，和索尼竞争，和 Cisco 竞争，和 Oracle 竞争，我们是如何跟他们斗争的，又如何消灭他们的。 Steve Ballmer 下台，第二天股票涨了7%。微软的 7% 是多少？相当于300亿美金。  谷歌.Larry Page  NASA（美国宇航局）、Obama administration（奥巴马政府）  阿里巴巴  2005年,工程师和销售的离职率 10%/ 月。    招聘建议 不轻易下放招聘权  阿里巴巴刚创建的时候，大概在公司 400-500 人的时候，任何人加入公司，马云都要见，亲自面试。任何人，包括我们的前台接待，包括我们公司的保安。 因为你没有招对人，你没有把时间放在招聘上，形成了恶性循环。因为招的人不行，你要替他们去干，他们本来该干的事。 很多跨国公司，至少坚持跨两级招人，阿里巴巴一度恢复到跨四级招人。  重视专业技能以外的考核  业务技能很简单，很好判断。 因为人的分类没有对错。错的是什么呢？  是不同类的人，天天要坐在一起，天天要在一起共事。可想而知，心情不愉快，工作效率低。 &amp;gt; 同学，你能不能跟我描述一下，你这辈子吃的最大的苦是什么？ 同学，你能不能跟我讲讲，你这辈子吃过的最大的亏是什么？   跨一两级选拔人才  平凡的人做非凡的事情，我们不追求精英文化 你要招一个月薪大约1万的人，我们通常就在 8000-10000 里面去挑。结果来了以后，这些人的流失率很高，因为他们会认为，我原来挣 8000 ，跳槽后挣 10000 很正常。 你要在三四千块里面，挑出来一个你愿意付1万块的人，你大概要看三四十个人，但一定会有的，我相信一定会有的。 阿里很多最优秀的工程师，都是武汉邮电、华中科技这些大学招聘过来的  别总讲规模，多谈谈效率  互联网最大的作用就是提升效率。 商业的本质，除了增长以外还有效率。    晚餐补助，通过领导审批通过后领取饭票。一顿晚饭公司出15块钱。但  问题一：谁也没有规定工作到几点以后是加班。 问题二：我们从来没有去想，每天五、六千个人，提加班申请，主管批准，发一张券，这个动作，花了多少时间，花了多少钱。  取消报批制  一年下来，大概前一年加班餐费在1400万左右，年末多了大概100万，变成1500万了。而流程中节省人员时间等消耗，远超过100万。     提高个人效率，除了自我激励以外，不要有太多级约束。  人不是成本，人应该是投资   苹果公司这么一个技术公司，把奢侈品牌巴宝莉（Burberry） 的 CEO 找来做实体零售业的负责人 苹果店的存在，就是体验。所以苹果本身就是一种新零售 一定要对原有的零售门店加以再利用。  第一，房租成本，租金不能降低； 第二，人工成本，没法降低。     人均产出大幅度上升，每平米产出（坪效）大幅度上升。  如何让我们的公司变得好玩？  硅谷创业公司也好，大公司也好，见面第一句话，不是互相问“你们这的期权多少？”； 见面第一句话都是“你们那午饭怎么样？”“你们那的中餐水平怎么样？”</description>
    </item>
    
    <item>
      <title>设计模式</title>
      <link>http://domain.yqjdcyy.com/post/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Fri, 02 Feb 2018 17:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid>
      <description>[TOC]
设计模式 参考  《HEAD_FIRST 设计模式》 图说设计模式 design pattern 包教不包会  设计原则  找出应用中可能需要变化之处，把它们独立出来，不要和那些不需要变化的代码混在一起  系统中某部分改变不会影响其它部份  针对接口编程，而不是针对实现编程  变量声明为抽象或接口，执行时动态赋值  多用组合，少用继承 为了交互对象之间的松耦合设计而努力 类应该对扩展开放，对修改关闭  根据业务和重要性，来取舍是否  依赖倒置原则  要依赖抽象，不要依赖具体类  变量不可以持有具体类的引用  工厂  不要让类派生自具体类  派生至接口或抽象类  不要覆盖基类中已实现的方法  避免破坏基类中被继承的抽象    最少知识原则  减少对象之间的交互  好莱坞原则  别调用（打电话给）我们，我们会调用（打电话给）你 避免高、低层组件的相互依赖，导致依赖腐败 低层组件挂靠在高层组件，高层组件决定调用时机和方式  单一责任原则  一个类应该只有一个引起变化的原因 高内聚  一个模块或一个类，被设计仅支持一组相关功能时    设计模式 策略模式  定义  定义算法族；分别封装后，让它们之间相互替换 行为被封装进一组类中，并于需要时动态改变  UML     观察者模式  定义  定义对象之间的一对多依赖；当一个对象状态改变时，所有依赖者都会收到通知并自动更新  Java.</description>
    </item>
    
    <item>
      <title>区块链技术浅识</title>
      <link>http://domain.yqjdcyy.com/post/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E6%B5%85%E8%AF%86/</link>
      <pubDate>Tue, 30 Jan 2018 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E6%B5%85%E8%AF%86/</guid>
      <description>区块链技术浅识 参考  区块链技术  前情  存在着各种互相孤立的数据系统及运作体系，这极大地影响了金融市场效率的进一步提升。 在世界银行的报告中，跨国汇款的成本接近 8%。 金融机构之间不能够无条件地信任对方，造成了金融领域数据孤岛的现象，进而导致了数字资产在互联网上流通成本居高不下。  特点  比特币系统就是基于区块链的记账机器；以太坊就是基于区块链的智能合约机器等等。 信任秘诀在于区块链的加密、公开且不可篡改的特性：  加密  区块链技术是以密码学和数学为基础的，这是信任的根本。  包括，椭圆曲线数字签名算法、非对称加密、哈希函数、梅克尔树等等。   公开  公开是赢得信任的最好手段。 基于区块链技术的系统的规则(程序)和数据都是公开的。 任何参与方都可以通过运行区块链的程序的方式加入进来，进而对数据进行验证。 在自己能验证，也能依靠第三方进行验证情况下，自己验证更可靠；  不可篡改  区块链技术不可篡改的特性，是数字资产不可复制的基础 删、改的操作的可行性几乎为零。  原理 状态机  比如以太坊系统，实际上就是多个节点维护同一个账本。 记账机器会在账本上记录每笔交易的信息。通过初始时各个账户的余额和已记录的信息，就可以推断出任意时刻的各个账户的余额。 区块链记账机器完成记账功能的基本原理是：状态机 &amp;gt; 在 state1 时，A B 都有 100；A 发起了一笔交易，支付 100 给 B，而这笔交易会被区块链系统记录下来。 我们可以通过 state1 的账户余额和区块链上的交易记录，计算出 state2 时 A B 的账户余额：A 有 50，B 有 150。  双重支付 描述  去中心化记账过程中遇到的双重支付的问题  双重支付就是同一笔钱可用于两次支付 &amp;gt; A 将 100 元，既支付给 B，又支付给 C。如果出现这种情况，A 就相当于把 100 元钱，当做 200 元钱来花了。 在中心化的记账系统中，无论这两笔交易是否同时进行，中心化的记账系统处理这两笔交易一定会有一个先后顺序。 去中心化的记账系统中的一些节点会先收到 B 的交易信息；另一些节点会先收到 C 的这笔交易信息。在去中心化的记账系统中，所有节点都是平等的。   处理  确定交易信息的先后顺序；</description>
    </item>
    
    <item>
      <title>恩佐·法拉利博物馆</title>
      <link>http://domain.yqjdcyy.com/post/%E6%81%A9%E4%BD%90%E6%B3%95%E6%8B%89%E5%88%A9%E5%8D%9A%E7%89%A9%E9%A6%86/</link>
      <pubDate>Tue, 30 Jan 2018 20:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E6%81%A9%E4%BD%90%E6%B3%95%E6%8B%89%E5%88%A9%E5%8D%9A%E7%89%A9%E9%A6%86/</guid>
      <description> 恩佐·法拉利博物馆 参考  恩佐·法拉利博物馆 List of Ferrari competition cars  简介 经典车型  GTO F40 F50 EnzoFerrari LaFerrari  经典系列  250 系列 Dino  经典赛车 F40  1987年在法兰克福车展首次亮相 庆祝建厂40周年而设计的 第一台时速能超过320km/h（最高极速324km/h）的民用跑车 创始人恩佐法拉利带领他的设计制造团队完成的最后一部法拉利作品   GTO  品牌释义是“天地之间，任我驰聘” 于1962年推出的250 GTO曾经横扫GT类比赛   F50  纪念建厂50周年发布了旗舰级超级跑车   Enzo  作为法拉利F50的替代品 于2002年制造，采用12缸中置引擎 采用了大量F1的技术，并配备F1的顺序换档变速箱和超大的碳纤陶瓷刹车碟 舒马赫也参加了该车的开发 官方0-100km/h加速为3.65s 极速则达到了350km/h以上   LaFerrari  于2013年3月在日内瓦车展首次亮相 限量499台 0-100km/h加速时间&amp;lt;3 秒。极速高达350km/h以上   F60America  庆祝北美分公司成立60周年推出 限量发售10台，售价高达$320万美元   Ferrari Superamerica  兼备法拉利12缸berlinetta的卓越性能以及多功能敞篷车上各种独创设计的优点 首个采用创新型旋转车顶的跑车 采用了专为大型玻璃表面研发的电致变色技术，在数秒之内即可将车辆从双门小轿车变身为敞篷跑车。   </description>
    </item>
    
    <item>
      <title>第二届创始人代表大会</title>
      <link>http://domain.yqjdcyy.com/post/%E7%AC%AC%E4%BA%8C%E5%B1%8A%E5%88%9B%E5%A7%8B%E4%BA%BA%E4%BB%A3%E8%A1%A8%E5%A4%A7%E4%BC%9A/</link>
      <pubDate>Mon, 22 Jan 2018 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E7%AC%AC%E4%BA%8C%E5%B1%8A%E5%88%9B%E5%A7%8B%E4%BA%BA%E4%BB%A3%E8%A1%A8%E5%A4%A7%E4%BC%9A/</guid>
      <description>第二届创始人代表大会 流程  14:00  集合  14:30  各人发言  针对产品和公司的想法 现阶段的阻碍和思考 冲刺方向的准备   15:00  问答规类  公司形态 战略方向 流程合理化 996 等相关企业文化  三巨头逐一回答  19:00  晚餐  19:30  三巨头继续回答  23:30  散会   初步结果 反思 个人  诉求
 情感  部分人需要的是认同感 部分人需要的是参与感 部分从暂无相关表述  工作内容  已放弃，或者更努力接受许式伟提及的服务观念  技术人员应该考虑你提供的是一项服务，而不是一项特有的技术 实现优先，技术权衡    定位
 位置决定你以什么角度来思考 而给予对应定位的权利和利益后，你才会认可并真正坐到这个位置  敌视态度
 恋爱般错误合作观  三巨头对于其它合伙人的态度不容乐观  发言时，A对其它人发言时的表情、眼神 期间提到B对于家人的关爱和三巨头之间的交流沟通甚密之事，理解其实是可以做到的，但不需要对你做 对于真正诉求，不具备耐心；仍然存在辩论过于讨论  长达八小时的会议，毫无成果的讨论  对比携程的反思讨论会  200人3小时 下级直接对 CEO 提出尖锐的问题，及得到的经过认真思考的回复     个人对于公与私的要求或期望过于模糊、过界  期间数次情绪无法自控  好听点，是对团队仍存在依赖和信赖 不好听，个人情商、情商严重不足，对于其中的游戏规则思考不足  毕竟害人之心不可有，防人之心不可无！ 建议下次携带笔记本，做笔记转移、思考    个人主动越级沟通？  思考位置不同，深度和思考范围不同 对方是否想听这方面的意见，你需要自觉听懂客套话 所以想到半夜三点时，我放弃了  因为觉得根本上的原因，他并不想听    期权、股权  请配合定位进行，除了个人定位问题，觉得三巨头在对其它人的定位上，也存在着如上的问题 历史  2016.</description>
    </item>
    
    <item>
      <title>伏特加</title>
      <link>http://domain.yqjdcyy.com/post/%E4%BC%8F%E7%89%B9%E5%8A%A0/</link>
      <pubDate>Fri, 19 Jan 2018 17:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E4%BC%8F%E7%89%B9%E5%8A%A0/</guid>
      <description> [TOC]
伏特加 参考  无论打冷战还是“冷战”，伏特加永不退场！！  Banya桑拿浴  美国大厨兼作家安东尼伯尔顿 &amp;gt;在气温零度的日子，湖边小浴场最适合这种桑拿浴——你要先在长凳上趴好，被拿着一捆泡过水的白桦树枝，对你的背部一顿猛抽。 当你被抽得浑身发烫，每个毛孔都张开之时，开门直通结冰的湖面，这时你要瑟瑟发抖地穿过冰湖到达对面 你的奖励是一杯伏特加。   定义  伏特加是可由一切农作物制成的烈酒，一般是谷物与马铃薯。  发酵完成后的发酵液经柱式蒸馏器蒸馏成不低于95度的中性酒精，以优质水源稀释至40度左右。  俄罗斯当代作家叶罗菲耶夫 &amp;gt; 对于俄罗斯人来说，喝伏特加的过程不是最重要的，结果才是，你甚至可以把伏特加注射到你的静脉里。  战争  战争中的必需品  原料中必须含有足够的谷物和马铃薯 二战时期，军方给每名士兵每天派发100毫升伏特加，坦克兵200毫升。  弗拉基米尔一世当年决定推行东正教的一大原因就是其他宗教不允许喝酒。   电影 极寒之城  查理兹·塞隆 Lorraine从倒满冰块的浴缸里出来，随手捞出几块冰扔进脚边的玻璃杯里，倒酒，举杯，一饮而尽。  背景音乐  David Bowie The Queen George Michael Nena     推荐 Tito’s Handmade Vodka  产地  美国  味道  美国手工伏特加的先驱者，以玉米为原料，有着独特的甜玉米、蘑菇、白胡椒般的气息。    Sipsmith Barley Vodka  产地  英国  味道  以英国麦芽为原料，小规模铜质蒸馏器蒸馏，未经过滤，有着圆润的香草与饼干滋味。    Black COW Pure Milk Vodka  产地  英国  味道  100%全脂奶发酵后蒸馏而来的伏特加，在辛辣之余多一层迷人的奶香。    </description>
    </item>
    
    <item>
      <title>许式伟</title>
      <link>http://domain.yqjdcyy.com/post/%E8%AE%B8%E5%BC%8F%E4%BC%9F/</link>
      <pubDate>Thu, 18 Jan 2018 17:30:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E8%AE%B8%E5%BC%8F%E4%BC%9F/</guid>
      <description>参考  许式伟：十一年逆流顺流，首席架构师到CEO  问答 创业公司做这种重大决策要冒很大风险，能不能谈谈做这些决策背后的思路？  选择和信息的对称程度有关系。  当你越不了解一个东西，越会趋向选择保守性的方案，而当你对某个领域了解得足够透彻，你的决策过程会非常自然。 当你深入研究了新技术的思考方式，以及它要解决的问题，就会知道它和自己要解决的问题有多大的相关性。  Go把其全新的编程理念，称为[面向连接的语言]    不迷信权威，独立思考的思维方式，是从什么时候形成的？这种思维方式给你带来了哪些益处？  凡事都要问个为什么，要有打破沙锅问到底的精神，不可人云亦云。 这个世界没有学科之分，计算机、代数、物理，并没有非常明显的边界。 想用更低的成本去存，就要用到域代数。从这10份数据里取出一份校验数据，数据变成了11份，它的冗余度是1.1。  存储的未来还会有哪些趋势？  如何能让存储系统在常温、不耗能的情况下运行，是接下来我们要面临的一个重要问题。 创业是一个不断降低不确定性的过程，刚开始创业的时候，充满了各种不确定性和不可控性，但不能停滞不前。 对针对数据的使用场景，帮助客户做标准化处理，实现数据价值的最大化。 目前存储最多的数据是图片，图片用户的典型使用场景，是需要不同尺寸的缩略图，我们提供了这样的功能，用户就省心多了，不用去重复去建设这个过程。  毕业后仅用2年时间，就成为WPS的首席架构师，这个过程是如何实现的？  分配给我的任务，是软件的读盘和存盘模块。  要求你理解软件的所有功能，以及每个功能的数据表达方式。 软件系统最核心的东西——数据。顺着这条线索，我研究了微软Office各个功能模块的数据存储方式，据此修改原有软件的设计。 为了实现对微软Office文件格式的兼容，I/O成了战略层面的技术，存盘功能从边缘模块，一下变成了整个WPS研发的核心模块。 随着对存储更深入的理解，我们在软件架构层面做出了创新，引入了一个数据层，抽象出所有数据的存储过程。 数据层带来的好处，是让所有的数据天然可回滚，可以轻松支持多版本存盘、Undo/Redo（撤销/重做），以及各种异步操作。  任何一件事情，想要做到极致，必须把它当成一个学科来研究，把它琢磨透。  金山向互联网转型的这个阶段，也是你自己职业生涯中很痛苦的阶段，你是如何度过的？  如果产品无法让最终用户买单，从某种意义上说，你的价值并没有被认证。 2006年是我成为产品人的开始，一下子感觉到光有技术真的不行，必须理解业务及其运作方式，思考产品和商业的关系。  一方面广泛参加行业里的会议、沙龙，找不同朋友聊产品方向。 另一方面，我做了一个技术社区ECUG，探讨Server端相关技术演进。这期间，我逐渐跳出办公，横向接触其它领域。   后来你离开金山去盛大，又经历了哪些故事？  执行得不如预期，同时高层有一些不好的声音，认为这个部门短期难以见到利益。 盛大创新院，但在早期，就已经有迹象能看出来它做不成。  样板还没树立起来，就急速扩张。 整个创新院的扶持职能一直没有形成，某些做法甚至对创业有抑制作用。   七牛创立过程中遇到过哪些困难？你怎么看待云计算领域的竞争？  七牛2011年6月正式成立，一开始的产品方向是网盘，9月中旬产品发布，10月决定转向底层存储，期间就花了一个月思考。  当时国内云计算环境还不够好，七牛如果做网盘，很难找到一个第三方存储供应商。 团队的基因偏极客，对终端用户并不那么了解，如果不清楚用户的喜好和习惯，很难做出打动他们的产品。  今天我对竞争的考虑比以前要成熟，在金山的时候，眼里光盯着微软，这其实是不对的。  任何一个新兴的东西，都在颠覆旧有的秩序。 真正的思考应该关注：用户群体为什么需要我们？以及我们到底在颠覆什么？  应该考虑你到底要做什么，再考虑你应该如何做。  从技术到管理是一道坎，你从什么时候开始对管理产生兴趣？  小team自然而然会形成好的协同方式  不要过度优化 企业运营过程也类似，你得观察公司当前的门槛是什么，有针对性地去做优化。  创业团队发展必然经过研发、营销、管理这三大门槛，创始人在不同阶段，关注的侧重点会有所不同。</description>
    </item>
    
    <item>
      <title>ImageMagick</title>
      <link>http://domain.yqjdcyy.com/post/imagemagick.basic/</link>
      <pubDate>Thu, 18 Jan 2018 15:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/imagemagick.basic/</guid>
      <description>[TOC]
ImageMagick Reference  官网  Anatomy  convert|composite|montage|compare|import|conjure [input filenames] [image settings] [image operators] [sequence operators] [stacks] [output image filenames]  Input FileNames FileName Globbing  Analysis  pattern match about */?  Example
 convert *.jpg images.gif
Explicit Image Format  Analysis
 specified a explicit image format is better than in the case of the image donot contain a signature of identify format  Example
 convert -size 640x480 -depth 8 rgb:image image.</description>
    </item>
    
    <item>
      <title>Linux.Crontab</title>
      <link>http://domain.yqjdcyy.com/post/linux.crond/</link>
      <pubDate>Wed, 17 Jan 2018 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux.crond/</guid>
      <description>Linux.Crontab 参考  每天一个linux命令（50）：crontab命令  简介  用来周期性的执行某种任务或等待处理某些事件的一个守护进程 系统任务调度
 系统周期性所要执行的工作，比如写缓存数据到硬盘、日志清理等 /etec/crontab
SHELL=/bin/bash # 指定 Shell 版本 PATH=/sbin:/bin:/usr/sbin:/usr/bin # 指定系统执行命令的路径 MAILTO=&amp;quot;&amp;quot; # 指定 crond 任务执行消息将通过指定邮件发送给 root 用户 HOME=/ # 指定在执行命令谨脚本时使用的主目录 # run-parts 51 * * * * root run-parts /etc/cron.hourly 24 7 * * * root run-parts /etc/cron.daily   用户任务调度
 用户定期要执行的工作，比如用户数据备份、定时邮件提醒等 /var/spool/cron   配置  /etc/cron.deny  列举不允许使用 crontab 命令的用户  /etc/cron.allow  列举允许使用 crontab 命令的用户  /var/spool/cron/  所有用户 crontab 文件存放的目录   格式  minute hour day month week command  字段  minute  0- 59  hour  0- 23  day  1- 31  month  1- 12  week  0- 7  0和 7 均代表星期天   command  可选项  *  所有可能值  ,  值列表，如 1,2,5,7  -  值范围，如 2-6  /  指定间隔频率，如 */10，表示每隔十分钟执行一次   说明      服务  /sbin/service crond [start|stop|restart|reload|status] ntsysv  查看服务是否设置为开机启动  chkconfig -level 35 crond on  将 crond 加入开机自动启动  ntsysv | chkconfig --list  查看 crond 是否已添加至开机启动  chkconfig –level 35 crond on  将 crond 添加至开机启动 本地尝试无果   格式  crontab [-u user] file crontab [-u user] [-l | -r | -e] [-i] [-s] crontab -n [ hostname ] crontab -c  参数  -u &amp;lt;user&amp;gt;  调用指定用户 &amp;lt;user&amp;gt; 名下的定时任务  -l  于标准输出流中展示当前的定时任务列表  -r  移除当前定时任务  -e  以 视图 或 编辑器 编辑，并于离开编辑器时，修改的定时任务将自动被安装  -i  配合 -r 使用，用于删除前的提示，避免误操作  -s  于定时任务编辑或替换发生前，追加安全内容字符串作为 MLS_LEVEL 设置  -n  配合 -c 使用，支持集群 设置集群主机，用于运行 /var/spool/cron 下的定时任务 若提供主机名被匹配，将被选择运行指定的定时任务；若无主机匹配，则定时任务不再运行；而若主机名被忽略，则当前主机升级为默认主机 参数不影响 /etc/crontab 和 /etc/cron.</description>
    </item>
    
    <item>
      <title>约翰·帕森</title>
      <link>http://domain.yqjdcyy.com/post/%E7%BA%A6%E7%BF%B0-%E5%B8%95%E6%A3%AE/</link>
      <pubDate>Tue, 16 Jan 2018 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E7%BA%A6%E7%BF%B0-%E5%B8%95%E6%A3%AE/</guid>
      <description> [TOC]
约翰·帕森 简介  John Pawson，极简主义之父，师从传奇设计大师仓俣史朗  参考  极简主义大师：约翰·帕森  风格  极简主义  作品  Moritzkirche教堂 以色列特拉维夫W酒店样板房 Hotel Puerta Picornell House St Tropez Houses North Sea Apartment  赏析              </description>
    </item>
    
    <item>
      <title>Linux.Expect</title>
      <link>http://domain.yqjdcyy.com/post/linux.expect/</link>
      <pubDate>Tue, 16 Jan 2018 16:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux.expect/</guid>
      <description>Linux.Expect 参考  expect spawn、linux expect 用法 expect spawn、linux expect 用法小记  作用  代替实现与终端的交换，根据系统的输出运行相应的命令 需要 Tcl 编程语言的支持  参数 Run  -c  在命令行中直接执行  i  脚本把多个参数当成一个连续的列表 事例  expect -i arg1 arg2 arg3   d  输出调试信息  D|Debug
 用于是否立即启动调试器，后面接入参数 0/1 事例
 expect -c &#39;set timeout 10&#39; -D 1 -c &#39;set a 1&#39;
 优先执行 set timeout 10 调适器启动后执行 set a 1
SPAWN    -re</description>
    </item>
    
    <item>
      <title>UML</title>
      <link>http://domain.yqjdcyy.com/post/uml/</link>
      <pubDate>Mon, 18 Dec 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/uml/</guid>
      <description> [TOC]
UML 参考  看懂UML类图和时序图  大纲    使用  StarUML  UML.mdj   </description>
    </item>
    
    <item>
      <title>Linux.Lsof</title>
      <link>http://domain.yqjdcyy.com/post/linux.lsof/</link>
      <pubDate>Mon, 11 Dec 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux.lsof/</guid>
      <description>参考  lsof 一切皆文件  功能  查看当前系统文件的工具 支持文件类型  普通文件 目录 网络文件系统的文件 字符或设备文件 函数共享库 管道、命名管道 符号链接 网络文件（NFS、Socket）   参数  -a  列出打开文件存在的进程  -c &amp;lt;进程名&amp;gt;  列出指定进程所打开的文件  -g  列出GID号进程详情  -d &amp;lt;文件号&amp;gt;  列出占用该文件号的进程  +d &amp;lt;目录&amp;gt;  列出目录下被打开的文件  +D &amp;lt;目录&amp;gt;  递归列出目录下被打开的文件  -n &amp;lt;目录&amp;gt;  列出使用NFS的文件  -i &amp;lt;条件&amp;gt;  列出符合条件的进程。（4、6、协议、:端口、 @ip）  -p &amp;lt;进程号&amp;gt;  列出指定进程号所打开的文件  -u  列出UID号进程详情  -h  显示帮助信息  -v  显示版本信息   示例  lsof | more  Result | COMMAND | PID | TID | USER | FD | TYPE | DEVICE | SIZE/OFF | NODE | NAME | |&amp;mdash;&amp;mdash;&amp;mdash;-|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;|&amp;mdash;&amp;ndash;|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;|&amp;mdash;&amp;mdash;&amp;mdash;-|&amp;mdash;&amp;mdash;&amp;mdash;-|&amp;mdash;&amp;mdash;&amp;mdash;-|&amp;mdash;&amp;mdash;&amp;mdash;-|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;| | 进程名称 | 进程标识符 | | 进程所有者 | 文件描述符 | 文件类型 | 指定磁盘 | 文件大小 | 索引节点 | 打开文件的确切名称 | | systemd | 1 | | root | cwd | unknown | | | | /proc/1/cwd(readlink: Permission denied) | FD  cwd  表示current work dirctory，即应用程序的当前工作目录，这是该应用程序启动的目录，除非它本身对这个目录进行更改  txt  该类型的文件是程序代码，如应用程序二进制文件本身或共享库，如上列表中显示的 /sbin/init 程序  lnn  library references (AIX);  er  FD information error (see NAME column);  jld  jail directory (FreeBSD);  ltx  shared library text (code and data);  mxx  hex memory-mapped type number xx.</description>
    </item>
    
    <item>
      <title>网络-七层协议</title>
      <link>http://domain.yqjdcyy.com/post/%E7%BD%91%E7%BB%9C-%E4%B8%83%E5%B1%82%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Fri, 08 Dec 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E7%BD%91%E7%BB%9C-%E4%B8%83%E5%B1%82%E5%8D%8F%E8%AE%AE/</guid>
      <description>参考  深入浅出－网络七层模型&amp;amp;&amp;amp;网络数据包 网络七层协议  定义  网络七层协议，理论模型 OSI（Open System Interconnection）    分层 应用层  直接为应用进程提供服务  根据提供的特性分组，称为服务元素  公共应用服务元素 CASE  所有用户可用，主要为应用进程通信，分页系统的基本控制机制  特定应用有服务元素 SASE  特定服务，如文卷传送、访问管理、银行业务等    示例  HTTP FTP SMTP/ POP3/ IMAP4 TELNET   表示层  定义数据格式、加密  如 FTP 下可选择以二进制或 ASCII 格式传输  懂中机通信的公共语言  IBM 主机使用 EBCDIC 编码 通用 PC 机采用 ASCII 码 转换以保证一致的数据形式  示例  ASCII EBCDIC  解决不同系统间的通信  LPP NBSSN   会话层  如何开始、同步和结束一个会话  使用校验点来保证通信失效后，由该校验点进行通信恢复 将会话地址映射为 IP 地址  示例  RPC SQL SSL TLS DAP   传输层  选择[无]差错恢复协议，在同一主机上对不同应用的数据流复用  对接收顺序有误的数据包排序  端对端数据的缓存层 面对会画层的界面端口 示例  TCP UDP SPX  端口通信    网络层  定义端对端的包传输 定义所有结点的逻辑地址，进行 路由|寻址 定义如何将包分解成更小的包的分段方法 示例  IP/ IPv6 EGP AHH/ ESP   数据链路层  定义在单个链路上如何传输、拆解包 每次通信时，建立起来的数据收发关系  链路连接的建立、拆除和分享 帧定界、同步 差错检测和恢复 链路标识、流量控制  示例  PPTP/ L2TP/ L2F/ ATMP ARP/ RARP  产品  网卡 网桥   物理层  为通信的两个数据终端设备提供连接，形成通路  将信息编码转换为电流脉冲或其它信号形式进行传输 方式  点对点 单点对多点 串行|并行 半双工|全双工 同步|异步   与传输介质有关  涉及连接头、帧、帧的使用、电流、编码、光调制等  示例  Rj45 将数据转换成 0|1 802.</description>
    </item>
    
    <item>
      <title>网络-四层协议</title>
      <link>http://domain.yqjdcyy.com/post/%E7%BD%91%E7%BB%9C-%E5%9B%9B%E5%B1%82%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Fri, 08 Dec 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E7%BD%91%E7%BB%9C-%E5%9B%9B%E5%B1%82%E5%8D%8F%E8%AE%AE/</guid>
      <description>参考  TCP/IP四层模型 深入浅出－网络七层模型&amp;amp;&amp;amp;网络数据包 TCP/IP四层模型 OSI七层和TCP/IP四层的关系  定义  网络事实上的标准 又名 TCP/IP 协议族或 TCP/IP 协议栈  Transmission Control Protocol 传输控制协议 Internet Protocol 互联网协议      分层 应用层  定义  = OSI.应用层+ OSI.表示层 + OSI.会话层  示例  FTP/ TELNET/ HTTP   传输层  定义  = OSI.传输层 对数据进行缓存、报文的拆解和重组  示例  TCP  传输控制协议 transmission control protocol  UDP  用户数据报协议 user datagram protocol    网间层  定义 = OSI.</description>
    </item>
    
    <item>
      <title>中国-厦门-同安</title>
      <link>http://domain.yqjdcyy.com/post/%E4%B8%AD%E5%9B%BD-%E5%8E%A6%E9%97%A8-%E5%90%8C%E5%AE%89.%E7%BE%8E%E9%A3%9F/</link>
      <pubDate>Mon, 04 Dec 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E4%B8%AD%E5%9B%BD-%E5%8E%A6%E9%97%A8-%E5%90%8C%E5%AE%89.%E7%BE%8E%E9%A3%9F/</guid>
      <description>参考  揣着100块钱来同安吃1整天！  路线  T4候机楼站 凤岗大肠国大肠血  BRT快2线，至同安枢纽站  阿呆盐鸭店  630A，由同安枢纽站至小西门  鑫旺旺汤包  步行  味源小吃  630A，由小西门至同安电视台站  台湾番婆冰  步行  肥栋满煎糕  步行  秀英食品  步行  双鹿老铺  步行  陆丰煎饼  612，由金安大厦至新西桥站  杨强芙蓉香骨鸡腿  625，由新西桥至同安劳动力市场站   介绍 凤岗大肠国  位置  凤岗岗头里786 同安枢纽站 直行50米左转进入凤岗路 直走600米  特色菜  纯猪血大肠  单价  15元/碗    阿呆盐鸭店  位置  小西门 下车前行50米后左转200米进入东山路  特色菜  盐鸭  单价  50元/只    鑫旺旺汤包  位置  沿着东山路走250米，进中山路再走200米  特色菜  汤包  单价  10元/笼    味源小吃  位置  同安电视台站  特色菜  碗仔粿  单价  3元/小碗 4元/大碗    台湾番婆冰  位置  沿着凤山路往南门桥走350米  特色菜  芒果冰 芋泥  单价  22元/芒果冰 6元/芋泥    肥栋满煎糕  位置  出了番婆冰右转20米就到  特色菜  满煎糕  单价  10元/个    秀英食品  位置  从番婆冰门口上桥，过桥左转沿路走到尽头右转300米，再右转上同新路，80米后左转直行100米  特色菜  醋肉  单价  20元/份    双鹿老铺  位置  从秀英出门右转到松柏林中路，200米后右转进南门路，再走70米  特色菜  马蹄酥  单价  6元/袋-10个    陆丰煎饼  位置  612路 金安大厦-新西桥站（2站） 步行到古庄大社里21号 下午三点开门  特色菜  煎饼  单价  4元/个 5.</description>
    </item>
    
    <item>
      <title>云开-服务端架构-20171203</title>
      <link>http://domain.yqjdcyy.com/post/%E4%BA%91%E5%BC%80-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%9E%B6%E6%9E%84-20171203/</link>
      <pubDate>Sun, 03 Dec 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E4%BA%91%E5%BC%80-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%9E%B6%E6%9E%84-20171203/</guid>
      <description>流程  华山分享现有架构整理 志高补充压测等情况 讨论瓶颈优化  系统架构  客户端  微信 NW 老师端 PC 学习端  连接方式  HTTP TCP/IP  微服务  用户中心 直播相关 业务服务相关 推荐相关  模块  用户 直播  FFMpeg Nginx rtmp  NFS IM 转换  PPT  Gateway NSQ PPT.Command  音视频   底层服务  日志 持久化  Mysql，主从  缓存  Redis，仅主从无集群  文件数据   讨论  实现目标  两万人并发 目前900 QPS  确认瓶颈  缓存  解决方案  Twemproxy  参考  twitter/twemproxy Redis 存储分片之代理服务Twemproxy 测试 存储分片和Twemproxy核心解读  性能  性能损耗，最差低于 20%  优点  统一对外节点，多服务池 长连接，pipelinling 处理请求和响应，大大减少连接数 哈希分片，请求分配均匀  缺点  无法平滑地扩容或缩容 运维管理困难，无操作界面   Codis  参考  Redis集群技术及Codis实践 常见的redis集群方案有哪些优缺点？ []()  性能  最初比Twemproxy慢20%，现在比Twemproxy快近100%    优点  有图形化界面，扩容及运维方便 开发简单，对应用透明 不负责主从同步，轻量伦 提供 Jodis，支持 Java 程序的 HA  缺点  修改过 Redis 代码，无法与官方版本同步，新特性跟进缓慢 Value 字段大小小于 888B 字节时，性能较优秀 第三方组件较多     相关工作  AV-Server  可能存在问题？  CPU 使用率  GO 中使用  如何快速扩容  Kafka，多服务连接    Talk.</description>
    </item>
    
    <item>
      <title>Kafka</title>
      <link>http://domain.yqjdcyy.com/post/kafka/</link>
      <pubDate>Wed, 29 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/kafka/</guid>
      <description>Kafka 参考  Kafka剖析（一）：Kafka背景及架构介绍 Apache kafka 工作原理介绍 Quickstart Kafka系列2-producer和consumer报错 Using new consumer API with a Deserializer that throws SerializationException can lead to infinite loop How to find the kafka version in linux  简介  Linkedin 开发，Scala编写 特点  解耦 水平扩展 高吞吐率  缓冲 异步通信  可恢复性  冗余，确保安全保存至使用完毕后 处理消息进程宕机，仍可于启动后重新接收处理  顺序保证   架构 名词解析  Broker  集群中的服务器名称 支持水平扩展的节点  Topic  集群消息中类别  Partition  Topic 下包含一至多个 Partition  Producer  生产者 将消息发布至 Kafka broker  Consumer  消费者 向 Kafka broker 读消息的客户端  Consumer Group  各 Consumer 属于特定 Group 不指定时，则属于默认 Group   结构拓扑  整体拓扑    分析  kafka 通过 Zoopkeeper 管理集群配置  选举 Leader Consumer Group 变更时的 ReBalance  物理上 Topic 对应一至多个 Partition  每个 Partition 在物理上对应一个文件夹  消息 索引  结构  root 4k topic1-1 - 日志文件 root 4k topic1-2 .</description>
    </item>
    
    <item>
      <title>FFmpeg.阅读笔记</title>
      <link>http://domain.yqjdcyy.com/post/ffmpeg.%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 23 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/ffmpeg.%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</guid>
      <description>[TOC]
简介  FFmpeg ffmpeg FFmpeg Formats Documentation FFmpeg - wiki FFmpeg - github 使用ffmpeg将视频转ts  概要  ffmpeg [global_options] {[input_file_options] -i input_url} ... {[output_file_options] output_url} ...  流程  _______ ______________ | | | | | input | demuxer | encoded data | decoder | file | ---------&amp;gt; | packets | -----+ |_______| |______________| | v _________ | | | decoded | | frames | |_________| ________ ______________ | | | | | | | output | &amp;lt;-------- | encoded data | &amp;lt;----+ | file | muxer | packets | encoder |________| |______________|  选项 实例 裁剪  指令  ffmpeg -i old.</description>
    </item>
    
    <item>
      <title>Git.Subtree</title>
      <link>http://domain.yqjdcyy.com/post/git.subtree/</link>
      <pubDate>Thu, 23 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/git.subtree/</guid>
      <description>参考  Git Subtree的使用 Git Tools - Subtree Merging 用 Git Subtree 在多个 Git 项目间双向同步子项目，附简明使用手册  描述  简介 &amp;gt; 经由 Git Subtree 来维护的子项目代码，对于父项目来说是透明的，所有的开发人员看到的就是一个普通的目录，原来怎么做现在依旧那么做，只需要维护这个 Subtree 的人在合适的时候去做同步代码的操作。
 适用情况
 使用 github 的 page 功能实现项目主页功能，结合 hugo 生成 public 文件夹后同步到 gh-pages 分支，作为分支完整内容 项目 A 和项目 B 存在公用模块，A 中的修改、新增等操作，均同步至项目 B  可用方案
 Git Submodule  Git 官方早期推荐方案 允许其它仓库指定 commit 嵌入仓库子目录  但需要 init 和 update  产生 .gitmodule 文件记录 submodule 版本信息 删除较费劲  Git Subtree  Git 1.</description>
    </item>
    
    <item>
      <title>20岁的你</title>
      <link>http://domain.yqjdcyy.com/post/20%E5%B2%81%E7%9A%84%E4%BD%A0/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/20%E5%B2%81%E7%9A%84%E4%BD%A0/</guid>
      <description> [TOC]
20岁时做什么到40岁时才不会后悔？ 要点  知道什么是生命中最重要的东西 尽量不要去想太多竞争 善待那些喜欢自己的人 学会欣赏这个世界 为健康打下基础 试错和重启 谨慎选择与谁一起共度 谨防短期情绪波动 一定要把收入的一部分用于储蓄 投资 写作将点燃你的头脑 要建立良好的个人品牌 设计你的生活永远不会太迟 没有人把一切都想通了  忧虑就是你在偿还你并未欠的债 - 马克吐温  了解，沟通是一切 提问 如果你发现自己不知道或不确定，就主动发问吧 做饭 冥想让头脑深度休息 更新你的心灵的操作系统  关键字  健康、控制情绪 尝试  投资理财 做饭  提问、思考、设计人生  </description>
    </item>
    
    <item>
      <title>Apache.Beam的前世今生</title>
      <link>http://domain.yqjdcyy.com/post/apache.beam%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/apache.beam%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F/</guid>
      <description> {TOC}
Apache Beam的前世今生 开源原因  意识到开源软件的巨大价值 足够多模型才能促使项目成功  简介  基础  Cloud Dataflow  介绍  构建、管理和优化复杂数据流水线的方法 用于构建移动应用、调试、追踪和监控产品级云应用  技术  Flume：数据高效并行处理 MilWhell：互联网级别流处理，优秀的容错机制     介绍  统一编程框架，提供开源、统一的编程模型  特点  统一：对于批处理和流式处理，使用单一的编程模型 可移植：可以支持多种执行环境，包括Apache Apex、Apache Flink、Apache Spark和谷歌Cloud Dataflow等 可扩展：可以实现和分享更多的新SDK、IO连接器、转换操作库等  适用场景  并发数据处理任务  将要处理的数据集分解成许多相互独立而又可以并行处理的小集合  ETL任务 数据整合  组成  Beam SDK  针对各数据来源、形式，采用相同的数据模型处理、封装  Beam Pipeline Runner  将 Beam 模型定义开发的处理流程，翻译成底层分布式数据处理平台支持的运行时环境 需要指明底层的 Runner  目前支持 Flink/ Spark/ Apex/ Cloud Dataflow     设计  问题  数据  已持久化的有限数据集，如 HDFS文件，HBase 表 实时数据流，如 Kafka中的系统日志流，Twitter 流 注：有限数据集可看为实时数据流的一个子集  时间  process time：数据进入分布式处理框架时间 event time：数据产生时间  乱序  数据到达时间与 event-time 无法完全符合   解决方法(WWWH)  [W]hat are you computing  Element-Wise 元素级 Aggregating 聚合 Composite 复合  [W]here in event time    [W]hen in processing time  使用 Trigger 机制，配合 SDK 中的水位线和触发器进行时机指定  [H]ow do refinements relate  指定如何处理迟到数据，增量或合并输出 由 SDK 中的 Accumulation 指定    </description>
    </item>
    
    <item>
      <title>Java.9.Feature</title>
      <link>http://domain.yqjdcyy.com/post/java.9.feature/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/java.9.feature/</guid>
      <description>深入解读 Java 9 新特性 参考  深入解读 Java 9 新特性 Java9先睹为快：JShell动手实践 JavaOne 2016——观众得以一睹JShell的威力  Jigsaw  核心 -实现 Java 平台模块化系统 - JPMS (Java Platform Module System)
 针对问题
 易错的 classpath  应用不同部分依赖同一类库的不同版本 ClassLoading 复杂而不明确，导致 ClassNotFoundException、 NoClassDefFoundError 等异常  JDK 过于臃肿，无法按不同需求进行定制或优化  目标
 可靠配置  明确模块边界和模块间的依赖关系  强封装性  通过封装模块内部私有细节，避免不希望发生的依赖关系   拆分 JDK 增强提议 (JEP)
 JEP 261  Module System，实现模块化系统；  JEP 200  The Modular JDK，将JDK自身进行模块化；  JEP 201  Modular Source Code，按照模块化的形式，重构源代码,因为现有代码并不是划分到一个一个的模块里的。  JEP 220  Modular Run-Time Images，重新设计JDK和JRE的结构，定义新的URI scheme操作模块，类和资源（jrt）。  JEP 260  Encapsulate Most Internal APIs，按照模块化封装性的要求，将不希望暴露的内部API封装起来，如果确实证明是广泛需要的，就作为公共API公开出来。  JEP 282  jlink: The Java Linker。新的link工具   模块图</description>
    </item>
    
    <item>
      <title>Java.Native</title>
      <link>http://domain.yqjdcyy.com/post/java.native/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/java.native/</guid>
      <description> 参考  http://blog.csdn.net/xw13106209/article/details/6989415 http://www.iteye.com/topic/304594  概念  Jni  sun 提供 支持通过与 c/c++ 交互调用系统的相关技术  Jawin  sourceforge 提供基于 Jni 的应用库 支持调用 com 对象，和win32-dll 动态链接库的方法  Jacob  sourceforge 提供 提供调用 microsoft 的 com 对象方法  补充        开发流程  Java 调用类 javah 生成 c/c++ 原生函数头文件 c/c++ 中实现原生函数 将项目依赖的所有*原生库和资源*加入至 java 项目的 java.library.path 生成 java 程序 发布 java 应用和 dll 库  </description>
    </item>
    
    <item>
      <title>Java.泛型</title>
      <link>http://domain.yqjdcyy.com/post/java.%E6%B3%9B%E5%9E%8B/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/java.%E6%B3%9B%E5%9E%8B/</guid>
      <description>[TOC]
泛型 与 C++ 的比较  优点  泛型实现参数化类型 创建泛型的一个实例时，编译器负责转型并保证类型的正确性  缺点  其它语言能做、好做的，java 中却不支持，难以实现  注
 理解泛型的边界！
简单泛型  告诉编译器想使用类型，然后由编译器帮你处理一切细节
 元组：一组对象打包存储于一单一对象
泛型接口 事例
public interface Generator&amp;lt;T&amp;gt; { T next(); }  基本类型无法作为类型参数
泛型方法 事例
public &amp;lt;T&amp;gt; void printClass(T t) { System.out.println(t.getClass().getName()); }  类型推断只对赋值操作有效
泛型内部类 构建复杂模型 类型安全且可管理
擦除的神秘之处 在泛型代码内部，无法获得任何有关泛型参数类型的信息
 T extends class/interface
 于静态类型检查期后，所有泛型类型均被擦除，并替换为其非泛型上界
 List&amp;lt;T&amp;gt; -&amp;gt; List &amp;lt;T&amp;gt; -&amp;gt; Object  使用擦除实现，唯一知道是在使用一个对象
 List&amp;lt;String&amp;gt;= List&amp;lt;Object&amp;gt;= List List&amp;lt;Integer&amp;gt;= List&amp;lt;Object&amp;gt;= List  与 C++ 对比</description>
    </item>
    
    <item>
      <title>Linux 单TCP连接占用最少内存</title>
      <link>http://domain.yqjdcyy.com/post/linux-%E5%8D%95tcp%E8%BF%9E%E6%8E%A5%E5%8D%A0%E7%94%A8%E6%9C%80%E5%B0%91%E5%86%85%E5%AD%98/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux-%E5%8D%95tcp%E8%BF%9E%E6%8E%A5%E5%8D%A0%E7%94%A8%E6%9C%80%E5%B0%91%E5%86%85%E5%AD%98/</guid>
      <description>[TOC]
Linux 单 TCP 连接占用最少内存 结构  错  TCP 连接建立的时候会分配接收缓冲区和发送缓冲区，各 4KB，一共是 8KB。如果加上 TCP 协议控制块（protocol control block）的 2KB，一共是 10KB。  测试  &amp;gt;= 2944 B 没有数据时，接收、发送缓冲区是没有数据的   TCP 解析 TCP  三次握手  struct socket_alloc  包含 struct socket/ struct inode 作用于连接 VFS 和 tcp_sock  VFS | virtual File System 让open()、read()、write()等系统调用不用关心底层的存储介质和文件系统类型就可以工作的粘合层    socket 文件缓冲  struct dentry  struct file *  理解对应缓冲时的文件    进程调用  struct socket_wq  wait queue，主要用于阻塞 IO 时挂起当前线程    实测 - Least  基本消耗 | struct | size | slab cache name | | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- | &amp;mdash;- | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; | | file | 256 | &amp;ldquo;filp&amp;rdquo; | | dentry | 192 | &amp;ldquo;dentry&amp;rdquo; | | socket_alloc | 640 | &amp;ldquo;sock_inode_cache&amp;rdquo; | | tcp_sock | 1792 | &amp;ldquo;TCP&amp;rdquo; | | socket_wq | 64 | &amp;ldquo;kmalloc-64&amp;rdquo; | | inet_bind_bucket | 64 | &amp;ldquo;tcp_bind_bucket&amp;rdquo; | | epitem | 128 | &amp;ldquo;eventpoll_epi&amp;rdquo; | | tcp_request_sock | 256 | &amp;ldquo;request_sock_TCP&amp;rdquo; |</description>
    </item>
    
    <item>
      <title>Linux.Vimium</title>
      <link>http://domain.yqjdcyy.com/post/linux.vimium/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux.vimium/</guid>
      <description>Vimium 快捷键指南 页面导航  j 向下滚动 k 向上滚动 d 向下翻页 u 向上翻页 gg 滚动至顶部 G 滚动至底部
 r 刷新界面
 yy 复制当前界面 URL
 p 在当前标签页打开剪贴板中的 URL
 gu 跳转至当前 URL 的上一层
 http://www.phperz.com/article/15/1231/179223.html http://www.phperz.com/article/15/1231/  gU 跳转至当前 URL 的最高层
 http://www.phperz.com/article/15/1231/179223.html http://www.phperz.com/  f 在当前标签页打开此标签页中的一个链接
  使用 Vomnibar  o 搜索书签和历史记录 T 搜索已打开标签页 b 搜索书签  使用查询  / 进入查询模式 n 切换至下一个匹配值处  标签操作  gt 移动至下一标签页 g[\d] 跳转至指定标签页 yt 复制当前标签页 x 关闭当前标签页 X 恢复已关闭的标签页  其它  ?</description>
    </item>
    
    <item>
      <title>PowerPoint.CoverExport</title>
      <link>http://domain.yqjdcyy.com/post/powerpoint.coverexport/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/powerpoint.coverexport/</guid>
      <description> 文件法 实现  将 .pptx 文件后缀更新为 .zip 获取 /docProps/thumbnail.jpeg  缺点  仅适用于 .pptx  windows api + code 实现 环境要求&amp;amp; 版本限制  v4.0.30319  缺点  与「文件法」一致，导出图片尺寸过小  PPT 操作导出 - 79KB 1024x766 api 导出 - 24KB 960x720  部分 PPT 无缩略图，导出的均为 PPT 默认图片  OpenXML + code 现服务转换方式  高清无码  环境要求&amp;amp; 版本限制  v2.0.50727 安装有 Microsoft.PowerPoint  缺点  要求本地安装有指定以上版本 PPT  </description>
    </item>
    
    <item>
      <title>ServiceMesh</title>
      <link>http://domain.yqjdcyy.com/post/servicemesh/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/servicemesh/</guid>
      <description> 参考  Java未来也许不再是电商的首选开发语言 从零开始k8s  明细 首选语言  优点  JVM 运行时强大 工具链成熟 Spring 庞大的生态  dubbo Spring Cloud   缺点  开发繁琐 包体积大 运行时开销大   框架 Service Mesh  定义  基础设施层，处理服务间通讯 轻量网络代理，负责复杂服务拓扑的请求的可靠传递 对应用程序透明 利于多语言应用共存  优点  聚焦于业务逻辑 不再于开发层面关注负载均衡、路由、熔断、限流、服务注册  工具  Kubernetes   </description>
    </item>
    
    <item>
      <title>不可描述</title>
      <link>http://domain.yqjdcyy.com/post/%E4%B8%8D%E5%8F%AF%E6%8F%8F%E8%BF%B0/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E4%B8%8D%E5%8F%AF%E6%8F%8F%E8%BF%B0/</guid>
      <description>[TOC]
参考  香辣家常菜 0/6   料理 黄油炒蛋 [2&amp;frasl;5] 材料  鸡蛋* 3 全脂牛奶 玉米粉/ 土豆粉 黄油 盐、胡椒  步骤  鸡蛋撑匀 全脂牛奶溶玉米粉，搅拌均匀后与鸡蛋混合 黄油于不粘中融化，煮开后加入鸡蛋，并关火搅动  麻辣烫 材料  汤底  干辣椒 豆瓣酱 浓汤宝  鲜鸡汁 猪骨汤|清水  葱、姜、蒜、八角、花椒  煮料  鱼丸、蟹肉棒、肥牛 豆泡、冻豆腐、玉米、香菇、土豆、青菜   流程  材料洗净、切段、片、末 热锅热油，加葱、姜、蒜和花椒爆香，后加入干辣椒和八角翻炒2分钟 加入4勺豆瓣酱炒香后，加入浓汤宝，煮开后转小火煮15分钟 完成后捞出配料，并加入食材即可 调味可补蒜末、醋、芝麻酱和菊花等  蒸水蛋  材料  鸡蛋* 2 温水 盐、酱油、油  流程  鸡蛋打散，加入1/2茶匙盐、些许酱油、3滴油后打发 一边加入3倍温水，一边顺时针拌匀，并用勺子舀走泡泡 蒸锅放入热水，大火蒸10分钟 取出后于表面淋少许酱油  青椒肉丝 材料  大青椒 猪里脊肉 姜、蒜 料酒、老抽、生抽、清水、麻油 盐、糖 干淀粉、水淀粉  流程  青椒横剖去芯后，顺纹理切丝 肉丝加老抽、生抽、糖、料酒抓匀后腌15分钟 肉里加一汤匙清水、麻油后，抓肉至水被吸收，再加干淀粉抓匀 热锅少油，煸青椒丝至微软 热锅热油后，萋蒜片爆香，大火炒散肉丝至八成熟，加青椒炒匀 加入盐、糖、水淀粉勾芡炒匀  茭白毛豆鸡丁 材料  茭白* 2 毛豆 鸡脯肉* 2 红尖椒 盐 生抽 水淀粉  流程  各材料切丁，鸡肉用盐、生抽和水淀粉抓匀 毛豆焯水，热锅凉油滑肉变色后盛出 茭白翻炒后，加毛豆、水许水、盐烹炒入味 加鸡丁、红椒和一勺蚝油，翻炒出锅  干煸四季豆 材料  四季豆 猪肉末 蒜、姜、干辣椒 生粉 花生油、生抽、鸡精、盐、料酒  流程  四季豆去筋折段后洗净沥干，姜蒜切片、干辣椒切段 猪肉末放入油、生粉和料酒后抓匀 热锅热油炸四季豆至表皮微黄后捞出 留微油爆香肉末后盛出 热锅微油煸炒干辣椒、姜、蒜后，倒入四季豆和肉末，并放入生抽、盐、鸡精翻炒均匀即可  木须肉 材料  鸡蛋 *2 瘦肉 黄瓜、胡萝卜、黑木耳 盐、生粉、白糖、生抽、淀粉</description>
    </item>
    
    <item>
      <title>代码整洁之道.程序员的职业素养</title>
      <link>http://domain.yqjdcyy.com/post/%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93.%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%81%8C%E4%B8%9A%E7%B4%A0%E5%85%BB/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93.%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%81%8C%E4%B8%9A%E7%B4%A0%E5%85%BB/</guid>
      <description>[TOC]
代码整洁之道 - 程序员的职业素养 专业主义 为自身错误埋单 注重自测  要求自测基本完整覆盖
建议要求 设计模式
 GOF* 24 POSA 中多数模式的实战  设计原则
 了解 SOLID 原则 深刻理解组件设计原则  方法
 XP Scrum 精益 看板 瀑布 结构化分析 结构化设计  实践
 测试驱动开发 面向对象设计 结构化编程 持续集成 结对编程  工作
 UML 图 DFD 图 结构图 Petri 网络图 状态迁移图 流程图 决策图
站在 雇主/客户/产品 的角度   说“不” 拒绝说“试一试”  在上级眼里意味着你可以 另一方面，如果能完成，意味着之前有所保留，并未全然尽力
描述清楚实现的难度 认真理解说“是”的成本  说“是” 承诺用语  为自己的承诺负责 理解对方言语承诺的成分 坚守原则，避免放松代码追求  承诺无效 关键词  需要|应当  我们要把这个活干完 有人应当负责去推动这件事  希望|但愿  希望明天我能完成这件事 但愿我有时间做这件事  让我们</description>
    </item>
    
    <item>
      <title>卡西欧-CASIO</title>
      <link>http://domain.yqjdcyy.com/post/%E5%8D%A1%E8%A5%BF%E6%AC%A7-casio/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E5%8D%A1%E8%A5%BF%E6%AC%A7-casio/</guid>
      <description> [TOC]
品牌 简介  1946年4月  由㭴尾忠雄创立 生产香烟指环  1954年成功研制首台电子计算机 1957年  卡西欧推出14-A型、全球首款全电子计算机 公司更名称卡西欧计算机株式会社，专门研发电子产品  1983年  伊部菊雄设计的首款 G-Shock 问世   参考  CASIO 官网 G-Shock 官网  明细 G-SHOCK MTGS1000V-1A 价格  7,000  机芯  SMART ACCESS  规格  表壳纵向尺寸  58.6mm  表壳横向尺寸  53.5mm  表壳厚度尺寸  15.5mm  重量  188g   功能  3G防护构造 200M 防水 夜光 太阳能 6局电波 指针位置自动修正 世界时间(29个城市) 秒表（1/20秒） 倒计时 蜂鸣响音闹铃 低电量警告 全自动日历  参考  一块与众不同的G-SHOCK-MTG-S1000V-1AJF MTGS1000V-1A  欣赏       </description>
    </item>
    
    <item>
      <title>妙梅家招牌</title>
      <link>http://domain.yqjdcyy.com/post/%E5%A6%99%E6%A2%85%E5%AE%B6%E6%8B%9B%E7%89%8C/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E5%A6%99%E6%A2%85%E5%AE%B6%E6%8B%9B%E7%89%8C/</guid>
      <description> [TOC]
蒸鸡 [2.5&amp;frasl;5] 材料  八角 桂皮 香菇 香葱头 当归 料酒 生姜 鸡  工具  电饭锅 蒸架  流程  鸡洗净过水，各材料切好洗净 盐，料酒里外抹一下 各材料塞里面，隔水蒸一小时  </description>
    </item>
    
    <item>
      <title>宝珀-Blancpain</title>
      <link>http://domain.yqjdcyy.com/post/%E5%AE%9D%E7%8F%80-blancpain/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E5%AE%9D%E7%8F%80-blancpain/</guid>
      <description>[TOC]
品牌 简介  1735年，Jehan-Jacques Blancpain创立宝珀品牌 1926年，宝珀制表厂与制表师John Harwood合作，推出首款自动上链腕表。 1953年推出的五十噚腕表，成为潜水腕表的标杆之作。 制表厂加入瑞士钟表工业股份有限公司（Société suisse pour l’industrie horlogère，SSIH），与欧米茄、天梭、Lemania等品牌并驾齐驱。 1735腕表，汇集五大复杂功能：三问报时、陀飞轮、万年历、月相与追针计时码表。     参考  blancpain 品牌历史 腕表之家-宝珀  明细 五十噚 5000-0130-B52 A 基本信息  自动机械 男士
价格 ¥ 98000
机芯 机芯型号： 1315
 机芯直径： 30.60毫米
 机芯厚度： 5.65毫米
 宝石数： 35
 零件数： 227
 动力储备： 120小时
外观 表径： 43.60毫米
 表壳厚度： 13.40毫米
 表壳材质： 缎面磨砂黑色陶瓷
 表盘颜色： 黑色
 表盘形状： 圆形</description>
    </item>
    
    <item>
      <title>工装鞋</title>
      <link>http://domain.yqjdcyy.com/post/%E5%B7%A5%E8%A3%85%E9%9E%8B/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E5%B7%A5%E8%A3%85%E9%9E%8B/</guid>
      <description>[TOC]
参考 鞋靴 | 我要给第1次买工装靴的人，挑一双穿10年的靴子
品牌 顶端 Viberg  炒作嫌疑，价格虚高，不推荐   Wesco、White&amp;rsquo;s Boots  现货 $400+， 定制 $600+   中端 Danner  户外、军靴，全地形、防水   Red Wing  美产，经典款875、8111、9111、9013   Chippewa  工程师靴创始人   Wolvrine 1000mile  耐磨皮大底，接近皮鞋   低端 Timberland  大黄靴10061，非手工靴   CAT  打折 $50+   Red Wing 875 介绍  选用了 Oro Legacy 皮革，鞋头偏翘。橡胶制鞋底，有小型的胎面设计，缓冲功能极高 1200+ ， 专柜 2600+</description>
    </item>
    
    <item>
      <title>技术人员的发展之路</title>
      <link>http://domain.yqjdcyy.com/post/%E6%8A%80%E6%9C%AF%E4%BA%BA%E5%91%98%E7%9A%84%E5%8F%91%E5%B1%95%E4%B9%8B%E8%B7%AF/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E6%8A%80%E6%9C%AF%E4%BA%BA%E5%91%98%E7%9A%84%E5%8F%91%E5%B1%95%E4%B9%8B%E8%B7%AF/</guid>
      <description> [TOC]
技术人员的发展之路 阶段和标志 20-30岁  提升学习和解决难题的能力 提升领导力  高效学习能力  基础扎实，触类旁通 寻找前沿知识 看清问题和技术的本质 独立思考  解决问题能力  见过许多场景 犯过、处理过很多错误 防火   帮人解决问题 被人所信赖  发展方向 职场打拼  去顶尖公司 去真正的创业公司  小心了解创始人和业务情况、想法、理念 排除创业时的.侥幸和驱利心理  职业生涯发展  关心并处理复杂人事关系 学会使用政治手段  在下属和领导，员工和公司之间周旋 审时站队，迎合、妥协和交换 厚黑与真诚    经历有意义、价值的事  到技术创新的发源地去经历创新 去经历下一个热点技术的发展  追求一种自由的生活  工作自由  能力出众，不愁找不到工作  技能自由  自由职业者  自动化 App 上做软件个体户 开源软件，社区捐款   物质自由  投资&amp;amp; 风险 关注未来和长远的成长   </description>
    </item>
    
    <item>
      <title>歌川广重</title>
      <link>http://domain.yqjdcyy.com/post/%E6%AD%8C%E5%B7%9D%E5%B9%BF%E9%87%8D/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E6%AD%8C%E5%B7%9D%E5%B9%BF%E9%87%8D/</guid>
      <description> [TOC]
歌川广重 简介  1811年他在江户成为浮世绘大师歌川丰广的学生 于1833～1834年间的55幅风景画系列《东海道五十三次》确立了他作为有史以来最受欢迎的浮世绘画家之一的地位 风格较为亲民、清丽，而有小品风范  风格  寓人手法  绘图主题是风景，但他会在画面上加入小人物的日常生活描绘，增添画面的生动感  四季情景的描绘  利用明暗、阴暗等技巧的呈现，可以在他的作品中感受到季节转换的感觉   作品  东海道五十三次 六十余州名所図会 江戸名所百景  赏析 </description>
    </item>
    
    <item>
      <title>水</title>
      <link>http://domain.yqjdcyy.com/post/%E6%B0%B4/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E6%B0%B4/</guid>
      <description> [TOC]
蒸 蒸馒头  10:00  蒸肉包  &amp;gt;= 12:00  蒸地瓜、玉米  &amp;gt;= 15:00 大块地瓜需要切段  煮 水煮蛋  水烧开后煮 7:30  速冻肉粽  水烧开后煮 15:00  速冻辣肠  水烧开后煮 15:00  </description>
    </item>
    
    <item>
      <title>汤</title>
      <link>http://domain.yqjdcyy.com/post/%E6%B1%A4/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E6%B1%A4/</guid>
      <description> [TOC]
冬瓜排骨汤 材料  排骨 冬瓜 葱、姜 盐
流程 葱挽结，姜、冬瓜切片
 排骨洗净，过开水焯后，冲净撇去血末
 冷水烧开后转小火煲一小时，后加冬瓜煲制十五分钟
 加盐、撇葱花后出锅
  土豆番茄牛腩汤 材料  牛腩 土豆、番茄、胡萝卜 姜、葱 盐、生抽、料酒
流程 牛肉泡水后洗净切块，焯水捞出
 姜切片，葱切段，番茄划线后过水去皮
 姜片、葱段、一半番茄、料酒、生抽与适量牛肉，大火煮开后炖2小时
 胡萝卜、土豆去皮切块，待番茄煮烂后与另一半番茄一同加入炖煮1小时
 加少许盐调味出锅
  黄豆花生猪脚 材料  猪脚 黄豆、花生 葱、姜 料酒、盐
流程 花生、黄豆提前泡8小时，猪脚拨毛、洗净、斩块、焯水后再洗净
 料酒、花生、黄豆、姜、葱炖煮2小时
 出锅前用盐调味
  奶白鲫鱼汤 材料  鲫鱼 葱、蒜、大白菜 白胡椒粉、盐 开水  流程  葱、大白菜洗净，蒜剥瓣 鲫鱼杀好，去鳞、鱼肚内黑膜后，洗净控干 热锅凉油，姜片爆香后放入鲫鱼，煎至两面金黄 煎好后加入葱段、蒜瓣，倒入开水后大火熬煮十五分钟 打去浮沫后，加入豆腐、大白菜转中火煮十分钟 出锅前五分钟加入盐、白胡椒粉即可  注意  煎鱼是为了去腥和定形 小火清汤，大火白汤 盐于最后放，避免破坏食材营养、口感  </description>
    </item>
    
    <item>
      <title>浏览器缓存知识小结及应用</title>
      <link>http://domain.yqjdcyy.com/post/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BC%93%E5%AD%98%E7%9F%A5%E8%AF%86%E5%B0%8F%E7%BB%93%E5%8F%8A%E5%BA%94%E7%94%A8/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BC%93%E5%AD%98%E7%9F%A5%E8%AF%86%E5%B0%8F%E7%BB%93%E5%8F%8A%E5%BA%94%E7%94%A8/</guid>
      <description> 浏览器缓存知识小结及应用 分类  强缓存  判断命中，则直接从浏览器缓存中读取资源，不发请求至服务器（200）  协商缓存  发请求至服务器，协商缓存命中，则返回请求（304），告知浏览器从缓存中加载   实现  强缓存  请求资源时，资源及其 response header 一并被缓存 再次请求时，优先比对该资源 header 中的  Expries（失效时间） 或 Cache-Control：max-age=315360000 &amp;amp; Date: Mon, 11 Jan 2016 06:41:22 GMT  对比判断是否命中 注：Cache-Control 为相对时间，都使用客户端时间进行判断，相比 Expries 的服务器时间对比更安全。  协商缓存  请求资源时，资源及其 response header 一并被缓存 再次和服务器请求该请求时，一并传上  header.Last-Modified: Tue 12 Jan 2016 03:08:53 GMT - 服务器上该资源的最后修改时间 header.If-Modified-Since: Tue 12 Jan 2016 03:08:53 GMT - 上一次浏览器请求时返回的 Last-Modified 值 或 ETag: &amp;ldquo;17fd8-5291a5f96fd20&amp;rdquo; - 请求资源的唯一标识 If-None-Match: &amp;ldquo;17fd8-5291a5f96fd20&amp;rdquo; - 上一次请求时的 ETag 值    </description>
    </item>
    
    <item>
      <title>甜</title>
      <link>http://domain.yqjdcyy.com/post/%E7%94%9C/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E7%94%9C/</guid>
      <description> [TOC]
芒果西米露 [4&amp;frasl;5] 材料  西米 小芒果 牛奶 蜂蜜  流程  芒果剖开刮下果肉 大量水煮西米，15分钟至剩下白芯后关火加盖焖熟 完全透明后捞起过冰水 起碗加入西米、牛奶、芒果和蜂蜜即可  南瓜饼 材料  南瓜 糯米粉 白糖  流程  南瓜去皮、去籽、切块后，倒入碗中，覆以保鲜膜后蒸10分钟蒸熟 加入白糖搅拌 冷却后，少量多次地加入糯米粉，和到不粘手 搓小圆后拍扁，后小火煎熟  </description>
    </item>
    
    <item>
      <title>精酿啤酒.入门</title>
      <link>http://domain.yqjdcyy.com/post/%E7%B2%BE%E9%85%BF%E5%95%A4%E9%85%92.%E5%85%A5%E9%97%A8/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E7%B2%BE%E9%85%BF%E5%95%A4%E9%85%92.%E5%85%A5%E9%97%A8/</guid>
      <description>[TOC]
酒-精酿啤酒 参考  夏日炎炎，来瓶啤酒 - 一次关于精酿啤酒的安利 推荐7款精酿的啤酒，也许能让你爱不释手 角鲨头 Dogfish Head——一个神奇的啤酒厂 BrewDog 啤酒狗顛覆你對啤酒的想像!  分类 拉格 Lager  工业啤酒，保证生产规模 下层发酵，酵母在底部发酵，温度在 10℃ 以下，发酵时间长 口味清淡，味道单一  艾尔 Ale  上层发酵，酵母在麦汁顶部，温度于 10℃-20℃，发酵时间短  推荐 Blue Moon - Belgian White  比利时白色小麦啤酒 特点  淡麦芽香和少量橙香 入口柔和清甜，水果风味突出 模仿福佳白  欣赏    推荐  口粮酒   Hoegaarden Belgian Witbier  福佳白 比利时白色小麦啤酒 特点  口感清淡，酒体轻盈 小麦和蔬菜清香，微微酸甜 类似口感如 1664 白啤  欣赏    推荐  入门级   燕京原浆白啤  特点  酒体琥珀，泡沫稀少，口感轻盈 丁香、香蕉和面包香气  欣赏    推荐  性价比   Tripel Karmeliet  比利时三料啤酒 特点  小麦、燕麦和大麦混合酿造 酒体金黄，泡沫深厚持久 味道偏浓 前调  麦香+酵母+复合果味 麦香、胡妥、花香  中调  橙子、香蕉、蜂蜜  后调  回甘   欣赏    推荐 -  Orval Belgian Pale Ale  比利时淡色艾尔 特点  酒体粽红，泡沫极为丰富细腻 浓烈的酒花香，橙香，浓郁的花香和药香 浓郁的酒花香气，玫瑰花瓣的香气以及酵母带来的独特微酸口感  欣赏     推荐 -  Westvleteren 12 (XII)  比利时四料啤酒 特点  棕褐色酒体，泡沫轻盈一指高 复杂的水果香气，熟苹果、梨、糖浆、麦子、坚果和草药香，复合的香料味道以及浓郁的酵母气息 甜蜜轻柔，回味悠长  欣赏    推荐  号称世界第一   Jacob Leinenkugel Grapefruit Shandy  特点  西柚香，汽水口感，偏甜  欣赏    推荐  牛饮   Stone Coffee Milk Stout  增料世涛 特点  口感醇厚，酒体咖啡色，泡沫稀少 浓郁咖啡豆、巧克力、糖浆和烧烤麦芽香 入口厚重，丝滑奶油感  欣赏     推荐 -  Lefthand Milk Stout Nitro  氮气牛奶世涛 特点  氮气封装，开瓶后泡沫更柔和细腻 酒体浑浊黑亮，泡沫稀少但细腻 入口顺滑，苦味下降，回味清淡 奶味、巧克力、烧烤麦芽香  欣赏    推荐 -  Stone go to IPA  Session IPA 特点  清淡型，充满水果香，口感爽脆 建议即时享用  欣赏    推荐  牛饮   Stone Imperial Russian Stout 2016  帝国世涛 特点  每年放出，实力产品 黑色酒体，几乎无泡沫， 焦糖、烘烤、酱油、咖啡以及酒精味 酒体非常厚重，深色水果的甘甜，糖浆味，太妃糖，烘烤麦芽散发出的厚重苦味 酒精感强，回味较长，酱味、酒精味  欣赏     推荐  Top 50   Stone ARROGANT BASTARD ALE  美式烈性艾尔 特点</description>
    </item>
    
    <item>
      <title>肉</title>
      <link>http://domain.yqjdcyy.com/post/%E8%82%89/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E8%82%89/</guid>
      <description>[TOC]
参考  高分肉菜 - 0/7  料理 啤酒鸭 [4&amp;frasl;5] 材料  鸭 啤酒 姜、蒜 干辣椒、八角 盐、糖、食用油、老抽、生抽  工具 流程  鸭肉洗净切小块，淋水备用 炒锅加热，倒油后加入姜片、葱段、蒜瓣、八角和干辣椒炒香 加入鸭块大火翻炒到鸭皮收缩、颜色发白，后调至小火煸炒出鸭油 倒入少许老抽上色、适量生抽提味，少许糖、盐并翻炒均匀 倒入啤酒没过鸭肉一厘米，并中小火焖30分钟 鸭肉熟软后，大火收汁  豆腐烧肥牛 [4.3&amp;frasl;5] 材料  肥牛片 嫩豆腐 大葱* 0.5d、葱花、蒜末* 2 酱油* 2 料酒* 1 水* 3 糖* 1  流程  肥牛切片，豆腐切块，大葱切段，调味料搅拌均匀 分次放入调味料、豆腐、肥牛和大葱 加盖煮开，转小火闷8分钟  可乐鸡翅 [4&amp;frasl;5] 材料  翅中 可乐 盐、料酒、老抽、生抽 生姜片* 5 桂皮* 0.5  流程  鸡翅划刀，放入葱姜片和水煮开，后捞出沥干 小火微油，将鸡翅煎至金黄 放入可乐、一大勺料酒，一勺老抽，两勺生抽，桂皮和盐 烧开后转小火炖煮至收汁适宜  红烧肉 [4.</description>
    </item>
    
    <item>
      <title>股权&amp;期权</title>
      <link>http://domain.yqjdcyy.com/post/%E8%82%A1%E6%9D%83%E6%9C%9F%E6%9D%83/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E8%82%A1%E6%9D%83%E6%9C%9F%E6%9D%83/</guid>
      <description>[TOC]
股权、期权有哪些坑？从技术创业的角度说开去 比例 依赖独特技术  技术* 50% 业务* 40% 管理* 10%  依赖业务领先  技术* 40% 业务* 50% 管理* 10%  注意  一开始就要定位准确！  股权 经营  退出机制  建议股份强制回收 提前写好退出机制和退出价格 退出价格为下列最高值  上一轮融资估值* 50% 上一年财务合同额 公司总资产 真实投资资金年利息* 115%  退出股权优先卖给现有参与经营的股东   注意  股权比例，即合伙人配比  期权 使用  第一期建议 10%  吸引人才，后根据每年需求发放 CEO 出方案定值，后股东投票  一次性强留足 30%  发完回收才会发现这个问题   规则  时间  分3年给，每年落实 1&amp;frasl;3  行权  可象征性出点 在期权池公司落实工商登记股分  价格  同股权一样商量  权益  仅分红，无投票  落实  设置持股公司  期权池公司拷贝母公司 10% 股分 初始期权池公司 CEO 100%的持有 签订员工期权协议，分3年在期权池公司落实工商登记股份 每年变更一次期权池公司名录和股分比例，落实员工利益    注意  作用  对股权结构不合理信息的弥补 对核心员工的奖励  来源  全体股东一起稀释  按比例，不要按数量 后面增发期权，则再创建一持股子公司即可  投资 是否要  要！  需要外部投资人作为第三方的视角审查   时机  产品出来 有真实用户和运营数据 估值清晰 数据客观  创业落脚点 明确越高越难  不违法 不违反道德 创新技术 创新业务 改变人类生活  类型 战略  你的战略是投资人的子战略  天花板就在那 在乎的是投资人自己的梦想，不在乎你的梦想  战略完全一致的是竞争对手 战略投资协议需补签  财务  投资人在乎赚钱、回报 给压力实现盈利、实现价值用户数量 尽量不要签对赌协议  众筹  对象  外面的朋友 顾问   初创  自行掏钱，会更谨慎 找天使投资人，看个人魅力  本质 商业= 生意+ 梦想  思考点  细分行业 细分客群 细分产品 细分用户 创造新概念 开拓新产品  图例</description>
    </item>
    
    <item>
      <title>菜</title>
      <link>http://domain.yqjdcyy.com/post/%E8%8F%9C/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E8%8F%9C/</guid>
      <description> [TOC]
烫生菜 [3&amp;frasl;5] 材料  生菜 蒜 生抽
工具 流程 生菜洗净焯熟
 蒜末炒香，关火后加生抽搅匀后淋在生菜上
  酸辣土豆丝 [3&amp;frasl;5] 材料  土豆 青辣椒 干红辣椒、大蒜、葱、姜、花椒 醋、盐  流程  土豆切丝，辣椒切段 花椒炸香后捞出，放入葱姜辣椒爆香 倒入土豆丝和醋翻炒一分钟 加入青辣椒、盐、蒜翻炒均匀  西红柿炒鸡蛋 材料  西红柿* 2 鸡蛋* 2
流程 西红柿对划后于开水中煮后去皮、对切去芯、切小块后加少许糖腌制出汁
 鸡蛋打散后，加等比30%凉开水搅拌至起泡
 热锅5汤匙凉油，油微起烟时转小火并倒入蛋液，并用筷子顺时针不停搅拌，在蛋液快凝固时盛出
 放油后加入西红柿、少许水和盐，压碎翻炒，待汤汁足够时倒入炒蛋翻炒收汁即可
注意事项 挑西红柿时挑扁圆、深红，轻按略软者
 顺西红柿底部凹槽切下，避免流汁，切好后去蒂
  青椒茄丝 材料  茄子 青椒 蒜  流程  青椒切丝，蒜切末，茄子切细条（越细越好） 热锅起油，蒜末煸出香气后，放入青椒大火快炒 倒入茄条、生抽翻炒后，扣盖焖两分钟 加入盐、鸡精翻炒 起锅前倒入醋  秋葵 材料  秋葵 葱、小米椒 生抽、油、盐  流程  盐水浸泡5分钟，后反复冲洗，去柄 水滴油、加盐煮开后，煮开后加入秋葵煮3分钟至断生 捞出后放入清水中放凉，后竖切摆上小米椒、葱末、少量生抽 起锅热油后泼到秋葵上即可  红烧茄子 材料  茄子 蒜 老抽、白糖、水  流程  茄子滚刀后，放入盆中加盐（3勺），静置10分钟后1攥出水 蒜切丁，加入老抽、糖、水后待用 热锅热油，倒入茄子炒至金黄 将配料倒入炖煮10分钟  清炒豆芽 材料  豆芽 葱、蒜、辣椒  流程  豆芽去头洗净，葱切段，辣椒切丝，蒜瓣切碎 热锅热油，蒜瓣爆香后倒入豆芽15秒 补葱段、辣椒丝快炒15秒 加盐调味，炒匀出锅即可  </description>
    </item>
    
    <item>
      <title>葛饰北斋</title>
      <link>http://domain.yqjdcyy.com/post/%E8%91%9B%E9%A5%B0%E5%8C%97%E6%96%8B/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E8%91%9B%E9%A5%B0%E5%8C%97%E6%96%8B/</guid>
      <description> [TOC]
葛饰北斋 简介  葛飾 北斎／かつしか ほくさい Katsushika Hokusai （1760年10月31日－1849年5月10日） 日本江户时代后期的浮世绘师 14岁学雕版印刷，18岁便和另一位浮世绘师胜川春章学画  评价  鲁迅  关于日本的浮世绘师，我年轻时喜欢的是北斋，现在则喜欢广重，其次则为歌麿的人物。”接着他又说，“不过依我看，适合中国人一般眼光的，恐怕还是北斋。   作品  富岳三十六景  表富士（初版） 里富士（追加）   赏析 </description>
    </item>
    
    <item>
      <title>语言类型</title>
      <link>http://domain.yqjdcyy.com/post/%E8%AF%AD%E8%A8%80%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E8%AF%AD%E8%A8%80%E7%B1%BB%E5%9E%8B/</guid>
      <description> [TOC]
语言类型 参考  编译型语言、解释型语言、静态类型语言、动态类型语言概念与区别 弱类型、强类型、动态类型、静态类型语言的区别是什么？  类型 编译型语言  描述  通过编译器将源代码编译成机器码 通过链接将各模块机器码和依赖库串连运行  优点  预编译时对代码进行优化 执行效率高，可脱离语言环境独立运行  缺点  编译后修改需整个模块重新编译 需根据运行环境编译  代表  C/ C++/ swift   解释型语言  描述  运行程序时逐行翻译  优点  优秀的平台兼容性（安装解释器|虚拟机）  缺点  每次运行都要解释，效率较低  代表  JavaScript/ Python   混合类型语言  描述  取编译和解释型优点而成 编译成中间码，后通过中间语言运行库运行  如 C# 中会编译成 IL代码，后保存在dll中；首次运行时由 JIT 在编译成机器码缓存在内存中，下次直接执行   代表  C#   动态语言  描述  运行时可改变代码结构  新函数、新对象、引入代码   代表  C#/ JavaScript/ Python   静态语言  描述  运行时结构不可变  代码  Java/ C/ C++   静态类型语言  描述  编写代码时，需明确变量的数量类型  代表  C/ C++/ C#/ Java   动态类型语言  描述  运行期间才进行数据类型检查  代表  JavaScript/ Python   强类型语言  描述  变量确定类型后将不可改变  代表  Java/ C#/ Python   弱类型语言  描述  变量可被赋予不同类型值  代表  JavaScript/ C   </description>
    </item>
    
    <item>
      <title>销售就是要搞定人 </title>
      <link>http://domain.yqjdcyy.com/post/%E9%94%80%E5%94%AE%E5%B0%B1%E6%98%AF%E8%A6%81%E6%90%9E%E5%AE%9A%E4%BA%BA/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E9%94%80%E5%94%AE%E5%B0%B1%E6%98%AF%E8%A6%81%E6%90%9E%E5%AE%9A%E4%BA%BA/</guid>
      <description>[TOC]
销售就是要搞定人 对自己  提升能力  解决问题  全局前提：了解局部、推荐人、相关影响人、决策人和拍板人 局部前提：搞定局部相关人员 搞定关键人前提：善于答定人&amp;amp; 敏感&amp;amp; 拉近和客户的距离  提高  魄力  胡雪岩穷得叮当响时，居然敢赞助同样落魄的王有龄。后王发迹了，也才有了胡的红顶商人神话  心态 守原则，会变通！ 多看新闻联播和地方新闻，即是方向，也是谈话资本   注意形象  用最少的时间、金钱和精力，树立起一个最为大家所尊重的悦纳的个人形象 身上一定要有抢眼的地方，比如戴表 自信！ 注意事项  绝不可弯腰驼背 绝不可让大公文包遮在身体前面   忌讳交浅言深！  话要说给懂的人听，给需要的人听 时机！  时机未到提前说，叫轻浮 应该说却不说，叫误事  地点  办公室永远要说光明正大的事 私人场所，便不必再说办公室内的套话   明哲保身的前提是了解各种情况，顺势而为，谋定后动 在任何时候都要冷静，不让表面现象牵着鼻子走，一定要看清本质才动手 人与人之间的差距在于理想。 不谋万世者，不足谋一时；不谋全局者，不足谋一域 制定目标，明确实现步骤，完善细节。而若随遇而安，运气等不确定因素来决定你命运的感觉，你愿意？  对下属  团队带领，忠心比能力重要  对同行  敌人也可以是朋友  对目标客户  先做朋友，再做生意 对手拿失败案子说事时也是销售机会，可以偿试简单介绍确有此事，然后重要介绍自己也是受害者 打开客户最有效、省钱的办法就是适宜的赞美  方法论  节奏  三个月订货为例  第一个月两个星期去一次，金钱投入一般即可 第二个月一星期去一次，适当请吃 第三个月需要天天出现   手段  初级  简单局面复杂化 落后时浑水摸鱼，乱中取胜  高级  复杂局面简单化 设置障碍，扼杀竞争对手；关键时机做表现最好的事  例  唐大诗人陈子昂学业有成后前往长安，但得不到名家的赏识。一日遇到一个卖胡琴者，有胡琴索价百万，陈子昂买了这把胡琴，邀众人至家中赏玩，竟当众摔琴。陈对大家说他只是一介书生，不懂琴艺，但会写文章，请大家欣赏他的文章。于是名动京师。   五步推销法  搜寻你的客户  了解哪些人有需求，不在无需求的人身上花费精力  接近你的客户  注意第一印象，使用幽默方式  引起客户的注意 激起客户的欲望 满足和客户的欲望  钩  客户类型  活泼型  喜欢讲 追求瞩目与喝彩，担心失去关注，反感受约束 让其多说，注意聆听，明确支持，多戴高帽  懦弱型  喜欢听 追求平稳和普遍接受，担心突然变化 不急，定目标鼓动，迫使其决定，以谈感情为主  利益型  冷静分析 追求认真准确，做事一丝不苟，担心被批评，反感盲目从事 提供严密技术方案，遵守承诺； 以干练形象示人，遵守规则  权力型  不耐烦听而打断你 追求支配地位和效率，担心被强迫、命令，反感优柔寡断 开门见山，尊重其地位，坚持多沟通多汇报    奇正相和  提炼自己的差异化，阒然于众 例  蔡泽，战国时期燕国人，博学善辩，为纵横家代表人物之一。先前游学过很多大小诸侯国，但未被人发现其才学，所以一直怀才不遇。但后来听说范雎以前推荐的郑安平和王稽都背叛了秦国，郑安平降赵，王稽与魏国私通。蔡泽曾对范雎说：“君子以义死难，视- 死如归；生而辱不如死而荣。士固有杀身以成名，虽义之所在，虽死无所恨。何为不可哉？”所以前往秦国游说范雎让贤于他，因为秦国有一条法律：“凡荐人不效者，与所荐之人同罪。”虽然秦昭王不加怪罪，但范雎心中已有畏惧。从而使蔡泽说服范雎成功而成为丞相。   解决问题首先是战略上的，是对规律的掌握，然后才是技巧上的，最后才是心态、细节上的 试错，总结原因  故事  资本论  如果有百分之二十的利润，资本就会蠢蠢欲动； 如果有百分之五十的利润，资本就会冒险； 如果有百分之一百的利润，资本就敢于冒绞首的危险； 如果有百分之三百的利润，资本就敢于践踏人间一切法律。  同样销售阀门，有的一年销售额达到300万就沾沾自喜，但我知道2007年有个销售高手一个订单是2.</description>
    </item>
    
    <item>
      <title>面</title>
      <link>http://domain.yqjdcyy.com/post/%E9%9D%A2/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E9%9D%A2/</guid>
      <description>[TOC]
面食 西红柿鸡蛋面 [3&amp;frasl;5] 材料  鸡蛋 西红柿 小葱  流程  鸡蛋炒开 西红柿去皮压碎后与鸡蛋拌炒 4&amp;frasl;5 碗水，大拇指至食指末节数量挂面 焖煮9分钟，加盐、香油等出锅  阳春面 拌面 炒米粉 [3&amp;frasl;5] 材料  米粉 豆芽、青菜丝 肉丝、淀粉 鸡蛋 葱、姜、蒜 盐、生抽、老抽、料酒、香醋、胡椒粉  流程  豆芽去根，青菜切丝，葱切段， 蒜剁碎 米粉过水，待米粉可挑散后 冲凉水两遍，后沥干 瘦肉切丝，加生姜、生抽、老抽、料酒、香醋和淀粉腌制 10分钟 鸡蛋加料酒和盐打散，爆香蒜碎后炒散鸡蛋 后加入肉丝，翻炒至变色后加入米粉 翻炒时加入适量生抽上色 上色均匀后加入豆芽和葱段，并于完成时加入胡椒粉  番茄火腿芝士意面 材料  意面 小番茄* 20 火腿片 洋葱/ 2 橄榄油、盐、糖、芝士、番茄酱* 3勺  流程  小番茄对切，火腿、芝士切块，洋葱切丝 挑锅倒足水，开火煮沸倒入2ML盐后下意面，后转中火保持水沸腾即可，待达到包装建议时间后捞出拌以适量橄榄油 热锅热油，加洋葱丝爆香后加入火腿片、小番茄以中火翻炒至断生 加番茄酱、适量水和意面翻炒 放入芝士片、盐、糖调味后拌匀收汁即可  注意事项  锅与面匹配，尽量让面可上下扑腾 面入水后静待其软化而自动滑入锅中，勿蛮压、搅 严格按照包装袋建议时间，吃软多焖2分钟，若还需于配料中加热，建议提前2分钟  油泼面 材料  面条 辣椒面 蒜、姜、葱 青菜、豆芽 盐、酱油、油、香醋</description>
    </item>
    
    <item>
      <title>饭</title>
      <link>http://domain.yqjdcyy.com/post/%E9%A5%AD/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E9%A5%AD/</guid>
      <description> [TOC]
煮干饭 材料  米饭  两人三小碗左右   流程  淘米后加同杯量的水  什蔬咖喱炒饭 材料  米饭 西兰花、胡萝卜、玉米、青豆 圣女果 咖喱块、盐  流程  西兰花切块，胡萝卜切丁，青豆和玉米剥粒，圣女果对切 蔬菜焯水选用 咖喱加油小火炒香后，加入米饭炒匀 加入所有材料炒匀，加盐调味  排骨焖饭 [4.5&amp;frasl;5] 材料  米 肋排 香菇 胡萝卜 葱、姜、蒜 熏制、老抽、耗油、冰糖  过程  排骨切块，香菇、胡萝卜切丁，姜切丝蒜拍扁，葱切段，米洗净 排骨过开水去除血水，捞出后加入料酒、生抽、姜丝腌20分钟 热锅少油煎排骨至两面金黄0 加入姜丝、葱段、蒜、冰糖、生抽，并辅以老抽上色 加入香菇、胡萝卜、耗油和盐（量较炒菜多）翻炒 米加入等量水，加入材料拌匀后开始煮  腊肠菜饭 材料  米 腊肠 胡萝卜、青豆、水发香菇 麻油、盐、鸡精  流程  香菇洗净泡温水半小时，青豆洗净，胡萝卜、腊肠切丁，米饭洗净 热锅麻油，香菇与腊肠干煎2分钟 放入青豆、胡萝卜、盐、鸡精翻炒均匀后，拌入等量的水和米 煮饭完成后，拌匀后再焖5分钟  </description>
    </item>
    
    <item>
      <title>香水.推荐</title>
      <link>http://domain.yqjdcyy.com/post/%E9%A6%99%E6%B0%B4.%E6%8E%A8%E8%8D%90/</link>
      <pubDate>Thu, 16 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E9%A6%99%E6%B0%B4.%E6%8E%A8%E8%8D%90/</guid>
      <description> [TOC]
男香分享 推荐 Dolce &amp;amp; Gabbana the one 浓香版   [香调]东方辛香调 [前调]罗勒 葡萄柚 胡荽 [中调]小豆蔻 姜 橙花 [后调]烟草调 雪松木 龙涎香 时效性:一整天 推荐季节:秋/冬 推荐场合:商务 非常适合商务人士或成熟男性 ★★★★☆ | ★★★★★  ACQUA DI PARMA Colonia   [香调]柑橘香调 [前调]柠檬 甜橙 佛手柑 [中调]薰衣草 玫瑰 伊兰 [后调]广藿香 香根草 雪松 檀木 时效性:半天 推荐季节:春/夏 推荐场合:休闲 主打年轻与活力 ★★★★☆ | ★★★★☆  Juicy Couture Dirty English   [香调]性感木质调 [前调]胡椒 蓝色丝柏 卡拉布里亚佛手柑 小茴香 小豆蔻 [中调]马郁兰 皮革味 白檀 北非雪松 香根草 [后调]沉香木 黑檀木 黑色苔藓 琥珀 麝香 时效性:一天 推荐季节:春/夏/秋/冬 推荐场合:商务/休闲 香味易接受，季节、场合百搭 ★★★★☆ | ★★★★☆  Tom Ford Tobacco Vanille   [香调]辛辣东方调 [前调]烟草 辛香料 [中调]顿加豆 烟草花 香草 可可果 [后调]干果 木质香 时效性:一天 推荐季节:春/秋/冬 推荐场合:商务/休闲 评价满分 ★★★★★ | ★★★★★  Dsquared2 D2 He Wood   [香调]清新木质琥珀调 [前调]柑橘 佛手柑 [中调]海洋调 香菜 皮革 [后调]桃木 檀香 阿根廷草本植物 琥珀 时效性:半天 推荐季节:春/夏/秋/冬 推荐场合:商务/休闲 ★★★★☆ | ★★★★☆  Acqua di Parma Colonia Oud   [香调]木质调 [前调]柑橘 [中调]沉香 芜荽 海地乌木 [后调]皮革 麝香 时效性:一天 推荐季节:春/秋/冬 推荐场合:商务/休闲 夏天不推荐，年轻人不推荐 ★★★★☆ | ★★★★☆  Hermes Terre d&amp;rsquo;Hermes Eau Tres Fraiche   [香调]清新木质调 [前调]柑橘 橙子 水因子 [中调]老鹤草 [后调]木质元素 广蒮香 雪松 时效性:一天 推荐季节:春/夏/秋 推荐场合:商务/休闲 类比大地，更推荐 ★★★★★ | ★★★★☆  Bvlgari Man in Black   [香调]木质香调 [前调]朗姆酒 [中调]晚香玉 鸢尾纯香 皮革 [后调]安息香 零陵香豆 愈创木 时效性:半天 推荐季节:秋/冬 推荐场合:商务 成熟男人 ★★★★☆ | ★★★★☆  </description>
    </item>
    
    <item>
      <title>ActiveMq</title>
      <link>http://domain.yqjdcyy.com/post/activemq/</link>
      <pubDate>Wed, 15 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/activemq/</guid>
      <description>地址  入门：http://www.cnblogs.com/xwdreamer/archive/2012/02/21/2360818.html 下载：http://activemq.apache.org/download-archives.html  运行  解压至 D:\server\activemq\apache-activemq-5.9.1  注：D:\Program Files 等路径上存在空格等的不适合当其路径，会影响项目正常启动  点击 /bin/activemq.bat 启动 ActiveMQ 程序 进入 http://localhost:8161/admin/ ，并输入账号/密码 admin/admin 创建一个名为 FirstQueue 的 Queue 运行代码（如下）  代码 依赖 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.activemq&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;activemq-core&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;5.5.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt;  模式 - Queue 发送 public class Sender { private static final int SEND_NUMBER = 5; public static void main(String[] args) { ConnectionFactory connectionFactory; Connection connection = null; Session session; Destination destination; MessageProducer producer; connectionFactory = new ActiveMQConnectionFactory( ActiveMQConnection.</description>
    </item>
    
    <item>
      <title>CSS4.Color</title>
      <link>http://domain.yqjdcyy.com/post/css4.color/</link>
      <pubDate>Wed, 15 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/css4.color/</guid>
      <description>[TOC]
CSS4.Colors Tutorial Color Format  RGB(255, 0, 0) #FF0000 HSL(0, 100%, 50%) RED 140 standard color names http://www.w3schools.com/colors/colors_names.asp HWB(0, 0%, 0%) sugguest in css4 hue+ white+ black white+black&amp;lt;= 100 CMYK(0%, 100%, 100%, 0%) cyan/ magenta/ yellow/ black suggest in css4, not supported in html R0, 0%, 0% close to HWB natural color(NCol) from W3Schools [R|G|B|Y|C|M][\d]0, white%, black% white+ black&amp;lt;= 100  Color type  shades of gray r= g= b | #080808 shades of red r=[0-255], g= b= 0 web safe color = 216  CSS3.</description>
    </item>
    
    <item>
      <title>Go.Wukong</title>
      <link>http://domain.yqjdcyy.com/post/go.wukong/</link>
      <pubDate>Wed, 15 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.wukong/</guid>
      <description>[TOC]
悟空引擎使用 参考  使用wukong全文搜索引擎 huichen/wukong 悟空：用Go语言编写的全文搜索引擎 huichen/sego boltdb/bolt cznic/kv huichen/murmur  介绍 内部结构  主协程，用于收发用户请求 分词器（segmenter）协程，负责分词 索引器（indexer）协程，负责建立和查找索引表 排序器（ranker）协程，负责对文档评分排序  流程 索引  文档加入索引请求 主协程通过 channel 将分要分词的文本发送给分词协程 该协程将文本分词后通过另一信道发送给索引器协程 索引器协程建立从搜索键到文档的反向索引，并保存在内存中  搜索  主协程获取用户搜索请求，将搜索词分词后通过信道传递给索引器 索引器查找每个搜索键对应文档，并进行逻辑归并求交集后，得到精简文档列表，并通过信道传递给排序器 排序器对文档进行评分、筛选和排序，并通过指定信道返回主协程以返回给用户  结构  core data docs engine example storate testdata types utils  使用  基本
searcher = engine.Engine{} searcher.Init(types.EngineInitOptions{ IndexerInitOptions: &amp;amp;types.IndexerInitOptions{ IndexType: types.DocIdsIndex, }, SegmenterDictionaries: &amp;quot;./dict/dictionary.txt&amp;quot;, StopTokenFile: &amp;quot;./dict/stop_tokens.txt&amp;quot;, }) defer searcher.Close() searcher.IndexDocument(docId, types.DocumentIndexData{Content: text1}, false) searcher.</description>
    </item>
    
    <item>
      <title>Hugo 建站</title>
      <link>http://domain.yqjdcyy.com/post/hugo%E5%BB%BA%E7%AB%99/</link>
      <pubDate>Wed, 15 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/hugo%E5%BB%BA%E7%AB%99/</guid>
      <description>Hugo 建站 参考  使用Hugo搭建个人博客 Hugo Themes Hugo 中文文档 利用Github Pages和基于Go的Hugo搭建个人博客 Host on GitHub 使用hugo搭建个人博客站点 github Pages和Jekyll入门 3.5. 建立主页  安装  下载  gohugoio/hugo  安装  tar xvf hugo_0.15_linux_amd64.tar.gz -C /data/soft/hugo   生成  /data/soft/hugo/hugo new site /data/service/domain  archetypes config.toml  整体配置  content  文章  data layouts static themes  主题    安装主题  仅需将主题下载至 themes 文件下，并更 config.toml 中的 theme 为主题名称  下载  git clone https://github.</description>
    </item>
    
    <item>
      <title>Java.Log4j</title>
      <link>http://domain.yqjdcyy.com/post/java.log4j/</link>
      <pubDate>Wed, 15 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/java.log4j/</guid>
      <description>文件格式 配置根Logger  log4j.rootLogger = [ level ] , appenderName1 , appenderName2 , …  配置日志信息输出目的地 log4j.appender.appenderName = Appender log4j.appender.appenderName. Threshold= DEBUG ##输出DEBUG级别以上的日志 … log4j.appender.appenderName.optionN = valueN  配置日志信息的格式（布局） log4j.appender.appenderName.layout = fully.qualified.name.of.layout.class log4j.appender.appenderName.layout.ConversionPattern = value1 … log4j.appender.appenderName.layout.optionN = valueN  参数 [ level ] - 日志输出级别  FATAL[0] ERROR[3] WARN[4] INFO[6] DEBUG[7]  Appender - 日志输出目的地  org.apache.log4j.ConsoleAppender（控制台） org.apache.log4j.FileAppender（文件） org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件） org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件） org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）  Layout - 日志输出格式  org.apache.log4j.HTMLLayout（以HTML表格形式布局） org.apache.log4j.PatternLayout（可以灵活地指定布局模式） org.</description>
    </item>
    
    <item>
      <title>Java.注意事项</title>
      <link>http://domain.yqjdcyy.com/post/java.%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</link>
      <pubDate>Wed, 15 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/java.%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</guid>
      <description>finally  用于及时释放资源以不影响系统性能，并遵循最晚申请，最早释放原则，就近释放（若在A类一方法中申请到某个资源，应该就在这个方法的末尾将资源释放掉）。  preparedStatement  预编译语句，继承自Statement，用于处理大业务量的数据库操作 正确方法  PreparedStatement ps = con.prepareStatement(&amp;quot;select * from student where stuNo=?&amp;quot;); //!! for(int i=0; i&amp;lt; 1000; i++){ ps.setString(1, &amp;quot;1000&amp;quot;); ResultSet rs = ps.executeQuery(); rs.close(); } ps.close(); //!! //PreparedStatement效率高，但代价是建立在创建对象时付出较大的成本，但是创建后可以通过传入不同的参数重复高效的使用  注意事项  在高频率反复执行同一类业务量的数据处理任务时使用   连接池  为服务器配置连接池，而在配置文件中指定所要连接的数据库和连接个数，便于服务器启动时，首先连接目标数据库创建指定个数的活动连接，并将其放到连接池中。 优点  不同的访问者共享有限的连接，免去了数据库连结的漫长创建过程  类似使用  在线程管理中，为避免线程资源的浪费和提高效率，也可以采用线程池来进行线程的管理   内存管理 引用类型 弱引用  定义  当被弱引用指向的对象除该弱引用之外不再有其他的引用指向这个对象，这个对象即为“弱引用”  回收标准  检查到该弱引用指向的对象，就会将其回收  支持对象  WeakRefrence：弱引用对象 WeakHashMap：专用于管理弱引用集合，消除由于HashMap不释放导致对象数据长期残留于内存的情况</description>
    </item>
    
    <item>
      <title>JavaScript.TypeScript</title>
      <link>http://domain.yqjdcyy.com/post/javascript.typescript/</link>
      <pubDate>Wed, 15 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/javascript.typescript/</guid>
      <description>[TOC]
TypeScript 参考  Wiki - TypeScript TypeScript Handbook（中文版） 官网 Microsoft/TypeScript 5分钟上手TypeScript 深入浅出ES6（八）：Symbols  简介  微软开发、开源的编程语言，为 JavaScript 的严格超集 添加可选的静态类型和基于类的面向对象编程 安德斯·海尔斯伯格参与设计  安装&amp;amp;使用  安装  npm install -g typescript  创建 hello.ts  function hello(user: string){ return &amp;quot;Hello&amp;quot;+ user; } var user = &amp;quot;yao&amp;quot; document.body.innerHTML= hello(user)  编译  tsc hello.ts   扩展 基础类型  类型  number bool string Tuple  let x: [string, number]  enum  enum Color {Red, Green, Blue}  any  默认动态类型  void null undefined never  总是抛出异常或根本不会返回值的函数表达式 箭头函数表达式的返回值类型   示例  function Add(left: number, right: number): number { return left + right; }  细节  类型批注被导出到声明文件，便于 javascript 和 TypeScript 脚本中类型信息均可使用 类型断言  清楚确切的类型时，通知编译器进行类型转换，而不进行特殊数据检查和解构 写法  let len: number = (&amp;lt;String&amp;gt;val).</description>
    </item>
    
    <item>
      <title>Linux.Chown</title>
      <link>http://domain.yqjdcyy.com/post/linux.chown/</link>
      <pubDate>Wed, 15 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux.chown/</guid>
      <description> [TOC]
chown 格式  chown [option]* [user[:[group]*]] [file|group]*
必要参数 -c
 显示更改的部分的信息  -f
 忽略错误信息  -h
 修复符号链接  -R
 处理指定目录以及其子目录下的所有文件  -v
 显示详细的处理信息  -deference
 作用于符号链接的指向，而不是链接文件本身
选择参数  --reference=&amp;lt;目录或文件&amp;gt;
 把指定的目录/文件作为参考，把操作的文件/目录设置成参考文件/目录相同拥有者和群组  --from=&amp;lt;当前用户：当前群组&amp;gt;
 只有当前用户和群组跟指定的用户和群组相同时才进行改变  --help
 显示帮助信息  --version
 显示版本信息
实例  chown -R appuser:appuser yao
 将 root 权限下文件夹分配给 appuser 用户   </description>
    </item>
    
    <item>
      <title>Linux.Git</title>
      <link>http://domain.yqjdcyy.com/post/linux.git/</link>
      <pubDate>Wed, 15 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux.git/</guid>
      <description> [TOC]
参考  安装 Git 生成 SSH 公钥  流程  INSTALL  yum install git-core  SSH  CHECK  less cd ~/.ssh  CREATE  ssh-keygen    </description>
    </item>
    
    <item>
      <title>Linux.Scp</title>
      <link>http://domain.yqjdcyy.com/post/linux.scp/</link>
      <pubDate>Wed, 15 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux.scp/</guid>
      <description>[TOC]
参考  http://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/scp.html  特点  scp 为加密传输 scp 消耗资源少，不会提高多少系统负荷  rsync 快一点，但小文件多时会导致硬盘 I/O 非常高   格式  scp [参数] [原路径] [目标路径]  参数  -1  强制scp命令使用协议ssh1  -2  强制scp命令使用协议ssh2  -4  强制scp命令只使用IPv4寻址  -6  强制scp命令只使用IPv6寻址  -B  使用批处理模式（传输过程中不询问传输口令或短语）  -C  允许压缩。（将-C标志传递给ssh，从而打开压缩功能）  -p  留原文件的修改时间，访问时间和访问权限。  -q  不显示传输进度条。  -r  递归复制整个目录。  -v  详细方式显示输出。 scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。  -c  cipher 以cipher将数据传输进行加密，这个选项将直接传递给ssh。  -F  ssh_config 指定一个替代的ssh配置文件，此参数直接传递给ssh。  -i  identity_file 从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。  -l  limit 限定用户所能使用的带宽，以Kbit/s为单位。  -o  ssh_option 如果习惯于使用ssh_config(5)中的参数传递方式，  -P  port 注意是大写的P, port是指定数据传输用到的端口号  -S  program 指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。   事例  scp -r root@10.</description>
    </item>
    
    <item>
      <title>OpenXml.ShapeDefinition</title>
      <link>http://domain.yqjdcyy.com/post/openxml.shapedefinition/</link>
      <pubDate>Wed, 15 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/openxml.shapedefinition/</guid>
      <description>[TOC]
Shape Definitions And Attributes The Coordinate Systems The Document Coordinate System  (0,0) in the upper left of the document x++, move right y++, move downwards Unit EMUs 1 pixel= 9525 EMUs 1 cm= 360000 EMUs 1 inch = 914400 EMUs
The Shape Coordinate System When get the width and height
 (0,0) in the upper left of the shape
 Unit: EMUs
The Path Coordinate System (0,0) in the upper left of the shape</description>
    </item>
    
    <item>
      <title>Oracle.常见问题</title>
      <link>http://domain.yqjdcyy.com/post/oracle.%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 15 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/oracle.%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</guid>
      <description>ORA-12541:TNS:无监听程序  监听失败，自己遇到的情况是主机设置错误 -进入到下述文件中： D:\oracle\product\10.2.0\db_2\network\ADMIN\listener.ora  (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.1.101)(PORT = 1521))  更新HOST为本地即 HOST= 127.0.0.1 重启监听服务  ORA-01045 :user system lacks create session privilege; logon denied  由于新建的用户缺少机关的权限信息 用sys登入Oracle DB后,下grant create session to yqj;  ORA-12514问题，即TNS 监听程序不能识别给定的SID  指定的数据库未加入监听 进入到下述文件中： D:\oracle\product\10.2.0\db_2\network\ADMIN\listener.ora 指定位置添加相关文字  SID_LIST_LISTENER = (SID_LIST = (SID_DESC = (SID_NAME = PLSExtProc) (ORACLE_HOME = C:\oracle\product\10.2.0\db_1) (PROGRAM = extproc) ) /**NEW (SID_DESC = (GLOBAL_DBANAME = testDB) (ORACLE_HOME = C:\oracle\product\10.</description>
    </item>
    
    <item>
      <title>Redis.使用</title>
      <link>http://domain.yqjdcyy.com/post/redis.%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 15 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/redis.%E4%BD%BF%E7%94%A8/</guid>
      <description>简介 介绍  支持网络，可基于内存亦可持久化的日志型、Key-Value数据库
参考 官网
 文档
 命令
 Linux下安装
 Jedis使用示例
  安装-WINDOWS  下载 http://www.Juming.com/Csdn/dx/?i=712654422676017&amp;amp;s=a2b84b5fc8f9fa297831deba85c07317 解压至 D:\redis-2.0.2，并更新替换redis.conf cmd执行 D:\redis-2.0.2&amp;gt;redis-server.exe redis.conf 运行服务器 cmd执行 D:\redis-2.0.2&amp;gt;redis-cli.exe -h 192.168.10.59 -p 6379 运行客户端 客户端执行 set name yao设置name=yao，后执行get name获取redis中name的值  安装-LINUX VI环境下输入  下载程序  wget http://download.redis.io/releases/redis-2.8.3.tar.gz  解压  tar xzf redis-2.8.3.tar.gz  跳转至解压目录  cd redis-2.8.3  安装Redis  make  若提示make指定未安装，执行yum -y install gcc automake autoconf libtool make 进行安装   拷贝执行相关  src路径下的redis-server、redis-benchmark、redis-cli，redis-2.</description>
    </item>
    
    <item>
      <title>项目发布总结</title>
      <link>http://domain.yqjdcyy.com/post/%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E6%80%BB%E7%BB%93/</link>
      <pubDate>Wed, 15 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E6%80%BB%E7%BB%93/</guid>
      <description> 域名相关 购买：  购买网站  万网 www.net.cn  示例：
 fzsfxd.com 有限时间三年，金额为149元
服务器备案  若使用国内服务器，且要使用购买的域名，均需要进行备案，周期大概要半个月（个人，较快）
 介绍
 http://beian.aliyun.com  流程
 网站信息、相关企业个人身份证等相关资质填写。 申报人拍照，不允许 PS，其中背景需要为指定幕布（可免费向阿里申请） 网络管理局审批，较慢。   服务器相关 购买  购买网站：阿里云 http://www.aliyun.com/ 配置
  环境配置  使用镜像市场中 【Java 多版本环境】 -&amp;gt; 有坑！！！ 每种东西都留有坑，自己在使用过程中，除了 java 没动，其它 tomcat / mysql/ nginx 都重新安装配置过，囧。后面看它描述，帮忙发布调优啥的都要收费！！
  项目发布和域名解析  域名解析：进入域名解析界面，配置服务器 IP 地址，如 115.28.146.6 项目发布：Tomcat环境发布，本次将服务名称调整为 Root，以便输入 IP 端口后直接访问 Nginx：配置域名和指定服务的绑定，配置如下（安装使用 yum 安装）    注  其中 mysql/ tomcat/nginx 使用时都要注意端口是否有开放   项目收费  个人与企业进行交易，对方可能会要求你提供发票，甚至于企业开具的网站开发的增值税（或非增值）发票。  解决方法  找公司代开，如琴峰，但可能遇到情况是像琴峰他们公司，该操作会影响财务税点啥的，是不愿意操作。 找记账公司代开，但税点要求6，且无若金额太小别人是不鸟的。（此次金额5K）  最好的办法  事先讲好，个人性质，将不提供发票来着。    </description>
    </item>
    
    <item>
      <title>如何炼成商业分析能力</title>
      <link>http://domain.yqjdcyy.com/post/%E5%A6%82%E4%BD%95%E7%82%BC%E6%88%90%E5%95%86%E4%B8%9A%E5%88%86%E6%9E%90%E8%83%BD%E5%8A%9B/</link>
      <pubDate>Mon, 13 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E5%A6%82%E4%BD%95%E7%82%BC%E6%88%90%E5%95%86%E4%B8%9A%E5%88%86%E6%9E%90%E8%83%BD%E5%8A%9B/</guid>
      <description>如何炼成商业分析能力 参考  商业分析能力是怎样炼成的？  前言  幸存者偏差
 任何商业活动最终的成败，都是由一系列完整的环节相互作用所决定的 成功的商业决策者和普通消费者之间的区别  前者对于同样的现象，更能从本质上细致而深刻地理解成因，并知道如何采取相对应的措施去改变现象（即使这种判断不是100%精确的）。  唯有在不断的学习和实践中不断提升自身的商业能力，才有可能在残酷的商业世界的“存活者偏差”现象中成为“幸运”的存活者  学习内容
 会计和金融 战略和市场 营运和管理  迷男方法
 从决策者的决策过程来分析问题的全新维度 一切商业活动的本质都是对于目标客户消费决策的理解和引导，而所有的消费活动都遵循一个相似的过程。   TTPPRC 趋势 - Trend  顺势而为是从事一切商业活动的首要因素。在趋势（Trend）的面前，个人能力终归都是渺小的。 当你的洞察力没高到惊人的程度之前，如果发现了一个很明显的市场空白，那这个市场最大的可能就是——根本不存在。 与其费尽心思解读为什么会有这样的趋势，不如时刻留心趋势的变化，紧随时代的潮流的。 绝大多数商业项目在这一环的关键原则，是不犯大错误  流量 - Traffic  基础
 无论你想卖什么东西，先得让人知道你在卖呀。 让目标客户了解到他们有这么一个消费选择  定位目标客户 目标客户是企业而非大众消费者的（B2B和C2B），决定流量的是销售团队的力量。  不同的商业项目对流量（Traffic）的具体需求大不相同，一般而言，越是标准化高可替代性高的业态，流量这个环节在整个生意上就越重要，  提升
 强势品牌可以自发的导入流量 品牌的第一个作用就是导入流量。 一个商人商业能力的高低的首要标准，就是看他能为自己的生意导入多少流量  效率
 全网流量  微博和微信公众号 知乎和豆瓣  本地 O2O 流量  大众点评和美团 微博和微信    包装 - Package  基础</description>
    </item>
    
    <item>
      <title>Tomcat.Service</title>
      <link>http://domain.yqjdcyy.com/post/tomcat.service/</link>
      <pubDate>Thu, 09 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/tomcat.service/</guid>
      <description>[TOC]
参考  tomcat中server.xml配置详解 Tomcat server.xml配置示例 service.xml  软件  java tomcat  scp -rv /data/service/tomcat root@39.108.103.85:/data/service/tomcat   目录结构  data  service  bin  运行脚本  wechat-forum-dev-start.sh wechat-forum-dev-stop.sh deploy-instance.sh   logs  wechat-forum-dev  catalina.2017-08-15.log catalina.2017-08-15.out host-manager.2017-08-15.log localhost_access_log.2017-08-15.txt manager.2017-08-15.log  wechat-forum-dev_gc.log  run  wechat-forum-dev.pid  9015   tomcat  bin  启动、运行的相关二进制启动脚本 startup.sh shutup.sh version.sh  CATALINA_BASE  实例运行目录  CATALINA_HOME  安装目录  CATALINA_TMPDIR JRE_HOME CLASSPATH   conf  catalina.</description>
    </item>
    
    <item>
      <title>如何轻松聊天</title>
      <link>http://domain.yqjdcyy.com/post/%E5%A6%82%E4%BD%95%E8%BD%BB%E6%9D%BE%E8%81%8A%E5%A4%A9/</link>
      <pubDate>Wed, 08 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E5%A6%82%E4%BD%95%E8%BD%BB%E6%9D%BE%E8%81%8A%E5%A4%A9/</guid>
      <description>如何轻松聊天 参考  不懂跟异性轻松聊天，你如何get到这个技能  因素 心态  影响
 自信心 个人价值  提升
 提升个人价值  提高立身处世能力 收拾外表、整洁干净  与价值相当的人交往 丰富阅历   策略  了解对方需求，针对性满足 言语关怀，行动辅助  口才  避免由表面印象决定交流方式  轻率定高，无法不卑不亢聊天 定低则所决定的聊天方式、内容，容易让对方认定自己的低价值形式 采用*态度大方*表达句式  表达大方自然，干净利落 面对拒绝不强求，有意识不卑不亢   有效幽默  针对 聊天冷场 技能  方式  懂得利用话题 懂得如何问答 懂得发表意见  总结  就是利用对方感兴趣的话题作为切入点 然后在和对方问与答的互动之中 发表对事情的看法和见解  注意  注意节奏，交流而非审问   策略  向上归类  话题延伸至总结、深度  向下归类  概率具体伦  横向归类  扩展至同类、相似元素   补充  适当沉默 懂得倾听</description>
    </item>
    
    <item>
      <title>浮世绘</title>
      <link>http://domain.yqjdcyy.com/post/%E6%B5%AE%E4%B8%96%E7%BB%98/</link>
      <pubDate>Tue, 31 Oct 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E6%B5%AE%E4%B8%96%E7%BB%98/</guid>
      <description> [TOC]
浮世绘 简介  常指彩色印刷的木版画 “浮世”是指当时人们所处的现世，即现代、当代、尘世之类的意思 浮世绘画师以狩野派、土佐派出身者居多，这是因为当时这些画派非常显赫，而被这些画派所驱逐、排斥的画师很多都转向浮世绘发展所致。  制作  绘制原图 雕刻墨板 选定色彩 雕刻色板 刷版（10-20次）  代表画师  铃木春信 东洲斋写乐 歌川广重 葛饰北斋 喜多川歌麿 菱川师宣 溪斋英泉 歌川国芳 月冈芳年  补充  代代相傳的浮世繪技術——訪Adachi版畫研究所 浮世繪——江戶世風民情的寫照  </description>
    </item>
    
    <item>
      <title>美式足球</title>
      <link>http://domain.yqjdcyy.com/post/%E7%BE%8E%E5%BC%8F%E8%B6%B3%E7%90%83/</link>
      <pubDate>Tue, 31 Oct 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E7%BE%8E%E5%BC%8F%E8%B6%B3%E7%90%83/</guid>
      <description> [TOC]
美式足球 参考  美式足球 美式橄榄球基本规则 国家橄榄球联盟 NFL 有哪些现役球星值得关注？  规则 场地  100码* 53码  时间  4节* 15分 12分中场休息 每档组织进攻时间 40秒 暂停  传球失败 持球出界 裁判判罚   规则  开球  防守方于本方30码处开球  进攻方回攻手持球尽量向前推进，后续于被阻截处开始进攻 回攻手膝盖触地，表示贪玩，于进攻方20码处开始进攻   进攻  四档进攻，累计进攻10码 弃踢  回攻  争取更多码数开始进攻，甚至于达阵  放弃  单脚着地后，从本方20码开始    发球  由中锋将球传给四分卫  进攻  跑球  [四分卫|跑卫]接球后，摆脱防守后向前突破  传球  由[四分卫|任意发球线后人员]传出，由[外接手|近端锋]接住即可   失败  擒抱 拦截  防守人员将持球人员摔倒在地 进攻球员[单|双]膝触地  出界  丧失球权  丢球 抄截   分数  达阵 - 6分  附加分  射门 - 1分 2码再次冲阵 - 2分   点球 - 3分  未能达阵，第四档尝试  安防 - 2分  进攻队员被防守队员拦截于进攻方端区内   位置  进攻组  时机  已方获得球权  组成  四分卫 跑卫 中锋+ 护锋+ 截锋+ 近端锋 外接手   防守组  时机  对方获得进攻权  组成  线卫 防守前锋+ 端锋+ 截锋 角卫+ 中卫   特勤组  时机  弃踢、点球、开球  组成  弃踢员+ 踢球员+ 长开球手 扶球员 回攻手 阻跑员    战术  假跑真传 假传真跑的延迟交递 佯传实跑 防护短传 四分卫短传跑锋  联赛  国家美式足球联盟 - NFL 超级碗  国家美式足球联盟年度冠军赛  欧洲美式足球联盟 - NFL Europa  明星  Thomas Edward Brady  汤姆-布雷迪 新英格兰爱国者 四分卫 4次赢得超级碗 &amp;amp; 老婆为巴西超模吉赛尔-邦辰  Rob Gronkowski  罗布·格隆科夫斯基 新英格兰爱国者 近端锋 联盟最强近端锋   Cam Newton  坎姆-牛顿 卡罗来纳黑豹队 四分卫 上赛季的常规赛MVP，绰号“超人”  Justin James Watt  贾斯汀·詹姆斯·瓦特 休斯顿德州人队 防守端锋 三届NFL最佳防守球员 &amp;amp; NFL历史上首位生涯有两个赛季擒杀数超过20次的球员  Aaron Rodgers  阿隆·罗杰斯 绿湾包装工队 四分卫 第四十五届超级杯冠军 &amp;amp; 第四十五届超级碗最有价值球员 &amp;amp; 2011年美联社年度最佳男运动员  Odell Beckham Jr  奥戴尔-贝克汉姆 纽约巨人队 外接手 对阵达拉斯牛仔的单手接球   </description>
    </item>
    
    <item>
      <title>中国-厦门.美食</title>
      <link>http://domain.yqjdcyy.com/post/%E4%B8%AD%E5%9B%BD-%E5%8E%A6%E9%97%A8.%E7%BE%8E%E9%A3%9F/</link>
      <pubDate>Thu, 26 Oct 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E4%B8%AD%E5%9B%BD-%E5%8E%A6%E9%97%A8.%E7%BE%8E%E9%A3%9F/</guid>
      <description> [TOC]
美食 - 厦门 参考  吃遍了厦门正港美食，本地人有张清单想告诉你~  沙茶面  菜品 炸豆腐 猪肝沿 瘦肉 剔骨肉 鸭胗 推荐店铺 沙糖 月华 思明区镇邦路78号，民立小学对面 开禾 思明区厦禾路126号  龟苓膏  菜品 苦茶 西米露 西多士 推荐店铺 陈佳甜品 思明区镇邦路65号  大排档  菜品 醋肉 腰花 花菜大肠煲 豆干炒肉 炒泡面 炒法海瓜子 推荐店铺 良山大排档 海鲜一般，尽量错开就餐时间 思明区开元路250号（第八菜市场内） 202海鲜大排档 思明区斗西路108号 夏商海鲜批发市场 夏商中埔食材批发商城 兴旺海鲜城 湖里区港中路1453号A138-143  卤味  菜品 鸡翅 鸡爪 推荐店铺 真真卤味 思明区蜂巢山路20-104号  鸭肉粥  菜品 鸭肉粥 推荐店铺 浮屿大同鸭肉粥 思明区厦禾路174号 厦港大同鸭肉粥 思明区思明南路378号  花生汤  菜品 花生汤 酥脆韭菜盒 糯米炸 推荐店铺 思北花生汤店 思明区思明北路64号  潮福城  菜品 虾饺皇 推荐店铺 轮渡店 思明区鹭江道33号3楼 滨北店 思明区湖滨北路28号建业大厦裙边  客家菜  菜品 酒香河田鸡 黄骨鱼焖豆腐 推荐店铺 鑫客家客家菜 湖里区仙岳路601号  盐鸭  菜品 盐鸭 推荐店铺 阿呆盐鸭 到下午一点前 同安区东山路55号  封肉  菜品 封肉 推荐店铺 同安区祥福市场阿呆盐鸭角落  马蹄酥  菜品 素净马蹄酥 喜饼 推荐店铺 双鹿老铺 同安区南门路46号1楼  海蛎炸  菜品 海蛎炸 推荐店铺 林添发匙仔炸 集美区灌口小叮当幼儿园附近 坤赐小吃 同安区东山路47号（在阿呆旁边哦）  </description>
    </item>
    
    <item>
      <title>攻略-中国-桂林</title>
      <link>http://domain.yqjdcyy.com/post/%E4%B8%AD%E5%9B%BD-%E6%A1%82%E6%9E%97/</link>
      <pubDate>Thu, 26 Oct 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E4%B8%AD%E5%9B%BD-%E6%A1%82%E6%9E%97/</guid>
      <description>桂林 参考  桂林攻略 桂林旅游攻略 漓江经典五大玩法全攻略 谢大姐啤酒鱼 椿记烧鹅 崇善米粉(总店) 老油条甲天下桂林米粉 大师傅金奖啤酒鱼  推荐 时间  9-11月 2-4天  桂林市区 泛舟漓江，夜游阳朔 逆漓江至杨堤，后返桂林 龙脊梯田   饮食  桂林米粉  先拌匀干吃，再盛骨头汤饮用  漓江啤酒鱼  江鲤用桂北生茶油烹炸，后以啤酒红焖  马蹄糕  特产  地点  桂林市  微笑堂 人人乐 南城  阳朔西街  商品  阳朔画扇 豆腐乳 三花酒   景点  桂林-象山公园  门票  70  评价  去了后悔一会儿，不去后悔一辈子  景点  象鼻山 水月洞   桂林-两江四湖 桂林-靖江王城</description>
    </item>
    
    <item>
      <title>Tomcat. AccessLog </title>
      <link>http://domain.yqjdcyy.com/post/tomcat.-accesslog/</link>
      <pubDate>Sat, 21 Oct 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/tomcat.-accesslog/</guid>
      <description>[TOC]
Tomcat. AccessLog 参考  Tomcat Access Log配置 Class AccessLogValve  作用  设置请求日志中的日志输出格式  详解 位置  conf.server.xml  value.className= *.AccessLogValve   参数  className  执行类  org.apache.catalina.valves.AccessLogValve  默认  org.apache.catalina.valves.FastCommonAccessLogValve  仅支持 common 和 combined patterns
    directory
 产生文件所存放目录的[绝对|相对]路径  相对于 $CATALINA_HOME 默认为 logs   pattern
 %a - 远程IP地址 %A - 本地IP地址 %b - 发送的字节数(Bytes sent), 不包括HTTP headers的字节，如果为0则展示&#39;-&#39; %B - 发送的字节数(Bytes sent), 不包括HTTP headers的字节 %h - 远程主机名称(如果resolveHosts为false则展示IP) %H - 请求协议 %l - 远程用户名，始终为&#39;-&#39;(Remote logical username from identd) %m - 请求的方法(GET, POST等) %p - 接受请求的本地端口 %q - 查询字符串，如果存在，有一个前置的&#39;?</description>
    </item>
    
    <item>
      <title>Spark </title>
      <link>http://domain.yqjdcyy.com/post/spark/</link>
      <pubDate>Fri, 20 Oct 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/spark/</guid>
      <description>[TOC]
Spark 启动  Spark  method  setUp  threadPool ipAddress port secure  start  init stop webSocket  other  (String path, Route route)  get post put patch delete head trace connect options before after  (String path, String acceptType, Route route) webSocket(String path, Class&amp;lt;?&amp;gt; handler)   class  SingletonHolder  static final SparkInstance INSTANCE = new SparkInstance();  SparkInstance  parameter  port ipAddress max|min Threads webSocketHandlers SparkServer SimpleRouteMatcher CountDownLatch  method  init()  this.</description>
    </item>
    
    <item>
      <title>Linux.XArgs</title>
      <link>http://domain.yqjdcyy.com/post/linux.xargs/</link>
      <pubDate>Mon, 16 Oct 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux.xargs/</guid>
      <description>参考  Linux 系統 xargs 指令範例與教學 Wiki-xargs  作用  将参数列表转换成小块分段传递给其他命令，以避免参数列表过长 以空白字符或换行作为分隔，将标准输入切割为多字符串并作为指定指令执行时的参数  INPUT  xargs cat arg1 arg2 arg3  EXECUTE  cat arg1 arg2 arg3    参数  -d  指定输入的分隔符 -d\n  ``  指定每次执行时所用参数上限值 echo a b c d e f | xargs -n 3  echo a b c echo d e f   -p  每条分割语句执行前需经确认 echo 1 2 3 | xargs -p  echo 1 2 3 ?</description>
    </item>
    
    <item>
      <title>Redis.Keys-Del</title>
      <link>http://domain.yqjdcyy.com/post/redis.keys-del/</link>
      <pubDate>Mon, 16 Oct 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/redis.keys-del/</guid>
      <description>参考  Linux 系統 xargs 指令範例與教學 获取Redis所有Key / 删除指定前缀的Key 批量删除Redis数据库中的Key  明细  Login  /opt/redis/redis-cli -p &amp;lt;port&amp;gt; -a &amp;lt;password&amp;gt;  Search-Delete  /opt/redis/redis-cli keys &amp;quot;*&amp;quot; | xargs /opt/redis/redis-cli del   示例 删除指定练习相关缓存  导出以指定键开头的缓存  /usr/local/bin/redis-cli -p 37652 -a 5c\!1@a7z#5623qb2eee98e12b16d301466yunkai1024 keys &amp;quot;exercises:10203*&amp;quot; &amp;gt; /data/op-script/redis/exercises:10203  列举所有以指定键开头的缓存  /usr/local/bin/redis-cli -p 37652 -a 5c\!1@a7z#5623qb2eee98e12b16d301466yunkai1024 keys &amp;quot;exercises:10203*&amp;quot;  删除所有以指定键开头的缓存  /usr/local/bin/redis-cli -p 37652 -a 5c\!1@a7z#5623qb2eee98e12b16d301466yunkai1024 keys &amp;quot;exercises:10203*&amp;quot; | xargs /usr/local/bin/redis-cli -p 37652 -a 5c\!</description>
    </item>
    
    <item>
      <title>Linux.Nginx </title>
      <link>http://domain.yqjdcyy.com/post/linux.nginx/</link>
      <pubDate>Wed, 04 Oct 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux.nginx/</guid>
      <description>Linux.Nginx 参考  反向代理 Nginx 配置简述 nginx服务器安装及配置文件详解 nginx服务器详细安装过程 Centos下 Nginx安装与配置 nginx 官网 nginx配置location总结及rewrite规则写法 nginx配置url重写  概念 反向代理  概念  用代理服务器来接受internet上的连接请求，然后将请求「转发」给内部网络上的服务器，并将从服务器上得到的结果返回给 internet 上请求连接的客户端   用途  将防火墙后面的服务器提供给 Internet 用户访问  负载均衡 缓冲    Nginx 安装  yum install nginx  默认安装许多模块，影响以后安装第三方模块   指令  nginx -s [start|reload|stop]  通过 signal 向 nginx发送指令  nginx -t  查看 nginx 配置文件位置   基本配置 明细配置项 main Common  全局配置，与具体业务无关 woker_processes 2  工作进程的个数  默认设置为 CPU 的核数  grep ^processor /proc/cpuinfo | wc -l  cpu* (ssl|gzip?</description>
    </item>
    
    <item>
      <title>Linux.Grep</title>
      <link>http://domain.yqjdcyy.com/post/linux.grep/</link>
      <pubDate>Wed, 20 Sep 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux.grep/</guid>
      <description>[TOC]
Grep 参考  grep命令 每天一个linux命令（39）：grep 命令 linux grep命令 man-grep  格式  grep [OPTIONS] PATTERN [FILE...] grep [OPTIONS] [-e PATTERN | -f FILE] [FILE...]  参数 匹配器选择  -E, --extended-regexp  扩展正则表达式 由 POSIX 指定  -F, --fixed-strings, --fixed-regexp  模式解析为固定字符串列表，以换行符分隔，任一匹配 弃用别名  -G, --basic-regexp  解析为基本正则表达式 默认配置  -P, --perl-regexp  模式解析为 Perl 正则表达式 开发阶段，会提示未实现的特性   匹配控制  -e PATTERN, --regexp=PATTERN  文本正则  -f FILE, --file=FILE  正则条件文本文件，以换行符分隔 空文件则匹配不到任何东西  -i, --ignore-case  忽略正则表达式和内容的字符大小写匹配限制  -v, --invert-match  反向匹配 输出正则匹配到的元素之外的信息  -w, --word-regexp  全字匹配  -x, --line-regexp  全行匹配  -y  -i 的弃用同义词   控制输出  -c, --count  输出匹配的各文件中的行数  --color[=WHEN], --colour[=WHEN]  在终端以颜色区分匹配字符串，以转义字符显示包围的相关分隔符等信息 默认根据系统参数 GREP_COLORS 显示，但目前已弃用，优先级降低  -L, --files-without-match  打印出每个输入文件名称 终止于第一条匹配数据  -l, --files-with-matches  同 -L 由 POSIX 指定  -m NUM, --max-count=NUM  最多输出 NUM 个匹配项  -o, --only-matching  仅打印匹配行，以换行符分隔  -q, --quiet, --silent  不打印标准输出 成功时以 0 状态退出，失败时以 非0 值退出  -s, --no-messages  不打印异常消息   输出前缀控制  -b, --byte-offset  每行输出，0字节偏移  -H, --with-filename  打印每个匹配的文件名  -h, --no-filename  输出时忽略文件前缀 默认  --label=LABEL  以实际标准输入作为  文件的输入 gzip -cd foo.</description>
    </item>
    
    <item>
      <title>Go.并行&amp;并发 </title>
      <link>http://domain.yqjdcyy.com/post/go.goruntime/</link>
      <pubDate>Wed, 13 Sep 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.goruntime/</guid>
      <description>参考  Go语言并发与并行学习笔记 What exactly does runtime.Gosched do? 关于GoRoutine的一个运行问题  概念 默认设置  所有 goruutime 均在单原生线程中运行，仅占用单 CPU 当前 goruutime 不阻塞则不会让出 CPU 时间给其它同线程的 goruutime 当 goruutime 阻塞时， Go 将自动将此线程的其它 goruutime 转换到其它运行中的系统线程  并行&amp;amp; 并发   并行  多套环境 配套任务队列和消息处理  并发  一套环境 多任务队列和单一消息处理   重点  显式多核  runtime.GOMAXPROCS  手动显式调用  runtime.Gosched   示例  单线程多任务串行
 并发，逐一执行 ``` var quit chan int = make(chan int)  func loop() { for i := 0; i &amp;lt; 10; i++ { fmt.</description>
    </item>
    
    <item>
      <title>Go.并行&amp;并发 </title>
      <link>http://domain.yqjdcyy.com/post/go.%E5%B9%B6%E8%A1%8C%E5%B9%B6%E5%8F%91/</link>
      <pubDate>Wed, 13 Sep 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.%E5%B9%B6%E8%A1%8C%E5%B9%B6%E5%8F%91/</guid>
      <description>参考  Go语言并发与并行学习笔记 What exactly does runtime.Gosched do? 关于GoRoutine的一个运行问题  概念 默认设置  所有 goruutime 均在单原生线程中运行，仅占用单 CPU 当前 goruutime 不阻塞则不会让出 CPU 时间给其它同线程的 goruutime 当 goruutime 阻塞时， Go 将自动将此线程的其它 goruutime 转换到其它运行中的系统线程  并行&amp;amp; 并发   并行  多套环境 配套任务队列和消息处理  并发  一套环境 多任务队列和单一消息处理   重点  显式多核  runtime.GOMAXPROCS  手动显式调用  runtime.Gosched   示例  单线程多任务串行
 并发，逐一执行 ``` var quit chan int = make(chan int)  func loop() { for i := 0; i &amp;lt; 10; i++ { fmt.</description>
    </item>
    
    <item>
      <title>GraphQL</title>
      <link>http://domain.yqjdcyy.com/post/graphql/</link>
      <pubDate>Wed, 13 Sep 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/graphql/</guid>
      <description>[TOC]
GraphQL 参考  GraphQL Graphql入门 GraphQL GraphQL: A data query language graphql-go/graphql facebook/graphql  介绍 因果  大量并发请求和数据更新的二次请求，造成响应和维护的难度提升 不同 app 对相同资源的不同使用方法导致 API 爆炸性增长 大而全的通用性接口又不利于移动端使用  优点  足够描述性的数据抓取通用性 API 服务端解释后返回以特定形式  机制 类型  Query
query { hero { name } droid(id: &amp;quot;2000&amp;quot;) { name } }  Mutation ``` mutation CreateReviewForEpisode($ep: Episode!, $review: ReviewInput!) { createReview(episode: $ep, review: $review) { stars commentary } }
  { &amp;ldquo;ep&amp;rdquo;: &amp;ldquo;JEDI&amp;rdquo;, &amp;ldquo;review&amp;rdquo;: { &amp;ldquo;stars&amp;rdquo;: 5, &amp;ldquo;commentary&amp;rdquo;: &amp;ldquo;This is a great movie!</description>
    </item>
    
    <item>
      <title>Wechat.Export</title>
      <link>http://domain.yqjdcyy.com/post/wechat.export/</link>
      <pubDate>Wed, 13 Sep 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/wechat.export/</guid>
      <description> [TOC]
微信语音导出 参考 -如何导出微信【收藏】中的语音文件？ -Windows下批量转换Silk v3音频文件为MP3格式 -silk2mp3.zip - 3&amp;frasl;3 -ONLINE AUDIO CONVERTER - 0/ 1 -kn007/silk-v3-decoder
流程  将语音收藏 在手机完整收听 使用目录管理搜索提取  ./sdcard/tecent/MicroMsg/ 搜索 .silk 文件  拷贝至电脑 使用 silk2mp3 工具将音频*转换*为 mp3 格式文件  注意  SILK v3  为 skype 向第三方开发人员或硬件制造商提供的免版税谁的 Silk 宽音频编码器 文件更为精简  xxx.silk 18KB xxx.mp3 189KB    </description>
    </item>
    
    <item>
      <title>Error.Mysql</title>
      <link>http://domain.yqjdcyy.com/post/error.mysql/</link>
      <pubDate>Tue, 12 Sep 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/error.mysql/</guid>
      <description> 1175  Description  You are using safe update mode and you tried to update a table without a WHERE that uses a KEY column To disable safe mode, toggle the option in Preferences -&amp;gt; SQL Editor and reconnect.  Answer  SET SQL_SAFE_UPDATES = 0;   </description>
    </item>
    
    <item>
      <title>右键菜单绑定</title>
      <link>http://domain.yqjdcyy.com/post/windows.right-click.menu/</link>
      <pubDate>Fri, 08 Sep 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/windows.right-click.menu/</guid>
      <description> 右键菜单绑定 参考  Windows右键菜单设置与应用技巧 命令提示符中同时运行多命令  右键上传  修改注册表  结构  HKEY_CLASSES_ROOT  *  shell  （╯‵□′）╯︵┴─┴  新增「项」，其中名称为右键菜单要展示的名称 command  新增「项」，对应点击后执行的内容  默认  cmd.exe /k upload.exe -path=%1 &amp;amp;&amp;amp; exit  cmd.exe /k XXXXX  在 cmd 中执行 XXXXX 指令 &amp;amp;&amp;amp; 于前一条指令执行完成后执行           示例       </description>
    </item>
    
    <item>
      <title>Go.Upload.Qiniu</title>
      <link>http://domain.yqjdcyy.com/post/go.upload.qiniu/</link>
      <pubDate>Thu, 07 Sep 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.upload.qiniu/</guid>
      <description>[TOC]
描述  将指定 [文件|文件夹|当前文件夹] 的内容上传至 七牛云 上传完毕后将链接转换为 Markdown 格式文本 将结果数据更新至剪贴板  参考  Go SDK qiniu/api.v7 package context tjgq/clipboard package clipboard  需求  将链接中的图片等本地保存后，再重新上传生成链接 命令行可全局快速调用，考虑结合 wox 等工具 快速选择多个文件等 文件夹仅操作当层  测试  单文件 ``` go run main.go -path=C:\Users\Yao\Desktop\76aaa869ly1fi6n1duxn5j21dw0kak5a.jpg  ![76aaa869ly1fi6n1duxn5j21dw0kak5a.jpg][http://otzm88f21.bkt.clouddn.com/04cf05bd-ba52-4dee-8fa9-095555f5c7ec.jpg]
 - 文件夹  go run main.go -path=D:\data\soft\OneDrive\Documents\Write\work\云开
[人员列表.xls][http://otzm88f21.bkt.clouddn.com/a.xls] [六步搞定实地辅导-20170822.md][http://otzm88f21.bkt.clouddn.com/b.md] [人员列表.txt][http://otzm88f21.bkt.clouddn.com/c.txt]
 - Exe 方式调用[**异常**]  go run upload.go -path=C:\Users\Yao\Desktop\76aaa869ly1fi6n1duxn5j21dw0kak5a.jpg
[新建 Microsoft PowerPoint 演示文稿.pptx][http://otzm88f21.bkt.clouddn.com/19118280-cacb-43f3-98b6-32600ef459b9.pptx] uplaod.exe%!(EXTRA string=http://otzm88f21.bkt.clouddn.com/a932af7f-837a-4df6-92dd-e80b29c25ab6.exe) ```</description>
    </item>
    
    <item>
      <title>Herman Miller </title>
      <link>http://domain.yqjdcyy.com/post/herman-miller/</link>
      <pubDate>Fri, 01 Sep 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/herman-miller/</guid>
      <description> [TOC]
Herman Miller 参考  Herman Miller 官网  里程碑  60s  行动式办公室  Action Office Robert Propst 开放式办公屏风系统   1976  Ergon  1984  Equa  1994  Aeron 网椅  近期  Embody   推荐 Aeron  价位  天猫 Herman Miller 新款 Aeron【高端配置】 天猫 Herman Miller Aeron 座椅 标准配置（骶骨承托） 京东 Herman Miller 新款 Aeron【高端配置】-14天内发货 抛光底座/碳灰织物 大号 京东 Herman Miller Aeron 座椅 标准配置（骶骨承托） 碳黑色 中号  参考  Aeron座椅  欣赏        Embody  价位  天猫 Herman Miller Embody 座椅 标准配置【Rhythm织物】 京东 Herman Miller Embody 座椅 【Rhythm织物】 Rhythm织物\纯黑色 钛合金底座/白框  参考  Embody座椅  欣赏        T2  价位  [暂无]()  参考  T2  欣赏        Envelop办公桌  价位  天猫 Herman Miller Envelop 书桌【脚垫\部分现货】  参考  Envelop办公桌  欣赏       产品线 座椅  参考  座椅  系列  工作椅 主管椅 多用途/客椅 堆叠座椅 高脚凳 休闲座椅 公共座椅 长凳 户外座椅   工作空间  参考  工作空间  系列  个人工作站 私人办公室 办公桌 协作式家具 分隔屏风   桌子  参考  桌子  系列  会议桌 高度可调桌子 餐桌 多功能桌 户外桌子   储物  参考  储物  系列  配件  参考  配件  系列  人体工程学配件 照明 办公桌配件 装饰品   经典系列  参考  HermanMiller Collection    </description>
    </item>
    
    <item>
      <title>Go.交叉编译</title>
      <link>http://domain.yqjdcyy.com/post/go.%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/</link>
      <pubDate>Mon, 28 Aug 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/</guid>
      <description>[TOC]
Go.交叉编译 参考  交叉编译 Golang 交叉编译 go tool cgo Golang 在 Mac、Linux、Windows 下交叉编译  作用  Go作为编译型语言，在不同平台上需要编译生成不同格式的二进制包  参数  GOOS  程序构建目标环境的操作系统  GOARCH  程序构建目标环境的计算机架构  CGO_ENABLED  当值为 0 时表示设置 CGO 不可用   示例 Linux 64bit  GOOS=linux GOARCH=amd64 go build -o app.linux  -o 用于指定二进制文件名   Linux 32bit  GOOS=linux GOARCH=386 go build  windows 64bit  GOOS=windows GOARCH=amd64 go build  windows 32bit  GOOS=windows GOARCH=386 go build  Mac OS 64bit  GOOS=darwin GOARCH=amd64 go build  备注  CGO  GO 语言自带工具，用于支持调用 C 语言代码的 GO 语言源码文件  1.</description>
    </item>
    
    <item>
      <title>Linux.Run</title>
      <link>http://domain.yqjdcyy.com/post/linux.run/</link>
      <pubDate>Mon, 28 Aug 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux.run/</guid>
      <description>[TOC]
命令后台运行 参考  Linux 技巧：让进程在后台可靠运行的几种方法 linux命令后台运行 nohup命令 fg命令  类型  后台运行，终端关闭时停止 后台运行，终端关掉后仍继续运行  方法 前后台切换  流程  执行复杂语句 使用 Ctrl+ Z 挂起复杂程序  [1]+ Stopped /data/service/webapps/engine-dev/main  使用 jobs 查询后台工作情况  [1]+ Stopped /data/service/webapps/engine-dev/main  输入 fg 1 继续执行复杂语句 输入 bg 1 在后台继续执行语句  [1]+ /data/service/webapps/engine-dev/main jobs  [1]+ Running /data/service/webapps/engine-dev/main     后台执行  &amp;amp;  后台运行，终端关闭时停止  当前终端 shell 进程退出，会发送 hangup 信号给所有子进程 子进程收到 hangup 后退出  日志仍会打印到前台 示例  /data/service/webapps/engine-dev/main &amp;amp; /data/service/webapps/engine-dev/main &amp;gt; out.</description>
    </item>
    
    <item>
      <title>Linux 的目录与权限</title>
      <link>http://domain.yqjdcyy.com/post/linux%E7%9A%84%E7%9B%AE%E5%BD%95%E4%B8%8E%E6%9D%83%E9%99%90/</link>
      <pubDate>Fri, 25 Aug 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux%E7%9A%84%E7%9B%AE%E5%BD%95%E4%B8%8E%E6%9D%83%E9%99%90/</guid>
      <description>[TOC]
Linux 的目录与权限 参考  Linux 的文件权限与目录配置 理解inode Linux下 通过删除inode来删除文件  使用者与群组  文件拥有者 群组  当前拥有者所在群组其它成员权限  其它人  非当前拥有者所在群组成员的权限   文件权限 文件属性  示例  drwxr-xr-x 2 root root 4096 Aug 24 09:17 wechat-forum-dev  解析  (d)(rwx)(r-x)(r-x)  档案类型、权限 (1)  文件类型  d  目录  -  文件  l  link file  b  装置文件中可供存储的接口设备  c  装置文件中的串行端口设备，如键盘、鼠标    (2)  文件拥有者权限 三位固定代表是否可以读、写、执行 其中指定位上若无权限，则以-表示  (3)  同群组用户权限  (4)  非本群组用户权限   2  连结数 硬连接到此 inode 文件的数量  root  档案拥有者  root  档案所属群组  4096  档案大小，单位为字节  Aug 24 09:17  最后修改时间  wechat-forum-dev  档案名称    补充 inode  概念  inode  存储文件元信息  文件字节数 拥有者用户 ID 文件的组 ID 读、写、执行权限 时间戳  ctime  inode 上次变动时间  mtime  文件内容上次变动时间  atime  上次打开时间   链接数  多少个文件名指向这个 inode block 位置    Block  8* Sector  Sector  扇区 文件在硬盘中的最小存储单元 512 B   查看  stat file  查看文件的 inode 信息  ls -il  查看 inode 号码   补充  移动、重命名，更新文件名，不影响 inode  ls -i find .</description>
    </item>
    
    <item>
      <title>IDEA.MyBatisCodeHelper</title>
      <link>http://domain.yqjdcyy.com/post/idea.mybatiscodehelper/</link>
      <pubDate>Mon, 21 Aug 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/idea.mybatiscodehelper/</guid>
      <description> [TOC]
IDEA.MyBatisCodeHelper 参考  MyBatisCodeHelper MyBatisCodeHelper 1.2 发布，极大提升效率  描述  根据 JavaBean 生成 MyBatis 和 SQL.Create 更新方法名生成表单操作  使用  详见参考二中动态图  </description>
    </item>
    
    <item>
      <title>Linux.User</title>
      <link>http://domain.yqjdcyy.com/post/linux.user/</link>
      <pubDate>Fri, 18 Aug 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux.user/</guid>
      <description>[TOC]
参考  创建、删除用户 Linux系统中切换用户身份su与sudo的用法与实例 useradd命令 Linux 用户和用户组管理  指令 adduser  DESCRIBE  为创建的用户指定主目录、系统 shell 版本，并要求输入密码  主动调用 /etc/adduser.conf 默认创建 /home/user.name目录   FORMAT  adduser &amp;lt;user.name&amp;gt;  OPTIONS  --home  指定创建主目录的路径，默认是在 /home 目录下创建用户名同名的目录，这里可以指定； 如果主目录同名目录存在，则不再创建，仅在登录时进入主目录。  --quiet  即只打印警告和错误信息，忽略其他信息。  --debug  定位错误信息。  --conf  在创建用户时使用指定的 configuration 文件。  --force-badname  默认在创建用户时会进行 /etc/adduser.conf 中的正则表达式检查用户名是否合法  如果想使用弱检查，则使用这个选项 如果不想检查，可以将 /etc/adduser.conf 中相关选项屏蔽    EXAMPLE  ``   useradd  DESCRIBE  默认无密码、目录和指定 shell 版本  FORMAT  useradd [option]   OPTIONS  c &amp;lt;备注&amp;gt;  加上备注文字。备注文字会保存在 passwd 的备注栏位中；  d &amp;lt;登入目录&amp;gt;  指定用户登入时的启始目录；  D  变更预设值；  e &amp;lt;有效期限&amp;gt;  指定帐号的有效期限；  f &amp;lt;缓冲天数&amp;gt;  指定在密码过期后多少天即关闭该帐号；  g &amp;lt;群组&amp;gt;  指定用户所属的群组；  G &amp;lt;群组&amp;gt;  指定用户所属的附加群组；  m  自动建立用户的登入目录；  M  不要自动建立用户的登入目录；  n  取消建立以用户名称为名的群组；  r  建立系统帐号；  s&amp;lt;shell&amp;gt;  指定用户登入后所使用的shell；  u&amp;lt;uid&amp;gt;  指定用户id。 ID 值尽量 &amp;gt; 500，以避免冲突   EXAMPLE  useradd tmpuser -c &#39;useradd.</description>
    </item>
    
    <item>
      <title>Linux.Jenkins</title>
      <link>http://domain.yqjdcyy.com/post/linux.jenkins/</link>
      <pubDate>Thu, 17 Aug 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux.jenkins/</guid>
      <description>[TOC]
参考  Centos yum install jenkins jenkins实战之jenkins安装部署 Tomcat 部署方式 jenkins.io jenkins.war jenkins集成git，构建项目报错，做了ssh的认证，还是提示 Host key verification failed [WARNING] Failed to create parent directories for tracking file  流程 war  DOWNLOAD  wget http://mirrors.jenkins-ci.org/war/latest/jenkins.war  COPY  cp jenkins.war /data/service/webapps/jenkins/webapps/ROOT.war  CONFIG.JENKINS.TOMCAT  CATALINA_OPTS=&amp;quot;-server -DJENKINS_HOME=/root/.jenkins -Xms528m -Xmx528m -XX:PermSize=256m -XX:MaxPermSize=358m&amp;quot; export CATALINA_OPTS   yum  YUM.CONFIG  wget -O /etc/yum.repos.d/jenkins.repo http://jenkins-ci.org/redhat/jenkins.repo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key  YUM  yum install jenkins  JENKINS.</description>
    </item>
    
    <item>
      <title>Linux.Maven</title>
      <link>http://domain.yqjdcyy.com/post/linux.maven/</link>
      <pubDate>Thu, 17 Aug 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux.maven/</guid>
      <description> [TOC]
参考  Installing Apache Maven Maven - 环境配置 apache-maven-3.5.0-bin.zip apache-maven-3.5.0-bin.tar.gz  流程 Java.config  check $JAVA_HOME  Maven.config  UNZIP  /data/soft/apache-maven-3.5.0  EXPORT.ADD  /etc/profile  export M2_HOME=/data/soft/apache-maven-3.5.0 export M2=$M2_HOME/bin export MAVEN_OPTS=&#39;-Xms256m -Xmx512m&#39; export PATH=${PATH}:${M2}   EXPORT.SAVE  source /etc/profile  CHECK  mvn -v  MAVEN.CONFIG  /data/soft/apache-maven-3.5.0/conf/settings.xml  &amp;lt;localRepository&amp;gt;/data/soft/apache-maven-3.5.0/repo&amp;lt;/localRepository&amp;gt;    常用指令  clean install -Dmaven.test.skip=true -Dmaven.repo.local=/data/.m2 -X  显示 Debbug 信息   </description>
    </item>
    
    <item>
      <title>Linux.Java</title>
      <link>http://domain.yqjdcyy.com/post/linux.java/</link>
      <pubDate>Wed, 16 Aug 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux.java/</guid>
      <description> [TOC]
参考  Java SE CentOS 7 下安装jdk1.8 Download Oracle Java JRE &amp;amp; JDK using a script  安装  download  wget http://download.oracle.com/otn-pub/java/jdk/8u144-b01/090f390dda5b47b9b721c7dfaa008135/jdk-8u144-linux-x64.rpm?AuthParam=1502793850_1a99b9b8c46b13fbf1ea41f955c5bd54  install  yum localinstall jdk-8u144-linux-x64.rpm -y  check  java -version find / -name java  /usr/java/jdk1.8.0_144    </description>
    </item>
    
    <item>
      <title>Linux.Tomcat</title>
      <link>http://domain.yqjdcyy.com/post/linux.tomcat/</link>
      <pubDate>Wed, 16 Aug 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux.tomcat/</guid>
      <description>[TOC]
参考  tomcat中server.xml配置详解 Tomcat server.xml配置示例 service.xml  软件  java tomcat  scp -rv /data/service/tomcat root@39.108.103.85:/data/service/tomcat   目录结构  data  service  bin  运行脚本  wechat-forum-dev-start.sh wechat-forum-dev-stop.sh deploy-instance.sh   logs  wechat-forum-dev  catalina.2017-08-15.log catalina.2017-08-15.out host-manager.2017-08-15.log localhost_access_log.2017-08-15.txt manager.2017-08-15.log  wechat-forum-dev_gc.log  run  wechat-forum-dev.pid  9015   tomcat  bin  启动、运行的相关二进制启动脚本 startup.sh shutup.sh version.sh  CATALINA_BASE  实例运行目录  CATALINA_HOME  安装目录  CATALINA_TMPDIR JRE_HOME CLASSPATH   conf  catalina.</description>
    </item>
    
    <item>
      <title>Mysql.SELECT-INTO</title>
      <link>http://domain.yqjdcyy.com/post/mysql.select-into/</link>
      <pubDate>Tue, 15 Aug 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/mysql.select-into/</guid>
      <description>[TOC]
参考  SELECT &amp;hellip; INTO Syntax MySQL下SELECT…INTO OUTFILE导出文本文件命令 mysql导入数据load data infile用法 SELECT INTO OUTFILE  命令  SELECT ... INTO
 VAR_LIST  将栏目值存储至变量 栏目值需与变量名数据一致 仅返回一条记录  无数据返回，则报 Error（1329） 多行记录返回，则报 Error（1172） 建议使用 LIMIT 1   OUTFILE  将选择栏目值存储至文件 存储于服务器，需持有文件权限 文件路径不能为已存在文件  客户端执行 mysql -e &amp;quot;SELECT ...&amp;quot; &amp;gt; file_name 导出文件  文件格式使用情况  .txt  数据会以 TAB 间隔  csv  csv格式，但数据均存储至同一单元格内    DUMPFILE  将单行数据以任意形式文件导出   OUTPUT FORMAT</description>
    </item>
    
    <item>
      <title>Linux.Firewalld</title>
      <link>http://domain.yqjdcyy.com/post/linux.firewalld/</link>
      <pubDate>Mon, 14 Aug 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux.firewalld/</guid>
      <description>[TOC]
firewalld 参考  CentOS 7 为firewalld添加开放端口及相关资料 使用FirewallD替代Iptables的一些配置  指令 常见  添加端口  firewall-cmd --permanent --zone=public --add-port=3306/tcp  重启  firewall-cmd --reload  添加服务  firewall-cmd --permanent --add-service=mysql   所有  通用
 firewall-cmd [--zone=&amp;lt;zone&amp;gt;] --add-port=&amp;lt;port&amp;gt;[-&amp;lt;port&amp;gt;]/&amp;lt;protocol&amp;gt; [--timeout=&amp;lt;seconds&amp;gt;]  运行
 查看运行状态  systemctl status firewalld.service  开关  systemctl [stop|start] firewalld firewall-cmd --reload  服务相关  firewall-cmd --list-services firewall-cmd --[add|remove]-service=mysql firewall-cmd --permanent --[add|remove]-service=mysql  端口相关  firewall-cmd --zone=public --add-port=3306/tcp --permanent firewall-cmd --zone=public --list-ports firewall-cmd --zone=public --query-port=3306/tcp   开机启动</description>
    </item>
    
    <item>
      <title>Linux.Mysql</title>
      <link>http://domain.yqjdcyy.com/post/linux.mysql/</link>
      <pubDate>Mon, 14 Aug 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux.mysql/</guid>
      <description>[TOC]
参考  centos7 mysql数据库安装和配置 CentOS 7 安装 MySQL Linux下安装MySQL centos7 mysql数据库安装和配置  环境  Linux  LSB Version: :core-4.1-amd64:core-4.1-noarch Distributor ID: CentOS Description: CentOS Linux release 7.3.1611 (Core) Release: 7.3.1611 Codename: Core   安装 默认  yum install mysql yum install mysql-server yum install mysql-devel ### wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm rpm -ivh mysql-community-release-el7-5.noarch.rpm yum install mysql-community-server mysql_upgrade  初始化 Mysql 初始化  mysql_secure_installation  直接设置密码  set password for &#39;root&#39;@&#39;localhost&#39; =password(&#39;root.</description>
    </item>
    
    <item>
      <title>Dump.Analyze</title>
      <link>http://domain.yqjdcyy.com/post/dump.analyze/</link>
      <pubDate>Wed, 09 Aug 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/dump.analyze/</guid>
      <description> 使用  安装 Dump 包分析软件 安装完成后进行初始化设置  设置【File/ Symbol file path】的属性值为【D:\MyCodesSymbols;SRV*c:\symbols*http://symbols.mozilla.org/firefox; SRV*D:\MyLocalSymbols*http://msdl.microsoft.com/download/symbols;C:Windowssymbols】  编辑 vbs 文件，调整 windbg 执行目录 双击执行，并输入任务管理器中的指定监控软件的 PID 值 操作软件，并至崩溃状态（崩溃后会自动启动 windbg 进行 Dump 包存储） 开启 windbg x86 程序，并打开该 Dump 包（File/ Open Crash Dump） 待加载完成后输入【~* kp】显示异常堆栈 输入【!analyze -v -f】分析具体异常  资源  X86 Debuggers And Tools-x86_en-us.msi crashdump.vbs 命令集合.xlsx  </description>
    </item>
    
    <item>
      <title>Git.Install</title>
      <link>http://domain.yqjdcyy.com/post/git.install/</link>
      <pubDate>Wed, 09 Aug 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/git.install/</guid>
      <description>[TOC]
Git 安装 参考  GotGitHub git - 简易指南 GitHub Help Git教程  安装 Windows  git config --global user.name wrrwhn git config --global user.email yqjdcyy@gmail.com git config --global alias.gcf git config ssh-keygen  创建公钥/私钥对（id_rsa.pub/id_rsa） - 注意，不要有空格！！！  ssh-keygen -C &amp;quot;yqjdcyy@gmail.com&amp;quot; -f ~/.ssh/yqjdcyy  创建gotgithub公私钥对   Linux  yum install git git-svn git-email git-gui gitk git --version git config --global user.name &amp;quot;wrrwhn&amp;quot; git config --global user.email yaoqingju@gmail.com cat ~/.</description>
    </item>
    
    <item>
      <title>Java.Basic</title>
      <link>http://domain.yqjdcyy.com/post/java.basic/</link>
      <pubDate>Wed, 09 Aug 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/java.basic/</guid>
      <description>[TOC]
参考  使用 JDK 5 后的线程并发，Callable, Future, ExecutorServie Lock(重入锁，读写锁)及Condition示例 Java中的锁  功能 获取路径 分类  绝对路径  主页上的文件或目录在硬盘上真正的路径，如URL和物理路径 例  C:xyz est.txt  代表了test.txt文件的绝对路径    相对路径  相对与某个基准目录（一般对照WEB）的路径。 示例  &amp;quot;/&amp;quot;代表Web应用的跟目录 &amp;quot;./&amp;quot; 代表当前目录 &amp;quot;../&amp;quot;代表上级目录   注  JSP/SERVLET中的比较特殊，服务器端的地址服务器端的相对地址指的是相对于你的web应用的地址，因为该地址是由服务器端解析聘的   获取方法 JSP路径/系统全路径  使用环境  SERVLET/JSP  使用语句  request.getRealPath(&amp;quot;？&amp;quot;) --&amp;gt; ？为/ . 空格 web.xml request.getRealPath(request.getRequestURI()); getServletContext().getRealPath(&amp;quot;\&amp;quot;) //站点绝对路径 application.getRealPath(&amp;quot;&amp;quot;) //JSP界面使用 ServletContext().getRealPath(&amp;quot;&amp;quot;)  返回字串  C:\Apache\Tomcat\webapps\local+ （\ \.</description>
    </item>
    
    <item>
      <title>Java.Command</title>
      <link>http://domain.yqjdcyy.com/post/java.command/</link>
      <pubDate>Wed, 09 Aug 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/java.command/</guid>
      <description> [TOC]
Javac  作用  将 *.java 源代码转换为 *.class 格式文件  参考  Javac编译原理  事例  目录  D:\workspace\Knowledge_Structure\jni\JNIProxy.java  执行语句  D:\workspace\Knowledge_Structure\jni&amp;gt; javac JNIProxy.java    Javah  作用  生成类中所需的 JNI 头文件  参考  用javah 导出类的头文件， 常见的错误及正确的使用方法  事例  目录  D:\workspace\work4Git\Knowledge_Structure\00.语言\Java\代码\java-study\src\main\java\ com\yao\study\java\jni\JNIProxy.java  类定义  package com.yao.study.java.jni; public class JNIProxy{&amp;hellip;}  执行语句  D:\workspace\work4Git\Knowledge_Structure\00.语言\Java\代码\java-study\src\main\java&amp;gt; javah -o jni_msg.h com.yao.study.java.jni.JNIProxy    </description>
    </item>
    
    <item>
      <title>Java.Detail</title>
      <link>http://domain.yqjdcyy.com/post/java.detail/</link>
      <pubDate>Wed, 09 Aug 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/java.detail/</guid>
      <description>[TOC]
finally  用于及时释放资源以不影响系统性能 遵循最晚申请，最早释放原则，就近释放  若在A类一方法中申请到某个资源，应该就在这个方法的末尾将资源释放掉   preparedStatement  预编译语句，继承自Statement，用于处理大业务量的数据库操作 效率高，但代价是建立在创建对象时付出较大的成本，但是创建后可以通过传入不同的参数重复高效的使用 示例  PreparedStatement ps = con.prepareStatement(&amp;quot;select * from student where stuNo=?&amp;quot;); //!! for(int i=0; i&amp;lt; 1000; i++){ ps.setString(1, &amp;quot;1000&amp;quot;); ResultSet rs = ps.executeQuery(); rs.close(); } ps.close(); //!!  注  在高频率反复执行同一类业务量的数据处理任务时使用   连接池  为服务器配置连接池，而在配置文件中指定所要连接的数据库和连接个数 便于服务器启动时，首先连接目标数据库创建指定个数的活动连接，并将其放到连接池中 优点  不同的访问者共享有限的连接，免去了数据库连结的漫长创建过程  类似使用  在线程管理中，为避免线程资源的浪费和提高效率，也可以采用线程池来进行线程的管理   内存管理 引用类型 弱引用  当被弱引用指向的对象除该弱引用之外不再有其他的引用指向这个对象，这个对象即为“弱引用” 回收标准  检查到该弱引用指向的对象，就会将其回收  支持对象  WeakRefrence：弱引用对象 WeakHashMap：专用于管理弱引用集合，消除由于HashMap不释放导致对象数据长期残留于内存的情况</description>
    </item>
    
    <item>
      <title>Linux.Vim</title>
      <link>http://domain.yqjdcyy.com/post/linux.vim/</link>
      <pubDate>Tue, 08 Aug 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux.vim/</guid>
      <description>[TOC]
简明 VIM 练级攻略 阶段  存活 感觉良好 觉得更好，更强，更快 使用VIM的超能力  存活  i  Insert 模式  ESC  返回 Normal 模式  x  删除当前光标所有的一个字符  dd  剪切当前行  p  粘贴  hjkl  对应左下右上  :q&amp;lt;enter&amp;gt;  不保存退出   感觉良好 插入  i  在光标前插入  a  在光标后插入  O  在当前行前插入新行  o  在当前行后插入新行  cw  替换从光标所在位置后到一个单词结尾的字符   移动  0  行头  $  行尾  ^  到本行第一个 非blank 字符位置 blank= 空格| tab| 换行| 回车  g_  到本行最后一个非blank字符位置  /pattern  搜索 pattern 字符串   拷贝/ 粘贴  p  粘贴  yy  复制   Undo/ Redo  u  撤消   文件操作  :e  打开文件  :w  保存  ：saveas &amp;lt;path&amp;gt;  将文件另存至   :q!</description>
    </item>
    
    <item>
      <title>Go.VSCode</title>
      <link>http://domain.yqjdcyy.com/post/go.vscode/</link>
      <pubDate>Mon, 31 Jul 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.vscode/</guid>
      <description> [TOC]
VS-Code Go 开发 参考  VS Code 搭建 Go 开发IDE Running VS Code on Windows  安装  安装 vs-code 「Ctrl+ Shift+ P」后输入 「install Extensions」「Go」 安装「lukehoban - Go」 版本  调试  切换到「调试」界面，并点击「打开 launch.json」打开配置 调整指定配置项  &amp;lt;!-- 当前项目于 GOPATH 中的路径 --&amp;gt; &amp;quot;program&amp;quot;: &amp;quot;${workspaceRoot}\\Utils_Go\\src\\md5&amp;quot;, &amp;lt;!--设置当前环境变量 --&amp;gt; &amp;quot;env&amp;quot;: { &amp;quot;GOPATH&amp;quot;: &amp;quot;D:\\server\\go\\lib;D:\\work\\git\\yao\\go\\Hello_Go;D:\\work\\git\\yk\\go\\pptconverter-gateway\\code;${workspaceRoot}\\Utils_Go&amp;quot; }, &amp;lt;!--设置启动参数 --&amp;gt; &amp;quot;args&amp;quot;: [ &amp;quot;-c=1&amp;quot;, &amp;quot;-p=D:\\work\\git\\yao\\go\\Utils_Go\\template\\dest.mp4&amp;quot; ],  设置断点、进行调试  注  安装「lukehoban - Go」时，部分「go get」部分来源需要翻墙 调试相关快捷键同 visual stuio  </description>
    </item>
    
    <item>
      <title>Go.Nsq</title>
      <link>http://domain.yqjdcyy.com/post/go.nsq/</link>
      <pubDate>Tue, 25 Jul 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.nsq/</guid>
      <description>[TOC]
[NSQ] 参考  An Example of Using NSQ From Go NSQ 官网 NSQ Github NSQ 指南  介绍 NSQ  实时的分页式消息处理平台 支持无 SPOF 的分布式拓扑 默认消息不持久化  可通过设置 --mem-queue-size 参数为 0 变更  接收到的消息无序  组成  nsqlookupd  作用  管理拓扑结构信息的守护进程 客户端查询以发现 nsqd 生产者的指定 topic nsqd节点广播 topic 和 channel 信息 接口提供  TCP：供 nsqd广播操作 HTTP：供客户端发现、管理性动作   参数  -broadcast-address  lookupd 节点地址 默认为 PROSNAKES.local  -config  config 文件路径  -tcp-address  TCP 客户端请求地址、端口 默认为 0.</description>
    </item>
    
    <item>
      <title>Linux.Make</title>
      <link>http://domain.yqjdcyy.com/post/linux.make/</link>
      <pubDate>Tue, 25 Jul 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux.make/</guid>
      <description>[TOC]
Make 参考  例解 Linux 下 Make 命令  作用  编译和安装开源工具 管理大型复杂项目的编译  原理  配合 Makefile 文件进行文件与相应目标的对应操作 扫描 Makefile 找到目标及其依赖，并递归建立扫描、编译，后编译主目标 再次执行时，仅编译相关目标文件  参数  -B  让所有目标总是重新建立  -d  打印调试信息  -C  切换到指定目录执行  -f  指定 Makefile 配置文件名   示例  配置文件  all: test test: test.o anotherTest.o gcc -Wall test.o anotherTest.o -o test test.o: test.c gcc -c -Wall test.c anotherTest.o: anotherTest.c gcc -c -Wall anotherTest.</description>
    </item>
    
    <item>
      <title>Go.GPM</title>
      <link>http://domain.yqjdcyy.com/post/go.gpm/</link>
      <pubDate>Sun, 23 Jul 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.gpm/</guid>
      <description>[TOC]
参考  gpm - Go Package Manager 跟我一起写Makefile Creating a personal access token  介绍 GPM  通过名为 Godeps 的 manifest 文件来管理、获取引用的指定版本依赖 Godeps文件置于 go 应用程序的根目录  使用 安装  wget https://raw.githubusercontent.com/pote/gpm/v1.4.0/bin/gpm &amp;ndash;no-check-certificate &amp;amp;&amp;amp; chmod +x gpm &amp;amp;&amp;amp; sudo mv gpm /usr/local/bin  设置  更新到指定版本  github.com/nu7hatch/gotrail v0.0.2  注释  #右侧的均被注释掉  扩展  #[gpm-track] xxxx  总是更新为最新版本  GPM 核心忽略行，但会影响插件行为  私有资源库访问  创建 github 访问 token 添加下行至 ~/.</description>
    </item>
    
    <item>
      <title>Go.Reflect</title>
      <link>http://domain.yqjdcyy.com/post/go.reflect/</link>
      <pubDate>Thu, 20 Jul 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.reflect/</guid>
      <description>[TOC]
Go.Reflect 参考  Package reflect [](http://www.golang.ltd/forum.php?mod=viewthread&amp;amp;tid=6017)  类型和接口 Go 为静态类型语言，变量有且只有一个静态类型，于编译时已确认 var r io.Reader r = os.Stdin r = bufio.NewReader(r) r = new(bytes.Buffer) // r 不管指向什么，类型永远是 io.Reader  interface{}  任何具体值均有 0+个方法，因此 interface{} 变量能存储任何值 Interface 变量存储值，赋给该变量的值 &amp;amp; 值类型的描述符  定律  反射可以将“接口类型变量”转换为“反射类型对象” 反射可以将“反射类型对象”转换为“接口类型变量” 如果要修改“反射类型对象”，其值必须是“可写的”（settable）  方法  reflect.Type  Kind() NumMethod() | Method(int) NumField() | Field(i int) | Elem()  返回类型的元素类型 非[Array| Chan| Map| Ptr| Slice]时 panic   reflect.</description>
    </item>
    
    <item>
      <title>Windows.Service</title>
      <link>http://domain.yqjdcyy.com/post/windows.service/</link>
      <pubDate>Thu, 20 Jul 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/windows.service/</guid>
      <description>[TOC]
Windows 程序服务化 参考  SC NSSM windows service startup timeout reset service timeout 服务安装启动报错误1053  SC - Service Controller 语法  sc [ServerName] [command] [Optionname= Optionvalues]  常用参数  config  更新服务配置 sc config nsqd start= auto  control  发送控制指令 sc [&amp;lt;ServerName&amp;gt;] control [&amp;lt;ServiceName&amp;gt;] [{paramchange | netbindadd | netbindremove | netbindenable | netbinddisable | &amp;lt;UserDefinedControlB&amp;gt;}]  create | delete  创建|删除服务 sc create nsqd binPath= .\nsqd.exe start= auto  start | stop  启动|停止服务 sc start nsqd   示例 @echo off sc create nsqd binPath= .</description>
    </item>
    
    <item>
      <title>Chrome.Plugin </title>
      <link>http://domain.yqjdcyy.com/post/chrome.plugin/</link>
      <pubDate>Wed, 28 Jun 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/chrome.plugin/</guid>
      <description>[TOC]
参考  Getting Started: Building a Chrome Extension Overview Developer&amp;rsquo;s Guide Sample Extensions  示例解析  目录结构
html setting.html // 弹出界面 images icon.png // banner 上小图标，推荐使用 19*19 的半透明 png 图片，同时提供 38*38 的半透明 png 图片作为大图标 js setting.js // 弹出界面所引用 js 文件，__要求 js 和 html 分开存放__ manifest.json // 插件配置文件  manifest.json
{ &amp;quot;manifest_version&amp;quot;: 2, // 配置文件版本 &amp;quot;name&amp;quot;: &amp;quot;插件名称&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;插件功能描述&amp;quot;, &amp;quot;version&amp;quot;: &amp;quot;0.1&amp;quot;, // 插件当前开发版本 // 通用型 &amp;quot;browser_action&amp;quot;: { // 浏览器级动作 &amp;quot;default_icon&amp;quot;: &amp;quot;/images/icon.</description>
    </item>
    
    <item>
      <title>Go.安装配置</title>
      <link>http://domain.yqjdcyy.com/post/go.%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Wed, 28 Jun 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</guid>
      <description> [TOC]
配置  GOROOT  配置 GO 的可执行文件路径 D:\server\go\1.8  PATH  将 Go 相关可执行文件列表入搜索路径中 %GOROOT%\bin  GOPATH  目录列表，类似于maven中的repository目录，引用库 其中第一个地址将作为 go get 的下载目录 D:\server\go\lib D:\work\git\yao\go\Hello_Go   </description>
    </item>
    
    <item>
      <title>Go.异常处理</title>
      <link>http://domain.yqjdcyy.com/post/go.%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</link>
      <pubDate>Tue, 23 May 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</guid>
      <description>[TOC]
Defer, Panic, Recover 参考  Defer, Panic, and Recover Go的异常处理 defer, panic, recover  使用 defer  作用  用于在当前方法结束时，执行相关方法  特点
 声明 defer 时值即为方法中参数被赋的值 声明多个时，即以后进先出的顺序执行 可读取、操作命名的方法返回参数对象
 操作返回值
// return 2 func c() (i int) { defer func() { i++ }() return 1 }  panic   特点
 内置方法 立即中断当前程序 方法内原defer定义方法仍可正常进行 向上抛出该程序崩溃处指针   recover  特点  内置方法 仅可用于defer方法中 用于捕获panic抛出的异常信息   实例 func main(){ // 必须要先声明defer，否则不能捕获到panic异常 defer func(){ fmt.</description>
    </item>
    
    <item>
      <title>Go.GoSublime</title>
      <link>http://domain.yqjdcyy.com/post/go.gosublime/</link>
      <pubDate>Wed, 26 Apr 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.gosublime/</guid>
      <description>[TOC]
注解  Path  分隔符  Windows - ; Linux| OS X - :    设置  路径  Packages/User/GoSublime.sublime-settings  推荐更新覆盖  Packages/GoSublime/GoSublime.sublime-settings  默认配置，不建议更新   代码补全  配置 Preferences/Package Settings/GoSublime/Settings - User  { &amp;quot;autocomplete_builtins&amp;quot;: true, &amp;quot;autocomplete_closures&amp;quot;: true }  快捷键  Code Complete  Ctrl+ [Space]  package import  Ctrl+[.], Ctrl+ P  jump  F12 Crl+ [.], Ctrl+ i     项目定制化配置  project.</description>
    </item>
    
    <item>
      <title>Go.Flag</title>
      <link>http://domain.yqjdcyy.com/post/go.flag/</link>
      <pubDate>Mon, 24 Apr 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.flag/</guid>
      <description>[TOC]
Flag 参考  Package flag Golang flag包使用详解  作用  用于解析命令行参数的功能接口  常用  flag.Xxx[String| Bool| Int](name string, default-value Xxx, usage-info string)  返回相应指针  flag.XxxVar(ptr-store *Xxx, name, default-value, usage-info)  将 flag 绑定到变量  flag.Var(&amp;amp;custom-type, name, usage-info)  custom-type 需要实现 Value 接口  flag.Parse()  直接使用国指针，绑定参数则为实际值 flag.Args() flag.Arg(i)  flag.PrintDefaults  define  flag.String(&amp;quot;I&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;searchdirectoryfor include files&amp;quot;)  output  -I directory search directory for include files.</description>
    </item>
    
    <item>
      <title>Linux.Curl</title>
      <link>http://domain.yqjdcyy.com/post/linux.curl/</link>
      <pubDate>Sat, 01 Apr 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/linux.curl/</guid>
      <description>[TOC]
参考  curl网站开发指南 curl 官网 everything-curl.pdf  指令  -O | -o path  下载  -i  显示 http response 头信息  -v  显示通信全过程信息 可使用 --trace output.txt 保存更详细通信过程  -X [DELETE| POST| PUT| ...]  支持其它类型参数  --data &amp;quot;arg=val&amp;quot;  传递参数  --user-agent  传递客户端设备信息  -c cookie-file + -b cookie-file  分别用于保留服务器返回的 cookie 至指定文件，和请求时读取文件作为 cookie 信息  -header &amp;quot;Content-Type:application/json&amp;quot;  增加头信息   示例  带 cookie 请求  curl -X POST -H &amp;quot;Content-Type: application/json;charset=UTF-8&amp;quot; -d &#39;{&amp;quot;username&amp;quot;:&amp;quot;15880777595&amp;quot;,&amp;quot;pwd&amp;quot;:&amp;quot;1&amp;quot;}&#39; --cookie-jar /data/cdn/resource/curl-cookie http://live.</description>
    </item>
    
    <item>
      <title>加藤鹰-秘技传授</title>
      <link>http://domain.yqjdcyy.com/post/%E5%8A%A0%E8%97%A4%E9%B9%B0-%E7%A7%98%E6%8A%80%E4%BC%A0%E6%8E%88/</link>
      <pubDate>Mon, 20 Mar 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E5%8A%A0%E8%97%A4%E9%B9%B0-%E7%A7%98%E6%8A%80%E4%BC%A0%E6%8E%88/</guid>
      <description> [TOC]
加藤鹰-秘技传授 接吻  搂脖子，抚摸脸颊、上下嘴唇，将耳边头发撩至耳后 侧头舔吸上下唇 敏感部位：上牙龈后侧  爱抚 耳朵  待定  舌技  待定  指技  待定  异物插入  待定  插入  待定  </description>
    </item>
    
    <item>
      <title>MYSQL.Information_schema</title>
      <link>http://domain.yqjdcyy.com/post/mysql.information_schema/</link>
      <pubDate>Sun, 26 Feb 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/mysql.information_schema/</guid>
      <description>[TOC]
MYSQL.INFORMATION_SCHEMA 简介  MySQL自带的，它提供了访问数据库元数据的方式。 元数据是关于数据的数据，如数据库名或表名，列的数据类型，或访问权限等。 保存着关于MySQL服务器所维护的所有其他数据库的信息。如数据库名，数据库的表，表栏的数据类型与访问权限等。  库表  SCHEMATA  提供了当前mysql实例中所有数据库的信息。是show databases的结果取之此表。  TABLES  提供了关于数据库中的表的信息（包括视图）。详细表述了某个表属于哪个schema，表类型，表引擎，创建时间等信息。是show tables from schemaname的结果取之此表。  COLUMNS  提供了表中的列信息。详细表述了某张表的所有列以及每个列的信息。是show columns from schemaname.tablename的结果取之此表。  STATISTICS  提供了关于表索引的信息。是show index from schemaname.tablename的结果取之此表。  USER_PRIVILEGES（用户权限）  给出了关于全程权限的信息。该信息源自mysql.user授权表。是非标准表。  SCHEMA_PRIVILEGES（方案权限）  给出了关于方案（数据库）权限的信息。该信息来自mysql.db授权表。是非标准表。  TABLE_PRIVILEGES（表权限）  给出了关于表权限的信息。该信息源自mysql.tables_priv授权表。是非标准表。  COLUMN_PRIVILEGES（列权限）  给出了关于列权限的信息。该信息源自mysql.columns_priv授权表。是非标准表。  CHARACTER_SETS（字符集）  提供了mysql实例可用字符集的信息。是SHOW CHARACTER SET结果集取之此表。  COLLATIONS  提供了关于各字符集的对照信息。  COLLATION_CHARACTER_SET_APPLICABILITY  指明了可用于校对的字符集。这些列等效于SHOW COLLATION的前两个显示字段。  TABLE_CONSTRAINTS  描述了存在约束的表。以及表的约束类型。  KEY_COLUMN_USAGE  描述了具有约束的键列。  ROUTINES  提供了关于存储子程序（存储程序和函数）的信息。此时，ROUTINES表不包含自定义函数（UDF）。名为“mysql.</description>
    </item>
    
    <item>
      <title>常用CMD指令</title>
      <link>http://domain.yqjdcyy.com/post/%E5%B8%B8%E7%94%A8cmd%E6%8C%87%E4%BB%A4/</link>
      <pubDate>Thu, 23 Feb 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E5%B8%B8%E7%94%A8cmd%E6%8C%87%E4%BB%A4/</guid>
      <description> [TOC]
强制关闭占用指定端口服务  查询指定窗口是否被占用： netstat -aon|findstr &amp;ldquo;9050&amp;rdquo; 查询哪个应用占用了指定端口： tasklist|findstr &amp;ldquo;2748&amp;rdquo; 关闭相应的进程：taskkill /f /t /im adb.exe 常用：taskkill /f /t /im java.exe  硬盘检测及修复  检测指定盘符： chkdsk C: 若有异常时进行修复： chkdsk c: /f 注：若正在使用，可选择【Y】，待下次启动时检测  强制登录  发现超出并发人数的情况下，输入如下指令：mstsc /v:192.168.16.99:3389 /admin。 其中192.168.16.99:3389为连接的网址和端口，admin表示管理员登陆。 注：此例在win7远程win2003校验通过。  转换成系统隐藏文件  转换 attrib +s +h [fileName|folderaName] 进入 cd **/[fileName|folderaName] 恢复 attrib -s -h [fileName|folderaName]  临时更改环境变量  set GOPATH=%GOPATH%;xxxxxx  显示目录下文件  tree /f  查看 Linux 系统版本  lsb_release -a  </description>
    </item>
    
    <item>
      <title>音视频的相关名词</title>
      <link>http://domain.yqjdcyy.com/post/%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9A%84%E7%9B%B8%E5%85%B3%E5%90%8D%E8%AF%8D/</link>
      <pubDate>Wed, 08 Feb 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9A%84%E7%9B%B8%E5%85%B3%E5%90%8D%E8%AF%8D/</guid>
      <description>参考  码流 / 码率 / 比特率 / 帧速率 / 分辨率 / 高清  解析 码率  解析  Data Rate，又名码流、码流率 视频文件在单位时间内使用的数据流量，单位为 Kb/s 或 Mb/s 通指视频文中的音频和视频码流率总和 视频画面质量控制中最重要的部分  计算  File.size= duration* Data.Rate/ 8 90m 1Mbps 720P RMVB= 90* 60s* 1Mb/s/ 8= 675 MB   采样率  归类  音频  解析  Sampling Rate，又名采样辣度、采样频率 指将从连续信号中提取并组成离散信号的采样个数，单位为 Hz 以 44.1kHZ 采样率记录并播放，即可听到连续声音；越高则越连贯  人的听觉和视觉分辨采样率上限即为 44.1kHZ -   计算  比特率= 采样率* 采样位数* 声道数 CD 每秒 44100 次取样，2 个声道，13 位PCM编码  = 44100* 2* 13 = 144 KB/s   补充  位数  类比于画面的颜色数 上限  听觉 - 16位 视觉 - 24位   声道   比特率  解析  Bit Rate 每秒传送的比特数，单位为b/s 指将为数字声音、视频由模拟格式转化为数字格式的采样率  常见编码  VBR- Variable Bitrate  动态比特率，压缩时根据音频数据即时确定 质量前提，文件大小兼顾 推荐编码模式  ABR- Averate Bitrate  指定文件大小内，以每50帧为段，低频与不敏感使用较低流量，高频与动态表现时使用高流量 VBR 和 CBR 的折衷  CBR- Constant Bitrate  固定使用一位速率 压缩文件体积大，且音质无明显提高    帧速率  解析  FPS，Frames PerSecond 每秒钟刷新的图片的帧数，为图形处理器每秒刷新次数，单位为 f/s   分辨率  解析  指每帧图像的大小，如640* 480   720P 1080P  解析  分辨率简称  720P= 1280*720 1080P= 1920*1080  采用编码格式有MPEG2/ VC-1/ H.</description>
    </item>
    
    <item>
      <title>XSD</title>
      <link>http://domain.yqjdcyy.com/post/xsd/</link>
      <pubDate>Fri, 16 Dec 2016 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/xsd/</guid>
      <description>简介  全称为 XML Schema 定义，即 XML Schema Definition (XSD) XML Schema 是基于 XML 的 DTD 替代，用于描述 XML 文档的结构。 支持数据类型，便于描述、验证正确性和约束、转换、定义等工作。  参考  教程：http://www.w3school.com.cn/schema/ 手册：http://www.w3school.com.cn/schema/schema_elements_ref.asp 验证：http://www.ltg.ed.ac.uk/~ht/xsv-status.html 实例：http://www.w3school.com.cn/schema/schema_example.asp
使用 XML结构 &amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt; &amp;lt;note&amp;gt; &amp;lt;to&amp;gt;George&amp;lt;/to&amp;gt; &amp;lt;from&amp;gt;John&amp;lt;/from&amp;gt; &amp;lt;heading&amp;gt;Reminder&amp;lt;/heading&amp;gt; &amp;lt;body&amp;gt;Don&#39;t forget the meeting!&amp;lt;/body&amp;gt; &amp;lt;/note&amp;gt;   定义 - note.xsd &amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt; &amp;lt;xs:schema xmlns:xs=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; // 指定该 Schema 中的元素和数据类型的命名空间来源， 同时指定当前命名空间的元素和类型都应需补充前缀 xs: targetNamespace=&amp;quot;http://www.w3school.com.cn&amp;quot; // 显示定义元素(node /to /from /heading /body)的来源命名空间 xmlns=&amp;quot;http://www.w3school.com.cn&amp;quot; // 指定默认命名空间 elementFormDefault=&amp;quot;qualified&amp;quot; &amp;gt; &amp;lt;xs:element name=&amp;quot;note&amp;quot;&amp;gt; &amp;lt;xs:complexType&amp;gt; &amp;lt;xs:sequence&amp;gt; &amp;lt;xs:element name=&amp;quot;to&amp;quot; type=&amp;quot;xs:string&amp;quot;/&amp;gt; &amp;lt;xs:element name=&amp;quot;from&amp;quot; type=&amp;quot;xs:string&amp;quot;/&amp;gt; &amp;lt;xs:element name=&amp;quot;heading&amp;quot; type=&amp;quot;xs:string&amp;quot;/&amp;gt; &amp;lt;xs:element name=&amp;quot;body&amp;quot; type=&amp;quot;xs:string&amp;quot;/&amp;gt; &amp;lt;/xs:sequence&amp;gt; &amp;lt;/xs:complexType&amp;gt; &amp;lt;/xs:element&amp;gt; &amp;lt;/xs:schema&amp;gt;  引用 &amp;lt;?</description>
    </item>
    
    <item>
      <title>Oracle.分析函数</title>
      <link>http://domain.yqjdcyy.com/post/oracle.%E5%88%86%E6%9E%90%E5%87%BD%E6%95%B0/</link>
      <pubDate>Thu, 15 Dec 2016 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/oracle.%E5%88%86%E6%9E%90%E5%87%BD%E6%95%B0/</guid>
      <description>统计方面 合并  Sum( ) Over ([Partition by ] [Order by ]) ROLLUP(COL1, COL2&amp;hellip;)  按照COLX的降序层次逐层汇总合并  CUBE(COL1, COL2&amp;hellip;)  排序  Rank() Over ([Partition by ] [Order by ] [Nulls First/Last])  相同数据排名一致，但下一记录会空出其中的排名  Dense_rank() Over ([Patition by ] [Order by ] [Nulls First/Last])  相同数据排名一致，之后数据接上一次序继续  Row_number() Over ([Partitionby ] [Order by ] [Nulls First/Last])  碰到相同数据时不做处理依照记录顺序依次递增  Ntile( ) Over ([Partition by ] [Order by ])  最值  [Min|Max]() Keep (Dense_rank First/Last [Partition by ] [Order by ])  MIN 用于确保返回唯一记录 KEEP 用于告知Oracle保留符合KEEP条件的记录 Dense_rank 固定写法，不可更改  Ratio_to_report(value)  Ratio_to_report(value)= value/ sum(value)   首/末记录  [First_value|Last_value|(Sum() Over ([Patition by ] [Order by ] Rows Between Preceding And Following ))  相邻记录比较  LAG(其它行表达式, &amp;lt;偏移行数，缺省为1&amp;gt;, &amp;lt;偏移行数超出分组范围时的返回值&amp;gt;)  LAG(SUM( ), 1) OVER([PATITION BY] [ORDER BY ])  LEAD(其它行表达式, &amp;lt;偏移行数，缺省为1&amp;gt;, &amp;lt;偏移行数超出分组范围时的返回值&amp;gt;)  LEAD(SUM( ), 1) OVER([PATITION BY] [ORDER BY ])   家族树  START WITH COL1= &amp;lsquo;XXX&amp;rsquo; CONNECT BY COL1= PRIOR COL2  语法  1&amp;gt;语句顺序：SELECT&amp;gt; FROM&amp;gt; WHERE&amp;gt; START WITH&amp;gt; CONNECT BY&amp;gt; ORDER BY 2&amp;gt;PRIOR位置：在前（CONNECT BY PRIOR COL1=COL2），强制由根到叶自顶向上，置于后面则相反由叶到根 3&amp;gt;WHERE可以排除树中个体，但无法排除其子孙或祖先 4&amp;gt;CONNECT BY条件则可以排除个体及其后代信息 5&amp;gt;CONNECT BY不以和WHERE子句中表连接使用  例子  SELECT LEVEL, NVL(B.</description>
    </item>
    
    <item>
      <title>AngularJS.Basic</title>
      <link>http://domain.yqjdcyy.com/post/angularjs.basic/</link>
      <pubDate>Wed, 14 Dec 2016 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/angularjs.basic/</guid>
      <description>导言和准备  地址 源码 图解Git  引导程序 参考 - 详细：http://angularjs.cn/A003 - 源码：https://github.com/angular/angular-phonecat - 环境：https://github.com/nodejs/node-gyp - 安装异常：http://stackoverflow.com/questions/21365714/nodejs-error-installing-with-npm - 安装异常：http://blog.sina.com.cn/s/blog_9b624c5d0102vgwl.html  启动服务  npm install npm start
 需要行先安装 python，仅目前只支持 2.*.，不支持 3..* 并将 git 设置为环境变量，即将 D:\Program Files (x86)\Git\bin\;D:\Program Files (x86)\Git\libexec\git-core; 加入环境变量中
 注：有时需要重启才能生效 更多注意事项请看 https://github.com/nodejs/node-gyp
测试服务   npm test
切换服务 git checkout -f step-0
 其中各阶段主要重点均在 https://github.com/angular/angular-phonecat
应用界面  http://localhost:8000/app/index.html
核心代码解析 &amp;lt;!-- np-app 指令，用于标记 AngularJS 脚本的作用域 --&amp;gt; &amp;lt;html lang=&amp;quot;en&amp;quot; ng-app&amp;gt; &amp;lt;!</description>
    </item>
    
    <item>
      <title>常用技术</title>
      <link>http://domain.yqjdcyy.com/post/%E5%B8%B8%E7%94%A8%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Wed, 14 Dec 2016 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E5%B8%B8%E7%94%A8%E6%8A%80%E6%9C%AF/</guid>
      <description>灰化 grayscale(document.body);  遮罩  //隐藏页面上一些特殊的控件 function HideElement(){ var HideElementTemp = new Array(&#39;IMG&#39;,&#39;SELECT&#39;,&#39;OBJECT&#39;,&#39;IFRAME&#39;); for(var j=0;j&amp;lt;HideElementTemp.length;j++){ try{ var strElementTagName=HideElementTemp[j]; for(i=0;i&amp;lt;document.all.tags(strElementTagName).length; i++){ var objTemp = document.all.tags(strElementTagName)[i]; if(!objTemp||!objTemp.offsetParent) continue; //objTemp.style.visibility=&amp;quot;hidden&amp;quot;; objTemp.disabled=&amp;quot;disabled&amp;quot; } } catch(e){} } } //隐藏特殊控件+ 全网页置灰 function MaskAndGray(){ HideElement(); grayscale(document.body); //全网页置灰 var shield = document.createElement(&amp;quot;DIV&amp;quot;); //产生一个背景遮罩层 shield.id = &amp;quot;shield&amp;quot;; shield.style.position = &amp;quot;absolute&amp;quot;; shield.style.left = &amp;quot;0px&amp;quot;; shield.style.top = &amp;quot;0px&amp;quot;; shield.style.width = &amp;quot;100%&amp;quot;; shield.style.height = ((document.documentElement.clientHeight&amp;gt;document.documentElement.scrollHeight)?document.documentElement.clientHeight:document.documentElement.scrollHeight)+&amp;quot;px&amp;quot;; shield.style.background = &amp;quot;#333&amp;quot;; shield.style.textAlign = &amp;quot;center&amp;quot;; shield.</description>
    </item>
    
    <item>
      <title>Git.命令小结</title>
      <link>http://domain.yqjdcyy.com/post/git.%E5%91%BD%E4%BB%A4%E5%B0%8F%E7%BB%93/</link>
      <pubDate>Sun, 11 Dec 2016 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/git.%E5%91%BD%E4%BB%A4%E5%B0%8F%E7%BB%93/</guid>
      <description>[TOC]
查看 分支状态  git status git branch
 分支列表 &amp;ndash;merged：查看哪些分支被合并到当前分支 &amp;ndash;no-merged：查看哪些分支未并合并到当前分支
日志  git log
 &amp;ndash;pretty=oneline：单行显示 &amp;ndash;graph：图形分支
标签  git tag
 &amp;lt;&amp;gt;：查看当前分支标签 -l &amp;lsquo;v1.4*&amp;lsquo;：查看所有匹配该正则的标签信息
文件提交明细  git blame &amp;lt;fileName&amp;gt;：查看文件每行的提交 hash / author/ time
  提交 首次提交  git init： 将当前目录转换为 Git 仓库 git push -u origin &amp;lt;branch&amp;gt; ###新增提交 git add -A git commit -m &amp;ldquo;commit content&amp;rdquo; git push origin &amp;lt;branch&amp;gt;
修改提交 git commit -a -m &amp;ldquo;commit content&amp;rdquo;</description>
    </item>
    
    <item>
      <title>HTTP.协议相关</title>
      <link>http://domain.yqjdcyy.com/post/http.%E5%8D%8F%E8%AE%AE%E7%9B%B8%E5%85%B3/</link>
      <pubDate>Sun, 11 Dec 2016 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/http.%E5%8D%8F%E8%AE%AE%E7%9B%B8%E5%85%B3/</guid>
      <description>[TOC]
参考  Http 协议详解 HTTP headers Hypertext Transfer Protocol &amp;ndash; HTTP/1.1 四种常见的 POST 提交数据方式 Http.vary  Http.detail  Message Body 消息体 Request 请求头  POST http://dev-p.yunkai.com/api/resource/upload HTTP/1.1  Header 头文件  Accept: application/json, text/plain, */* Content-Type: multipart/form-data; boundary=---------------------------7e016f3be0a4a Referer: http://dev-p.yunkai.com/admin/index.html#/meetings/98/update/agendas Accept-Language: zh-Hans-CN,zh-Hans;q=0.8,en-US;q=0.5,en;q=0.3 Accept-Encoding: gzip, deflate User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko Content-Length: 4708261 Host: dev-p.yunkai.com Connection: Keep-Alive Pragma: no-cache Cookie: SESSION=82526c96-4740-4d52-b3c1-757384ba3017  Empty line Body 消息体  -----------------------------7e016f3be0a4a Content-Disposition: form-data; name=&amp;quot;file&amp;quot;; filename=&amp;quot;B2283659A4B9302BE09FE2EC97690382.</description>
    </item>
    
    <item>
      <title>MYSQL.开发规范</title>
      <link>http://domain.yqjdcyy.com/post/mysql.%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/</link>
      <pubDate>Sun, 11 Dec 2016 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/mysql.%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/</guid>
      <description>[TOC]
[数据库开发规范简版] 数据库创建 命名规范  Pascal样式(每个单词首字母大写)命名 命名格式为[项目英文名称]
例 CREATE DATABASE test CHARACTER SET &amp;lsquo;utf8&amp;rsquo; COLLATE &amp;lsquo;utf8_general_ci&amp;rsquo;;
  表创建 命名规范 表  以组件或子系统名称为前缀 添加表和字段注释，明确各值可选值含义
列 列名称命名采用英文单词或缩写，关联具体业务
 尽量不允许为 Null，用默认值代替
例 FetionUser.FU_TableName.ColName
  类型选择 整型  tinyint 2^8 -128到127或0到255 smallint 2^16 -32768到32767或0到65535 int 2^32 -2147483648到2147483647或0到4294967295 bigint 2^64 -9223372036854775808到9223372036854775807或0到18446744073709551615 例 tinyint(3) 明确指定宽度 确认无符号时，需要添加 unsigned 限制  文本  CHAR(1) VARCHAR(2- 20000) TEXT 单表维护！  时间  timestamp datetime  索引创建 命名规范  IX[TableName][Column1]_[Column2] 字段与索引顺序一致  主键设计  InnoDB 必须有自增主键，建议为 int 且与业务无关 唯一索引  复合索引  MYSQL 搜索顺序同索引字段顺序  建议  索引个数控制于 3 个以内，不超过 5 个  SQL 编程 SELECT  SELECT COLUMN_NAME, NOT SELECT *  多表关联  为各表使用别名  DISTINCT  唯一索引不需要 可考虑程序去重  OR  多个 OR 或 AND 常会导致表扫描 可用 UNION代替 OR，或 FORCE INDEX 强制使用主索引  COUNT  Use COUNT(*) in one table and no WHERE  LIMIT  建议 尽量使用 LIMIT M，避免 LIMIT M,N 通过条件和 LIMIT M 来代替 LIMIT M,N 例 SELECT * FROM message WHERE id &amp;gt; 9520 ORDER BY id ASC LIMIT 20;  !</description>
    </item>
    
    <item>
      <title>Markdown</title>
      <link>http://domain.yqjdcyy.com/post/markdown/</link>
      <pubDate>Sun, 11 Dec 2016 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/markdown/</guid>
      <description> 目录 [TOC]
标题 二级标题 ####### 最大支持六级标题
注：序号和*号，与内容之间均需要一个空格
 列表1 列表2 列表3   无序列表 无序列表  无序列表缩进  无序列表  字体支持很多样式，比如加粗、*斜体*、删除线等特别样式
当然也可以引用名人名言 &amp;gt;Markdown 很好用的 —— 阿尔伯特·爱因斯坦
百度
代码格式表示
 for(var i= 0; i&amp;lt; count; i++)  表格 |为知| md| |-|-| |WizNote|Markdown|
公式啊！！！ $\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$
st=&amp;gt;start: Start:&amp;gt;http://www.google.com[blank] e=&amp;gt;end:&amp;gt;http://www.google.com op1=&amp;gt;operation: My Operation sub1=&amp;gt;subroutine: My Subroutine cond=&amp;gt;condition: Yes or No?:&amp;gt;http://www.google.com io=&amp;gt;inputoutput: catch something... st-&amp;gt;op1-&amp;gt;cond cond(yes)-&amp;gt;io-&amp;gt;e cond(no)-&amp;gt;sub1(right)-&amp;gt;op1  Title: [教程可以看](http://bramp.github.io/js-sequence-diagrams/) A-&amp;gt;B: 【备注演示】 Note left of A: 此轮回应前\nA 左侧备注 Note over A: 此轮 A 线上的备注 Note right of A: 此轮回应前A 右侧备注 Note over A,B:此轮回应前横跨 AB 两线的备注 A-&amp;gt;B: 【线型演示】 A-&amp;gt;B: 实线三角标 B--&amp;gt;A: 虚线三角标 A-&amp;gt;&amp;gt;B: 实线角标 B--&amp;gt;&amp;gt;A: 虚线角标  </description>
    </item>
    
    <item>
      <title>Spring.Basic</title>
      <link>http://domain.yqjdcyy.com/post/spring.basic/</link>
      <pubDate>Sun, 11 Dec 2016 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/spring.basic/</guid>
      <description>[TOC]
AOP 介绍  Aspect-Oriented Programming 面向切面编程，对着代码横着切入 对方法的增强为 Weaving （织入） 对类的增强为 Introduction （引入）  代理 代码写死  interface
public interface Greeting { void sayHello(String name); }  implement
public class GreetingImpl implements Greeting { @Override public void sayHello(String name) { before(); System.out.println(&amp;quot;Hello! &amp;quot; + name); after(); } private void before() { System.out.println(&amp;quot;Before&amp;quot;); } private void after() { System.out.println(&amp;quot;After&amp;quot;); } }   静态代理  resolution 单独为 GeetingImpl 创建代理类 proxy</description>
    </item>
    
    <item>
      <title>SpringBoot.JPA</title>
      <link>http://domain.yqjdcyy.com/post/springboot.jpa/</link>
      <pubDate>Sun, 11 Dec 2016 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/springboot.jpa/</guid>
      <description>[TOC] 文章来源 Spring Data JPA - Reference Documentation
学习整理 Basic Example Entity @Entity @Table(name = &amp;quot;user&amp;quot;) public class User { @Id @GeneratedValue(strategy = GenerationType.AUTO) private Long id; @Column(name = &amp;quot;user_name&amp;quot;) private long userName; } Repository public interface UserRepository extends CrudRepository&amp;lt;User, Long&amp;gt; { // 必须指定操作对象及ID类型 Long countByLastname(String lastname); List&amp;lt;User&amp;gt; findByLastname(String lastname); } Common-Repository PagingAndSortingRepository CrudRepository Repository Config @Configuration @EnableJpaRepositories(basePackages = &amp;quot;com.yunkai&amp;quot;) // 指定 Repository 位置 @ComponentScan(basePackages = &amp;quot;com.yunkai&amp;quot;) @EntityScan(basePackages = &amp;quot;com.</description>
    </item>
    
    <item>
      <title>SpringBoot.入门</title>
      <link>http://domain.yqjdcyy.com/post/springboot.%E5%85%A5%E9%97%A8/</link>
      <pubDate>Sun, 11 Dec 2016 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/springboot.%E5%85%A5%E9%97%A8/</guid>
      <description>作用 创建和启动新的 Spring 框架项目  特性 嵌入 Tomcat 或 Jetty 提供生产环境使用功能，如性能指标、应用信息和应用健康检查  POM 配置 &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt; &amp;lt;project xmlns=&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:schemaLocation=&amp;quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;quot;&amp;gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt; &amp;lt;groupId&amp;gt;com.midgetontoes&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-simple&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt; &amp;lt;properties&amp;gt; &amp;lt;spring.boot.version&amp;gt;1.1.4.RELEASE&amp;lt;/spring.boot.version&amp;gt; &amp;lt;/properties&amp;gt; &amp;lt;dependencies&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${spring.boot.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;/dependencies&amp;gt; &amp;lt;build&amp;gt; &amp;lt;plugins&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-maven-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${spring.boot.version}&amp;lt;/version&amp;gt; &amp;lt;executions&amp;gt; &amp;lt;execution&amp;gt; &amp;lt;goals&amp;gt; &amp;lt;goal&amp;gt;repackage&amp;lt;/goal&amp;gt; &amp;lt;/goals&amp;gt; &amp;lt;/execution&amp;gt; &amp;lt;/executions&amp;gt; &amp;lt;/plugin&amp;gt; &amp;lt;/plugins&amp;gt; &amp;lt;/build&amp;gt; &amp;lt;/project&amp;gt;  启动程序 @RestController @EnableAutoConfiguration public class Application { @RequestMapping(&amp;quot;/&amp;quot;) String home() { return &amp;quot;Hello World!&amp;quot;; } public static void main(String[] args) throws Exception { SpringApplication.</description>
    </item>
    
    <item>
      <title>Storm</title>
      <link>http://domain.yqjdcyy.com/post/storm/</link>
      <pubDate>Sun, 11 Dec 2016 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/storm/</guid>
      <description>通信机制 选型  进程间使用 Netty/ ZeroMQ 进行通信 同一进程内的诸多线程，采用 Disruptor Queue 完成通信 注： LocalCluster 模式下，参数 storm.local.mode.zmq= false 则采用线程模拟进程方式启动，通过 LinkedBlockingQueue 模拟
进程间通信协议 Connection
 recv-with-flags[conn flags] - flags 表示是否为阻塞方式 send[conn task message] close[conn]  Context
 bind[context storm-id port] - 绑定端口号并返回 Socket 对象，主要用于接收信息 connect[context storm-id host port] - 链接到指定商品号，负责发消息 teim[context] - 关闭连接  LocalCluster 模式实现
 采用一个进程模拟集群环境，Nimbus/ Supervisor/ Worker 均为该进程中的线程 Connection  用 LinkedBlockingQueue 和 queue 等队列模拟消息的发送接收  Context
 用 quenes-map 和 LinkedBlockingQueue 模拟绑定和消失发送</description>
    </item>
    
    <item>
      <title>Sublime.Plugin</title>
      <link>http://domain.yqjdcyy.com/post/sublime.plugin/</link>
      <pubDate>Sun, 11 Dec 2016 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/sublime.plugin/</guid>
      <description>[TOC]
参考  sublime插件开发  结构  Packages plugin-fodler plugin.sublime-package(.zip) default key/ menu/ setup user read at lastest plugin-command Text Commands: current view Window Commands: current windows Application Commands: nothing 注： sublime 会将继承 plugin-command 的类去掉 Command 后缀，并将驼峰格式转换为下划线格式  流程  Tools-&amp;gt; new plugin&amp;hellip; mkdir Packages/ hello_world/ hello_world.py： 同名 ctrl+ ` 并输入 view.run_command(&amp;lsquo;example&amp;rsquo;) -&amp;gt; 即可看到当前文章头部插入 &amp;lsquo;Hello, World!&amp;rsquo;  sublime插件开发手记 Sublime插件开发API手册  API Sublime error/ message clipboard.setter&amp;amp; getter run_command(string, ) log_commands/input(flag) version/ platform/ arch View - 缓冲区视图 run_command(string, ) insert/ erase/ replace/ find sel()/ rowcol show/ fold/ unfold run_command RegionSet Region Edit Window new_file([file_name, ]) flag sublime.</description>
    </item>
    
    <item>
      <title>Mysql.Basic</title>
      <link>http://domain.yqjdcyy.com/post/mysql.basic/</link>
      <pubDate>Sat, 10 Dec 2016 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/mysql.basic/</guid>
      <description>[TOC] 基础知识 存储结构 表空间：所有数据逻辑地存放于ib_data1文件中 |- 数据库 |- 区：InnoDB每次最多申请4个区，即 4M 的存储空间 |- 页1：B-Tree 结构存储，16KB，大小不能调整，Mysql 最小逻辑单位 |- …… |- 页* 64 |- 行1： 数据行存在数据行中，每页最多7992行 |- …… |- 行* 7992 |- 索引段 |- 回滚段 |- 页 注：InnoDB按每张表的主键构造一 B+ 树  索引 聚集索引 是否支持聚集引擎，取决于采用的存储引擎，其中InnoDB会建立。 概念：实际数据行和相关的键值保存在一起。 原理：把索引和数据都保存于一 B+ 树数据结构，并同时将索引列与相关数据行保存在一起。则访问同一数据页不同记录，数值数据于内存中已存在。 注：一表仅可包含一个聚集索引，仅于按索引顺序过滤查询有效。 非聚集索引 概念&amp;amp; 原理：参考聚集索引，同样按索引值进行 B+ 树存储，但区别于树中只存放索引和相应数值的指针，而不与数据一同存储。 联合索引 概念：两个或两个以上列索引 注意：建立时考虑列顺序，索引越少越好（更新数据时需维护索引值） 注：避免file sort（索引不到情况下使用临时文件排序查找）、临时表（建立在系统临时文件夹中的表）和表扫描（操作中数据库引擎必须读取表中的所有页以查找符合查询条件的行）。  执行顺序 （5）SELECT DISTINCT TOP() （1）FROM (1-J) &amp;lt;left_table&amp;gt; &amp;lt;join_type&amp;gt; JOIN &amp;lt;right_table&amp;gt; ON &amp;lt;on_predicate&amp;gt; | (1-A) &amp;lt;left_table&amp;gt; &amp;lt;apply_type&amp;gt; APPLY &amp;lt;right_table_expression&amp;gt; AS &amp;lt;alias&amp;gt; | (1-P) &amp;lt;left_table&amp;gt; PIVOT(&amp;lt;pivot_specification&amp;gt;) AS &amp;lt;alias&amp;gt; | (1-U) &amp;lt;left_table&amp;gt; UNPIVOT(&amp;lt;unpivot_specification&amp;gt;) AS &amp;lt;alias&amp;gt; （2）WHERE &amp;lt;where_predicate&amp;gt; （3）GROUP BY &amp;lt;group_by_specification&amp;gt; （4）HAVING &amp;lt;having_predicate&amp;gt; （6）ORDER BY &amp;lt;order_id_list&amp;gt;  操作相关 更改密码 mysql -u root -p &amp;gt; Enter password user mysql; update user set password=passworD(&amp;quot;new pass&amp;quot;) where user=&#39;root&#39;; flush privileges; exit;  允许指定 IP 访问 &amp;gt; mysql -uroot -p; &amp;gt; Yk1qazxsw2 // root &amp;gt; use mysql; &amp;gt; show grants for yunkai_user@110.</description>
    </item>
    
    <item>
      <title>Oracle - 基础</title>
      <link>http://domain.yqjdcyy.com/post/oracle.%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Sat, 10 Dec 2016 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/oracle.%E5%9F%BA%E7%A1%80/</guid>
      <description>系统构造 The System Global Area (SGA)  组成 描述 Buffer Cache 作为查询修改前的优先查看区 Shared Pool SQL重用、储存程序、数据字典信息如用户账号信息及表索引 Redo Log Buffer 多次缓存重做信息一次写入 Large Pool 服务进程的大数据量I/O请求之用 Java Pool 用于Java虚拟机的特定会话的代码和数据 Streams Pool Oracle流产品专用
The Program Global Area (PGA) 系统启动后应客户端请求建立的服务进程专用的，主要用于实现SQL和保存登陆等相关会话信息
Oracle Background Processes 初始时创建的用于维护内存结构、进行异步数据I/O读写及日常的维护任务，从而更好地实现增加并行操作的可靠性
  数据库管理 Control Files 物理组成元件，可复制即实现复用  Tablespaces  逻辑结构  包含一个或多个Datafiles或Tempfiles.  默认表空间  EXAMPLE：Oracle测试、示例空间 SYSAUX：SYSTEM辅助空间 SYSTEM：含数据字典等控制数据库信息的表和索引 TEMP：执行SQL用作系统的临时操作空间 UNDOTBS1：专用存储撤消操作信息 USERS：存储永久用户对象和数据  表空间类型
 永久：用于存储用户或程序数据 撤消：用于避免读一致和启用数据回滚，不用时会被自动删除，多个情况下同时也只- 一个会被启用 临时：用于执行SQL排序等操作时的辅助库
Temporary Tablespace Groups Datafiles  保存数据库数据的操作系统文件，但用数据库方式写入，无法为其它程序识别。</description>
    </item>
    
    <item>
      <title>Redis.Basic</title>
      <link>http://domain.yqjdcyy.com/post/redis.basic/</link>
      <pubDate>Sat, 10 Dec 2016 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/redis.basic/</guid>
      <description>参考  Redis Virtual Memory: the story and the code ​Virtual Memory technical specification  数据类型 Keys  del key1 key2&amp;hellip; keyN  删除给定KEY  type key  返回当前key类型  keys pattern  匹配指定模式的所有KEY  randomkey  返回当前库随机KEY  rename oldkey newkey  重命名，若newkey存在则以oldkey值覆盖  renamenx oldkey newkey  重命名，但newkey存在时返回0  dbsize  返回当前数据库key数量  expire key seconds  为KEY指定过期时间  ttl key  返回设置过期时间的KEY的剩余时间  select db-index  通过索引选择数据库，默认为0，默认数据库个数16个  move key db-index  将当前库中的KEY移动至指定索引库中  flushdb  删除当前库中所有KEY，不会失败  flushall  删除所有库中的所有KEY，不会失败   String 特点  最基本类型，二进制安全，可包含任何数据，上限为一G字节</description>
    </item>
    
    <item>
      <title>Java.常用技术</title>
      <link>http://domain.yqjdcyy.com/post/java.%E5%B8%B8%E7%94%A8%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Fri, 09 Dec 2016 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/java.%E5%B8%B8%E7%94%A8%E6%8A%80%E6%9C%AF/</guid>
      <description>参考  http://unmi.cc/jdk-5-concurrent-callable-futuretask-etc/ http://www.cnblogs.com/wn398/archive/2013/06/15/3130967.html http://ifeve.com/locks/  获取路径 ###分类： - 绝对路径：主页上的文件或目录在硬盘上真正的路径，如URL和物理路径 - 例：C:xyz est.txt 代表了test.txt文件的绝对路径 - 相对路径：相对与某个基准目录（一般对照WEB）的路径。 - 例：&amp;rdquo;/&amp;ldquo;代表Web应用的跟目录， &amp;ldquo;./&amp;rdquo; 代表当前目录,&amp;ldquo;../&amp;ldquo;代表上级目录 - 注：JSP/SERVLET中的比较特殊，服务器端的地址服务器端的相对地址指的是相对于你的web应用的地址，因为该地址是由服务器端解析聘的
获取方法 JSP路径/系统全路径  使用环境  SERVLET/JSP  使用语句  request.getRealPath(&amp;ldquo;？&amp;rdquo;) &amp;ndash;&amp;gt; ？为/ . 空格 web.xml request.getRealPath(request.getRequestURI()); getServletContext().getRealPath(&amp;rdquo;\&amp;ldquo;) //站点绝对路径 application.getRealPath(&amp;ldquo;&amp;rdquo;) //JSP界面使用 ServletContext().getRealPath(&amp;ldquo;&amp;rdquo;)  返回字串  C:\Apache\Tomcat\webapps\local+ （\ . 空格 \web.xml）   工程Classes下路径（SRC/CLASS）  使用环境  SERVLET/JSP/JAVA（即任意CLASS）  使用语句  this.getClass()/JdomParse.class .getClassLoader().getResource(&amp;ldquo;&amp;rdquo;).getPath(); //注：因为三者均为JAVA程序，都为CLASS，故为三者通用方法 this.getClass()JdomParse.class .getResource(&amp;ldquo;&amp;rdquo;).getPath().toString(); //可用于不同WEB环境来确认路径 Thread.currentThread().getContextClassLoader().getResource(&amp;ldquo;&amp;rdquo;).getPath()  返回字串</description>
    </item>
    
    <item>
      <title>Maven</title>
      <link>http://domain.yqjdcyy.com/post/maven/</link>
      <pubDate>Fri, 09 Dec 2016 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/maven/</guid>
      <description>[TOC]
部署安装 下载地址  http://maven.apache.org/download.cgi  安装流程  至下载地址下载最新版本Maven压缩包 解压至本地文件路径 补充环境变量  [M2_HOME: C:\Program Files\Apache Software Foundation\apache-maven-3.2.2] [M2: %M2_HOME%\bin] [MAVEN_OPTS: -Xms256m -Xmx512m] 并于最后于path变量里补充%M2%;  控制台输出 mvn -version，若有相关输出则表示安装成功  生命周期  内置构建：  default：处理项目部署 clean：清理项目 site：创建项目的网站文件
各生命周期执行内容： Clean Lifecycle pre-clean executes processes needed prior to the actual project cleaning
 clean remove all files generated by the previous build
 post-clean executes processes needed to finalize the project cleaning
Default Lifecycle validate validate the project is correct and all necessary information is available.</description>
    </item>
    
    <item>
      <title>DWR</title>
      <link>http://domain.yqjdcyy.com/post/dwr/</link>
      <pubDate>Thu, 08 Dec 2016 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/dwr/</guid>
      <description>[TOC]
参考  在 Spring Web MVC 环境下使用 DWR  作用  Spring 框架提供，可将 Java 组件方法直接暴露给 JavaScript 客户端 通过将 Spring 容易中的 Bean 转换为 JavaScript 对象  配置 web.xml &amp;lt;servlet-mapping&amp;gt; &amp;lt;servlet-name&amp;gt;springServlet&amp;lt;/servlet-name&amp;gt; &amp;lt;url-pattern&amp;gt;/dwr/*&amp;lt;/url-pattern&amp;gt; &amp;lt;/servlet-mapping&amp;gt;  springmvc.xml &amp;lt;!-- DWR3.0配置 --&amp;gt; &amp;lt;!-- 打开dwr的控制器 --&amp;gt; &amp;lt;dwr:controller id=&amp;quot;dwrController&amp;quot; debug=&amp;quot;true&amp;quot; &amp;gt; &amp;lt;dwr:config-param name=&amp;quot;allowScriptTagRemoting&amp;quot; value=&amp;quot;true&amp;quot; /&amp;gt; &amp;lt;dwr:config-param name=&amp;quot;crossDomainSessionSecurity&amp;quot; value=&amp;quot;false&amp;quot; /&amp;gt; &amp;lt;dwr:config-param name=&amp;quot;activeReverseAjaxEnabled&amp;quot; value=&amp;quot;true&amp;quot;/&amp;gt; &amp;lt;/dwr:controller&amp;gt; &amp;lt;dwr:url-mapping/&amp;gt; &amp;lt;bean class=&amp;quot;org.springframework.web.servlet.handler.SimpleUrlHandlerMapping&amp;quot;&amp;gt; &amp;lt;property name=&amp;quot;alwaysUseFullPath&amp;quot; value=&amp;quot;true&amp;quot;/&amp;gt; &amp;lt;property name=&amp;quot;mappings&amp;quot;&amp;gt; &amp;lt;props&amp;gt; &amp;lt;prop key=&amp;quot;/dwr/**/*&amp;quot;&amp;gt;dwrController&amp;lt;/prop&amp;gt; &amp;lt;/props&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;/bean&amp;gt; &amp;lt;!</description>
    </item>
    
    <item>
      <title>Regex</title>
      <link>http://domain.yqjdcyy.com/post/regex/</link>
      <pubDate>Thu, 08 Dec 2016 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/regex/</guid>
      <description>元字符  . 匹配除换行符以外的任意字符 \w 匹配字母或数字或下划线或汉字 \s 匹配任意的空白符 \d 匹配数字 \b 匹配单词的开始或结束 ^ 匹配字符串的开始 $ 匹配字符串的结束  字符转义  想查找元字符本身的话，使用\来取消这些字符的特殊意义  重复  * 重复零次或更多次 + 重复一次或更多次 ? 重复零次或一次 {n} 重复n次 {n,} 重复n次或更多次 {n,m} 重复n到m次  字符类  [aeiou] 就匹配任何一个英文元音字母 [.?!] 匹配标点符号(.或?或!) [a-z0-9A-Z_]  分枝条件  \d{5}-\d{4}|\d{5} 5-4或5位数值  分组  以小括号指定的即为分组 ((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)  反义  \W 匹配任意不是字母，数字，下划线，汉字的字符 \S 匹配任意不是空白符的字符 \D 匹配任意非数字的字符 \B 匹配不是单词开头或结束的位置 [^x] 匹配除了x以外的任意字符 [^aeiou] 匹配除了aeiou这几个字母以外的任意字符  零宽断言  查找在某些内容(但并不包括这些内容)之前或之后的东西，也就是说它们像\b,^,$那样用于指定一个位置，这个位置应该满足一定的条件(即断言)，因此它们也被称为零宽断言  (?</description>
    </item>
    
    <item>
      <title>Spring.Cache</title>
      <link>http://domain.yqjdcyy.com/post/spring.cache/</link>
      <pubDate>Thu, 08 Dec 2016 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/spring.cache/</guid>
      <description> 参考链接  http://www.ibm.com/developerworks/cn/opensource/os-cn-spring-cache/  特点  通过少量的配置 annotation 注释即可使得既有代码支持缓存 支持开箱即用 Out-Of-The-Box，即不用安装和部署额外第三方组件即可使用缓存 支持 Spring Express Language，能使用对象的任何属性或者方法来定义缓存的 key 和 condition 支持 AspectJ，并通过其实现任何方法的缓存支持 支持自定义 key和自定义缓存管理者，具有相当的灵活性和扩展  注释标签  @Cacheable(value=&amp;ldquo;缓存名称，如a/{b, c}&amp;rdquo;[, key=&amp;ldquo;可使用SqEL获取方法参数如#userName，其中缺少按照方法所有参数进行组合&amp;rdquo;] [, condition=&amp;ldquo;可使用SqEL表达式编写，为true时进行缓存&amp;rdquo;]) @CachEvict(value=&amp;ldquo;缓存名称，如a/{b, c}&amp;rdquo; [, key=&amp;ldquo;可使用SqEL获取方法参数如#userName，其中缺少按照方法所有参数进行组合&amp;rdquo;] [, condition=&amp;ldquo;可使用SqEL表达式编写，为true时进行缓存&amp;rdquo;] [, allEntries=&amp;ldquo;true时表示清空所有缓存内容&amp;rdquo;] [, beforeInvocation=&amp;ldquo;true时表示在方法执行前清空&amp;rdquo;]) @CachePut调用方式同@Cacheable，区别于每次都会触发真实方法调用  基本原理  关键：Spring AOP 过程：  原始代码：客户端通过直接作用于类对象的方法进行直接引用 调整实现：客户端申请调用时，所拥有的为代码的引用。proxy控制实际pojo.foo()方法的入参和返回值    </description>
    </item>
    
    <item>
      <title></title>
      <link>http://domain.yqjdcyy.com/post/java.container/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/java.container/</guid>
      <description>[TOC]
Structure Image    Text Iterable  Collection  List AbstractCollection  AbstractList  Vector  Stack  ArrayList SubList  RandomAccessSubList  AbstractSequentiaList  LinkedList   ArrayDeque AbstractQueue  PriorityQueue  AbstractSet  EnumSet  RegularEnumSet JumboEnumSet  TreeSet HashSet  LinkedHashSet    Queue Set  SortedSet  NavigableSet    ServiceLoader  Map  SortedMap  NavigableMap  Abstractmap  WeakHashMap IdentityHashMap EnumMap TreeMap HashMap  LinkedHashMap    Dictionary  Hashtable Properties  Utils  Collections Arrays  Tidy Iterable  methods  iterator() forEach(Consumer&amp;lt;?</description>
    </item>
    
    <item>
      <title></title>
      <link>http://domain.yqjdcyy.com/post/pyqt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/pyqt/</guid>
      <description> [TOC]
参考 安装  PyQt PyQt4 Download How to install PyQt4 on Windows using pip? Python3 PyQt5 pycharm 环境搭建
文档 PyQt4
 PyQt5
 PyQt5学习与交流
  </description>
    </item>
    
    <item>
      <title></title>
      <link>http://domain.yqjdcyy.com/post/%E5%BA%84%E5%AE%B6%E6%9D%9C%E5%9D%87/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E5%BA%84%E5%AE%B6%E6%9D%9C%E5%9D%87/</guid>
      <description>+++ date = &amp;quot;2018-03-23T17:00:00+08:00&amp;quot; title = &amp;quot;庄家杜均&amp;quot; draft = false tags = [&amp;quot;阅读&amp;quot;,&amp;quot;虚拟币&amp;quot;] share = true +++  [TOC]
【深度调查】 庄家杜均 时间点 2013.7  杜均从腾讯辞职，与李林等人联合创立数字货币交易所——火币网。 昔日的领导戴志康则成了火币网的天使投资人。  2013.11  火币网上线，打出了“免交易手续费”的旗号  发展壮大后，连同国内几大交易所重新开始收取手续费，甚至开始向项目收取巨额的ICO“上币费”   2014  杜均创办了区块链代币媒体“金色财经” 杜均募集了自己的基金”节点资本”  2017.9  中国的监管机构下令禁止境内的ICO（首次代币发行，是用区块链把使用权和加密货币合二为一，来为开发、维护、交换相关产品或者服务的项目进融资的方式）交易，并陆续屏蔽境外ICO交易平台的域名。  2017.12  代币“WAX”登录“火币Pro”交易所后，狂跌99%的惨烈景象 IOST（Internet of Service Token）的区块链项目正在筹划ICO，募资数额巨大 每个币种登录火币Pro开始交易后，开放充值和提现的间隔时间越来越长  2018.1  包括杜均在内，币圈主要人物已经被限制出境  2018.2.15  名为“三点钟无眠区块链”的微信群横空出世，在各种区块链微信群里呼风唤雨的，是薛蛮子、徐小平、蔡文胜和王峰这样的传统天使风险投资人。  2018.3.3  全国政协十三届一次会议开幕，中国进入“两会时期”。  火币网公众号更名为 “huobicom” OKEx公众号被封号   关键点 杜均  重庆开县人，1986年出生 初中期间，杜均曾靠打游戏卖装备、建站赚广告费谋生，是早年间国内互联网野蛮生长时代孕育的无数- 个人站长之一。 凭借常年混迹互联网圈积累的经验和圈子，杜均成功进入知名企业家和天使投资人戴志康创立的康盛创想，在旗下Discuz!</description>
    </item>
    
    <item>
      <title></title>
      <link>http://domain.yqjdcyy.com/post/%E6%9C%BA%E6%9E%84%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E6%9C%BA%E6%9E%84%E5%AD%A6%E4%B9%A0/</guid>
      <description>概念  机器学习  机器学习算法是一类从数据中自动分析获得规律，并利用规律对未知数据进行预测的算法。 因为学习算法中涉及了大量的统计学理论，机器学习与统计推断学联系尤为密切，也被称为统计学习理论。 算法设计方面，机器学习理论关注可以实现的，行之有效的学习算法。 赋予计算机在非编程情况下的学习能力 - Artuur Samuel  深度学习 卷积神经网络  基础  计算机科学的基本知识、原理  数据结构 编程  Matlab Octave   概率  随机变量 期望 方差  线性代数  矩阵 向量 逆矩阵   要点  decision trees  决策树  naive Bayes&amp;rsquo; classifiers  朴素贝叶斯分类器  maximum entropy classifiers
 最大熵分类器
学习路线   参考  入门  Best Machine Learning Resources for Getting Started  机器学习的最佳入门学习资源  tornadomeet.</description>
    </item>
    
  </channel>
</rss>