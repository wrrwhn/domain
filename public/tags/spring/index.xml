<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring on 好久不见</title>
    <link>http://domain.yqjdcyy.com/tags/spring/</link>
    <description>Recent content in Spring on 好久不见</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 16 Nov 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://domain.yqjdcyy.com/tags/spring/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hello.Spring.Boot.Security</title>
      <link>http://domain.yqjdcyy.com/post/hello.spring.boot.security/</link>
      <pubDate>Fri, 16 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/hello.spring.boot.security/</guid>
      <description>Introduction providing both authentication and authorization to Java applications. a comprehensive security solution for Java EE-based enterprise software applications layers of security each layer tries to be as secure as possible in its own right authentication 鉴定 the process of establishing a principal is who they claim to be authorization 授权 the process of deciding whether a principal is allowed to perform an action within your application FAQ</description>
    </item>
    
    <item>
      <title>Hello.Spring</title>
      <link>http://domain.yqjdcyy.com/post/hello.spring/</link>
      <pubDate>Tue, 11 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/hello.spring/</guid>
      <description>架构 架构图 4.2.x x.x.x 模块 Core BeanFactory Dependency Injection Utils AOP 元数据 AOP 基础架构 ORM 对象关系映射 支持 Hibernate iBatis JDO WEB DAO 事务 JDBC 抽象 DAO WEB.MVC MVC Framework views JSP/ Velocity PDF/ Excel Context 应用上下文 UI Validation JDNI EJB Email 国际化 I18N 包 spring-aop spring-aspects spring-beans</description>
    </item>
    
    <item>
      <title>Spring.Security</title>
      <link>http://domain.yqjdcyy.com/post/spring.security/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/spring.security/</guid>
      <description>前后端分离 思路 登录成功后，于 Session 添加相应属性值 接口请求时，判断过滤接口和 Session 属性值是否过期、有效，以判断是否拦截 选型 Spring.Security 展示型项目，简单区分前后端</description>
    </item>
    
    <item>
      <title>Spring.Boot.Publish</title>
      <link>http://domain.yqjdcyy.com/post/spring-boot-run-on-tomcat/</link>
      <pubDate>Thu, 31 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/spring-boot-run-on-tomcat/</guid>
      <description>Init project.init business.finish Package packaging.war pom.xml &amp;lt;packaging&amp;gt;war&amp;lt;/packaging&amp;gt; tomcat.remove pom.xml &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt; &amp;lt;!-- 移除嵌入式tomcat插件 --&amp;gt; &amp;lt;exclusions&amp;gt; &amp;lt;exclusion&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-tomcat&amp;lt;/artifactId&amp;gt; &amp;lt;/exclusion&amp;gt; &amp;lt;/exclusions&amp;gt; &amp;lt;/dependency&amp;gt; servlet-api.add pom.xml javax.servlet-api &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;javax.servlet&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;javax.servlet-api&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.1.0&amp;lt;/version&amp;gt; &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; OR tomcat-servlet-api &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.tomcat&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;tomcat-servlet-api&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;8.0.36&amp;lt;/version&amp;gt; &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; runner.update 与 Application 同级 public class SpringBootStartApplication extends SpringBootServletInitializer { @Override protected SpringApplicationBuilder configure(SpringApplicationBuilder builder) { return builder.sources(Application.class);</description>
    </item>
    
    <item>
      <title>Spring.JPA.Fetch</title>
      <link>http://domain.yqjdcyy.com/post/spring.jpa.fetch/</link>
      <pubDate>Wed, 23 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/spring.jpa.fetch/</guid>
      <description>Setting Default Type Setting JPA 2.0 spec OneToMany Lazy ManyToMany Lazy OneToOne Eager ManyToOne Eager Hibernate * Lazy Docs Hibernate By default, Hibernate uses lazy select fetching for collections and lazy proxy fetching for single-valued associations. These defaults make sense for most associations in the majority of applications. Jpa Spec JPA Spec assumes that in general most of the applications will require the singleton relations by default be eager, whereas</description>
    </item>
    
    <item>
      <title>Spring.@Transactional</title>
      <link>http://domain.yqjdcyy.com/post/spring.transactional/</link>
      <pubDate>Tue, 22 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/spring.transactional/</guid>
      <description>使用方式 将 @Transactional 注解添加至 方法 上 将 @Transactional 注解添加至 类 上 该类中所有 public 类型方法均会被配置以相同的事务属性 方法级别的事务属性 覆盖 类级别的事务属性 属性 属性列</description>
    </item>
    
    <item>
      <title>Hello.Spring.JPA</title>
      <link>http://domain.yqjdcyy.com/post/springboot.jpa/</link>
      <pubDate>Sun, 11 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/springboot.jpa/</guid>
      <description>示例 Basic Example Entity @Entity @Table(name = &amp;#34;user&amp;#34;) public class User { @Id @GeneratedValue(strategy = GenerationType.AUTO) private Long id; @Column(name = &amp;#34;user_name&amp;#34;) private long userName; } Repository public interface UserRepository extends CrudRepository&amp;lt;User, Long&amp;gt; { // 必须指定操作对象及ID类型 Long countByLastname(String lastname); List&amp;lt;User&amp;gt; findByLastname(String lastname); } Common-Repository PagingAndSortingRepository CrudRepository Repository Config @Configuration @EnableJpaRepositories(basePackages = &amp;#34;com.yunkai&amp;#34;) // 指定 Repository 位</description>
    </item>
    
    <item>
      <title>Hello.SpringBoot</title>
      <link>http://domain.yqjdcyy.com/post/springboot.%E5%85%A5%E9%97%A8/</link>
      <pubDate>Sun, 11 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/springboot.%E5%85%A5%E9%97%A8/</guid>
      <description>作用 创建和启动新的 Spring 框架项目 特性 嵌入 Tomcat 或 Jetty 提供生产环境使用功能，如性能指标、应用信息和应用健康检查 POM 配置 &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;project xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&amp;gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt; &amp;lt;groupId&amp;gt;com.midgetontoes&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-simple&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt; &amp;lt;properties&amp;gt; &amp;lt;spring.boot.version&amp;gt;1.1.4.RELEASE&amp;lt;/spring.boot.version&amp;gt; &amp;lt;/properties&amp;gt; &amp;lt;dependencies&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;</description>
    </item>
    
    <item>
      <title>Spring.Basic</title>
      <link>http://domain.yqjdcyy.com/post/spring.basic/</link>
      <pubDate>Sun, 11 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/spring.basic/</guid>
      <description>AOP 介绍 Aspect-Oriented Programming 面向切面编程，对着代码横着切入 对方法的增强为 Weaving （织入） 对类的增强为 Introduction （引入） 代理 代码写死 interface public interface Greeting { void sayHello(String name); } implement public class GreetingImpl implements Greeting { @Override public void sayHello(String name)</description>
    </item>
    
    <item>
      <title>Spring.Cache</title>
      <link>http://domain.yqjdcyy.com/post/spring.cache/</link>
      <pubDate>Thu, 08 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/spring.cache/</guid>
      <description>参考链接 http://www.ibm.com/developerworks/cn/opensource/os-cn-spring-cache/ 特点 通过少量的配置 annotation 注释即可使得既有代码支持缓存 支持开箱即用 Out-Of-The-Box，即不用安装和部署额外第三方组件即可使用缓</description>
    </item>
    
  </channel>
</rss>