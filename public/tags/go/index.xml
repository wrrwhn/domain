<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on 好久不见</title>
    <link>http://domain.yqjdcyy.com/tags/go/</link>
    <description>Recent content in Go on 好久不见</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 10 May 2018 19:00:00 +0800</lastBuildDate>
    
	<atom:link href="http://domain.yqjdcyy.com/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go.GOPATH</title>
      <link>http://domain.yqjdcyy.com/post/go.gopath/</link>
      <pubDate>Thu, 10 May 2018 19:00:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.gopath/</guid>
      <description>[TOC] 作用 于 go/build 中引入，罗列本机 Go 代码的位置，可用于解析导入语句 Unix 使用 : 分割 Windows 使用 ; 分割 Plan 使用列表记录 默认 未设置时，默认为用户主目录下的 go 文件夹 Unix</description>
    </item>
    
    <item>
      <title>Go.Wukong</title>
      <link>http://domain.yqjdcyy.com/post/go.wukong/</link>
      <pubDate>Wed, 15 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.wukong/</guid>
      <description>[TOC] 悟空引擎使用 参考 使用wukong全文搜索引擎 huichen/wukong 悟空：用Go语言编写的全文搜索引擎 huichen/sego boltdb/bolt cznic/kv huichen/murmur 介绍 内部结构 主协程，用于收发用户请求 分词器（seg</description>
    </item>
    
    <item>
      <title>Hugo 建站</title>
      <link>http://domain.yqjdcyy.com/post/hugo%E5%BB%BA%E7%AB%99/</link>
      <pubDate>Wed, 15 Nov 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/hugo%E5%BB%BA%E7%AB%99/</guid>
      <description>Hugo 建站 参考 使用Hugo搭建个人博客 Hugo Themes Hugo 中文文档 利用Github Pages和基于Go的Hugo搭建个人博客 Host on GitHub 使用hugo搭建个人博客站点</description>
    </item>
    
    <item>
      <title>Go.并行&amp;并发 </title>
      <link>http://domain.yqjdcyy.com/post/go.goruntime/</link>
      <pubDate>Wed, 13 Sep 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.goruntime/</guid>
      <description>参考 Go语言并发与并行学习笔记 What exactly does runtime.Gosched do? 关于GoRoutine的一个运行问题 概念 默认设置 所有 goruutime 均在单原生线程中运行，仅占用单 CPU 当前 goruutime 不阻塞则</description>
    </item>
    
    <item>
      <title>Go.并行&amp;并发 </title>
      <link>http://domain.yqjdcyy.com/post/go.%E5%B9%B6%E8%A1%8C%E5%B9%B6%E5%8F%91/</link>
      <pubDate>Wed, 13 Sep 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.%E5%B9%B6%E8%A1%8C%E5%B9%B6%E5%8F%91/</guid>
      <description>参考 Go语言并发与并行学习笔记 What exactly does runtime.Gosched do? 关于GoRoutine的一个运行问题 概念 默认设置 所有 goruutime 均在单原生线程中运行，仅占用单 CPU 当前 goruutime 不阻塞则</description>
    </item>
    
    <item>
      <title>Go.Upload.Qiniu</title>
      <link>http://domain.yqjdcyy.com/post/go.upload.qiniu/</link>
      <pubDate>Thu, 07 Sep 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.upload.qiniu/</guid>
      <description>[TOC] 描述 将指定 [文件|文件夹|当前文件夹] 的内容上传至 七牛云 上传完毕后将链接转换为 Markdown 格式文本 将结果数据更新至剪贴板 参考 Go SDK qiniu/api.v7 package context tjgq/clipboard package clipboard 需求 将链</description>
    </item>
    
    <item>
      <title>Go.交叉编译</title>
      <link>http://domain.yqjdcyy.com/post/go.%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/</link>
      <pubDate>Mon, 28 Aug 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/</guid>
      <description>[TOC] Go.交叉编译 参考 交叉编译 Golang 交叉编译 go tool cgo Golang 在 Mac、Linux、Windows 下交叉编译 作用 Go作为编译型语言，在不同平台上需要编译生成</description>
    </item>
    
    <item>
      <title>Go.VSCode</title>
      <link>http://domain.yqjdcyy.com/post/go.vscode/</link>
      <pubDate>Mon, 31 Jul 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.vscode/</guid>
      <description>[TOC] VS-Code Go 开发 参考 VS Code 搭建 Go 开发IDE Running VS Code on Windows 安装 安装 vs-code 「Ctrl+ Shift+ P」后输入 「install Extensions」「Go」 安装「lukeh</description>
    </item>
    
    <item>
      <title>Go.Nsq</title>
      <link>http://domain.yqjdcyy.com/post/go.nsq/</link>
      <pubDate>Tue, 25 Jul 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.nsq/</guid>
      <description>[TOC] [NSQ] 参考 An Example of Using NSQ From Go NSQ 官网 NSQ Github NSQ 指南 介绍 NSQ 实时的分页式消息处理平台 支持无 SPOF 的分布式拓扑 默认消息不持久化 可通过设置 --mem-queue-size 参数为 0 变更 接收到的消息</description>
    </item>
    
    <item>
      <title>Go.GPM</title>
      <link>http://domain.yqjdcyy.com/post/go.gpm/</link>
      <pubDate>Sun, 23 Jul 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.gpm/</guid>
      <description>[TOC] 参考 gpm - Go Package Manager 跟我一起写Makefile Creating a personal access token 介绍 GPM 通过名为 Godeps 的 manifest 文件来管理、获取引用的指定版本依赖 Godeps文件置于 go 应用程序的根</description>
    </item>
    
    <item>
      <title>Go.Reflect</title>
      <link>http://domain.yqjdcyy.com/post/go.reflect/</link>
      <pubDate>Thu, 20 Jul 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.reflect/</guid>
      <description>[TOC] Go.Reflect 参考 Package reflect [](http://www.golang.ltd/forum.php?mod=viewthread&amp;amp;tid=6017) 类型和接口 Go 为静态类型语言，变量有且只有一个静态类型，于编译时已确认 var r io.Reader r = os.Stdin r = bufio.NewReader(r) r = new(bytes.Buffer) // r 不管指向什么，类型永远是 io.Reader interface{} 任</description>
    </item>
    
    <item>
      <title>Go.安装配置</title>
      <link>http://domain.yqjdcyy.com/post/go.%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Wed, 28 Jun 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</guid>
      <description>[TOC] 配置 GOROOT 配置 GO 的可执行文件路径 D:\server\go\1.8 PATH 将 Go 相关可执行文件列表入搜索路径中 %GOROOT%\bin GOPATH 目录列表，类似于maven中的repository目录，引用库 其中第</description>
    </item>
    
    <item>
      <title>Go.异常处理</title>
      <link>http://domain.yqjdcyy.com/post/go.%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</link>
      <pubDate>Tue, 23 May 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</guid>
      <description>[TOC] Defer, Panic, Recover 参考 Defer, Panic, and Recover Go的异常处理 defer, panic, recover 使用 defer 作用 用于在当前方法结束时，执行相关方法 特点 声明 defer 时值即为方法中参数被赋的值 声明多个时，即以后进</description>
    </item>
    
    <item>
      <title>Go.GoSublime</title>
      <link>http://domain.yqjdcyy.com/post/go.gosublime/</link>
      <pubDate>Wed, 26 Apr 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.gosublime/</guid>
      <description>[TOC] 注解 Path 分隔符 Windows - ; Linux| OS X - : 设置 路径 Packages/User/GoSublime.sublime-settings 推荐更新覆盖 Packages/GoSublime/GoSublime.sublime-settings 默认配置，不建议更新 代码补全 配置 Preferences/Package Settings/GoSublime/Settings - User { &amp;quot;autocomplete_builtins&amp;quot;: true, &amp;quot;autocomplete_closures&amp;quot;: true } 快捷键 Code Complete Ctrl+ [Space] package import Ctrl+[.], Ctrl+ P jump F12 Crl+ [.], Ctrl+</description>
    </item>
    
    <item>
      <title>Go.Flag</title>
      <link>http://domain.yqjdcyy.com/post/go.flag/</link>
      <pubDate>Mon, 24 Apr 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/go.flag/</guid>
      <description>[TOC] Flag 参考 Package flag Golang flag包使用详解 作用 用于解析命令行参数的功能接口 常用 flag.Xxx[String| Bool| Int](name string, default-value Xxx, usage-info string) 返回相应指针 flag.XxxVar(ptr-store *Xxx, name, default-value, usage-info) 将 flag 绑定到变量 flag.Var(&amp;amp;custom-type, name, usage-info) custom-type 需要实现 Value 接</description>
    </item>
    
  </channel>
</rss>