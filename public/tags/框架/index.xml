<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>框架 on 好久不见</title>
    <link>http://domain.yqjdcyy.com/tags/%E6%A1%86%E6%9E%B6/</link>
    <description>Recent content in 框架 on 好久不见</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 16 Oct 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://domain.yqjdcyy.com/tags/%E6%A1%86%E6%9E%B6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hello.Spring.Cloud.Sleuth</title>
      <link>http://domain.yqjdcyy.com/post/hello.spring.cloud.sleuth/</link>
      <pubDate>Tue, 16 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/hello.spring.cloud.sleuth/</guid>
      <description>功能 链路追踪 查看该请求经过了哪些服务，当前哪些服务异常（实时数据） 可视化异常 在 zipkin 界面上查看异常情况 分析蚝时 记录各采样请求的蚝时，可控地进行服</description>
    </item>
    
    <item>
      <title>Hello.Spring.Cloud.Zuul</title>
      <link>http://domain.yqjdcyy.com/post/hello.spring.cloud.zuul/</link>
      <pubDate>Tue, 16 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/hello.spring.cloud.zuul/</guid>
      <description>作用 保障服务无状态 确保对外服务的安全性，增加服务访问的控制控制 保障集群中 REST API 无状态 保障接口的复用 功能 服务路由 通过 JVM 实现 均衡负载 权限控制 ZuulFilter filterType pre</description>
    </item>
    
    <item>
      <title>Hello.Spring.Cloud.Hystrix</title>
      <link>http://domain.yqjdcyy.com/post/hello.spring.cloud.hystrix/</link>
      <pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/hello.spring.cloud.hystrix/</guid>
      <description>作用 在高并发下，避免服务阻塞造成对整体服务稳定性的影响 通过服务降级、服务隔离来保障业务的顺利进行 选型 命令模式 线程|线程池 客户端单独线程执行，</description>
    </item>
    
    <item>
      <title>Hello.Spring.Cloud.Eureka</title>
      <link>http://domain.yqjdcyy.com/post/hello.spring.cloud.eureka/</link>
      <pubDate>Tue, 02 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/hello.spring.cloud.eureka/</guid>
      <description>细节 Region-Zone-Eureka 名词解析 Region 区域 基础服务的地区集合 区域 编码 亚太-东京 ap-northeast-1 亚太-新加坡 ap-southeast-1 亚太-悉尼 ap-southeast-2 欧洲-爱尔兰 eu-east-1 南美-圣保罗 sa-east-1 美东-北佛杰尼亚 us-east-1 美西-北加</description>
    </item>
    
    <item>
      <title>Hello.Spring.Cloud.Config</title>
      <link>http://domain.yqjdcyy.com/post/hello.spring.cloud.config/</link>
      <pubDate>Sun, 30 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/hello.spring.cloud.config/</guid>
      <description>组件 配置读取 Spring.Cloud.Config.Server Spring.Cloud.Config.Client 主动更新 Spring.Cloud.Config.Server Spring.Cloud.Config.Client Spring.Cloud.Bus Redis/ RabbitMQ/ Kafka 实现 Config-Server Maven pom.xml &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-cloud-config-server&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; Properties src/main/resource/application.yml ## config.server git # cloud: # config: # server: # git: # uri: https://github.com/yqjdcyy/Hello_Spring_Cloud_Config ## config.server locale profiles: active: native cloud: config: server: native: search-locations: D:/work/git/yao/java/Hello_Spring_Cloud_Config Code Application.java @SpringBootApplication @EnableConfigServer // * 必须项 public class Application { public static</description>
    </item>
    
    <item>
      <title>Hello.Spring.Cloud</title>
      <link>http://domain.yqjdcyy.com/post/hello.spring.cloud/</link>
      <pubDate>Thu, 20 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/hello.spring.cloud/</guid>
      <description>架构 API 调用 内容 API 调用方 类型 PC Phone Client 服务治理 服务注册与发现 内容 基于 REST 的服务注册、发布、故障转移 类型 Netfix Eureka 类型 AP 作用 服务的注册与发布 功能 注册 发布 熔断</description>
    </item>
    
    <item>
      <title>Hello.Spring</title>
      <link>http://domain.yqjdcyy.com/post/hello.spring/</link>
      <pubDate>Tue, 11 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/hello.spring/</guid>
      <description>架构 架构图 4.2.x x.x.x 模块 Core BeanFactory Dependency Injection Utils AOP 元数据 AOP 基础架构 ORM 对象关系映射 支持 Hibernate iBatis JDO WEB DAO 事务 JDBC 抽象 DAO WEB.MVC MVC Framework views JSP/ Velocity PDF/ Excel Context 应用上下文 UI Validation JDNI EJB Email 国际化 I18N 包 spring-aop spring-aspects spring-beans</description>
    </item>
    
    <item>
      <title>Hello.Spark</title>
      <link>http://domain.yqjdcyy.com/post/spark/</link>
      <pubDate>Fri, 20 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/spark/</guid>
      <description>Spark 启动 Spark method setUp threadPool ipAddress port secure start init stop webSocket other (String path, Route route) get post put patch delete head trace connect options before after (String path, String acceptType, Route route) webSocket(String path, Class&amp;lt;?&amp;gt; handler) class SingletonHolder static final SparkInstance INSTANCE = new SparkInstance(); SparkInstance parameter port ipAddress max|min Threads webSocketHandlers SparkServer SimpleRouteMatcher CountDownLatch method init() this.routeMatcher = RouteMatcherFactory.get(); (new Thread(run&amp;lt;invokedynamic&amp;gt;(this))).start(); getter/ setter webSocket(String path,</description>
    </item>
    
    <item>
      <title>Hello.Storm</title>
      <link>http://domain.yqjdcyy.com/post/storm/</link>
      <pubDate>Sun, 11 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/storm/</guid>
      <description>通信机制 选型 进程间使用 Netty/ ZeroMQ 进行通信 同一进程内的诸多线程，采用 Disruptor Queue 完成通信 注： LocalCluster 模式下，参数 storm.local.mode.zmq= false 则采用线程模拟进程方式启动，通过 LinkedBlockingQueue 模拟 进程间通</description>
    </item>
    
  </channel>
</rss>