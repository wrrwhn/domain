<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>框架 on 好久不见</title>
    <link>http://domain.yqjdcyy.com/tags/%E6%A1%86%E6%9E%B6/</link>
    <description>Recent content in 框架 on 好久不见</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 11 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://domain.yqjdcyy.com/tags/%E6%A1%86%E6%9E%B6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hello.Spring</title>
      <link>http://domain.yqjdcyy.com/post/hello.spring/</link>
      <pubDate>Tue, 11 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/hello.spring/</guid>
      <description>架构 架构图 4.2.x x.x.x 模块 Core BeanFactory Dependency Injection Utils AOP 元数据 AOP 基础架构 ORM 对象关系映射 支持 Hibernate iBatis JDO WEB DAO 事务 JDBC 抽象 DAO WEB.MVC MVC Framework views JSP/ Velocity PDF/ Excel Context 应用上下文 UI Validation JDNI EJB Email 国际化 I18N 包 spring-aop spring-aspects spring-beans</description>
    </item>
    
    <item>
      <title>Hello.Spark</title>
      <link>http://domain.yqjdcyy.com/post/spark/</link>
      <pubDate>Fri, 20 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/spark/</guid>
      <description>Spark 启动 Spark method setUp threadPool ipAddress port secure start init stop webSocket other (String path, Route route) get post put patch delete head trace connect options before after (String path, String acceptType, Route route) webSocket(String path, Class&amp;lt;?&amp;gt; handler) class SingletonHolder static final SparkInstance INSTANCE = new SparkInstance(); SparkInstance parameter port ipAddress max|min Threads webSocketHandlers SparkServer SimpleRouteMatcher CountDownLatch method init() this.routeMatcher = RouteMatcherFactory.get(); (new Thread(run&amp;lt;invokedynamic&amp;gt;(this))).start(); getter/ setter webSocket(String path,</description>
    </item>
    
    <item>
      <title>Hello.Spring.Cloud</title>
      <link>http://domain.yqjdcyy.com/post/hello.spring.cloud/</link>
      <pubDate>Wed, 20 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/hello.spring.cloud/</guid>
      <description>架构 API 调用 内容 API 调用方 类型 PC Phone Client 服务治理 服务注册与发现 内容 基于 REST 的服务注册、发布、故障转移 类型 Netfix Eureka 类型 AP 作用 服务的注册与发布 功能 注册 发布 熔断</description>
    </item>
    
    <item>
      <title>Hello.Storm</title>
      <link>http://domain.yqjdcyy.com/post/storm/</link>
      <pubDate>Sun, 11 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/storm/</guid>
      <description>通信机制 选型 进程间使用 Netty/ ZeroMQ 进行通信 同一进程内的诸多线程，采用 Disruptor Queue 完成通信 注： LocalCluster 模式下，参数 storm.local.mode.zmq= false 则采用线程模拟进程方式启动，通过 LinkedBlockingQueue 模拟 进程间通</description>
    </item>
    
  </channel>
</rss>