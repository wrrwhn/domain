<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>学习 on 好久不见</title>
    <link>http://domain.yqjdcyy.com/tags/%E5%AD%A6%E4%B9%A0/</link>
    <description>Recent content in 学习 on 好久不见</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Powered by [姚清居](http://www.domain.yqjdcyy.com).</copyright>
    <lastBuildDate>Tue, 06 Mar 2018 15:00:00 +0800</lastBuildDate>
    
	<atom:link href="http://domain.yqjdcyy.com/tags/%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>王垠-如何掌握所有的程序语言</title>
      <link>http://domain.yqjdcyy.com/post/%E7%8E%8B%E5%9E%A0-%E5%A6%82%E4%BD%95%E6%8E%8C%E6%8F%A1%E6%89%80%E6%9C%89%E7%9A%84%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/</link>
      <pubDate>Tue, 06 Mar 2018 15:00:00 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E7%8E%8B%E5%9E%A0-%E5%A6%82%E4%BD%95%E6%8E%8C%E6%8F%A1%E6%89%80%E6%9C%89%E7%9A%84%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/</guid>
      <description>[TOC]
王垠-如何掌握所有的程序语言 针对处理  你是编程初学者，不知道该选择什么程序语言来入门。 你是资深的程序员或者团队领导，对新出现的种种语言感到困惑，不知道该投资哪种语言。 你的团队为使用哪种程序语言争论不休，发生各种宗教斗争。 你追逐潮流采用了某种时髦的语言，结果两个月之后发现深陷泥潭，痛苦不堪……  重视语言特性，而不是语言  任何一种“语言”，都是各种“语言特性”的组合  一个程序语言就像一台电脑。不同的语言则相对于不同的品牌。 你得看看它里面装的是什么型号的处理器，有多少个核，主频多少，有多少 L1 cache，L2 cache……，有多少内存和硬盘，显示器分辨率有多大，显卡是什么 GPU，网卡速度，等等各种“配置”。有时候你还得看各个组件之间的兼容性。   通用特点  语言特性
 变量定义 算术运算 for 循环语句，while 循环语句 函数定义，函数调用 递归 静态类型系统 类型推导 lambda 函数 面向对象 垃圾回收 指针算术 goto 语句  掌握通用特性
 比如变量，函数，整数和浮点数运算，这些是每个通用程序语言里面都必须有的 掌握基本的特性后，即可随时将这些知识应用到任何其它语言  学习方法
 手头有问题 用两分钟浏览一下这语言的手册，看看这语言大概长什么样 例子代码来开始修改捣鼓，想法把这代码改成自己正想解决的问题 实现过程中自然带出问题  这个语言的“变量定义”是什么语法，需要“声明类型”吗，还是可以用“类型推导”？ 它的“类型”是什么语法？是否支持“泛型”？泛型的 “variance” 如何表达？ 这个语言的“函数”是什么语法，“函数调用”是什么语法，可否使用“缺省参数”？  补充  因为掌握了语言特性的人都知道，自己需要的特性，在任何语言里面一定有对应的表达方式。 如果没有直接的方式表达，那么一定有某种“绕过方式”。如果有直接的表达方式，那么它只是语法稍微有所不同而已。  带着问题找特性，就像查字典一样，而不是被淹没于大部头的手册里面    语言特性</description>
    </item>
    
  </channel>
</rss>