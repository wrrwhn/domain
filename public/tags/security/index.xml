<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on 好久不见</title>
    <link>http://domain.yqjdcyy.com/tags/security/</link>
    <description>Recent content in Security on 好久不见</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 27 Dec 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://domain.yqjdcyy.com/tags/security/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java.Security</title>
      <link>http://domain.yqjdcyy.com/post/java.security/</link>
      <pubDate>Thu, 27 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/java.security/</guid>
      <description>介绍 类型安全 垃圾回收机制 包括 API、工具和广范使用的算法、机制和协议 密码学和公钥基础架构接口，安全应用开发的基础 认证和访问控制，防止资源不经</description>
    </item>
    
    <item>
      <title>Hello.Spring.Boot.Security</title>
      <link>http://domain.yqjdcyy.com/post/hello.spring.boot.security/</link>
      <pubDate>Thu, 22 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/hello.spring.boot.security/</guid>
      <description>实现 Authentication-Memory TODO 内置用户管理 分接口限制访问 限制角色访问 非登录情况自动跳转至登录界面 指定密码编码器 新版本中，不再默认以文本编码器作为默认编码器 Maven pom.xml &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.security&amp;lt;/groupId&amp;gt;</description>
    </item>
    
    <item>
      <title>Hello.Security</title>
      <link>http://domain.yqjdcyy.com/post/hello.security/</link>
      <pubDate>Fri, 16 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/hello.security/</guid>
      <description>常见类型 HTTP 适用场景 便捷性 支持跨浏览器 流程 注意事项 账号密码暴露，建议使用 HTTPS Session 适用场景 浏览器自动支持，实现简便 流程 注意事项 会话劫持攻击 Token 适用场景</description>
    </item>
    
    <item>
      <title>Spring.Security</title>
      <link>http://domain.yqjdcyy.com/post/spring.security/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/spring.security/</guid>
      <description>前后端分离 思路 登录成功后，于 Session 添加相应属性值 接口请求时，判断过滤接口和 Session 属性值是否过期、有效，以判断是否拦截 选型 Spring.Security 展示型项目，简单区分前后端</description>
    </item>
    
  </channel>
</rss>