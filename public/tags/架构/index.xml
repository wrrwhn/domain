<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>架构 on 好久不见</title>
    <link>http://domain.yqjdcyy.com/tags/%E6%9E%B6%E6%9E%84/</link>
    <description>Recent content in 架构 on 好久不见</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Powered by [姚清居](http://www.domain.yqjdcyy.com).</copyright>
    <lastBuildDate>Mon, 12 Feb 2018 12:07:46 +0800</lastBuildDate>
    
	<atom:link href="http://domain.yqjdcyy.com/tags/%E6%9E%B6%E6%9E%84/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>知乎架构变迁史</title>
      <link>http://domain.yqjdcyy.com/post/%E7%9F%A5%E4%B9%8E%E6%9E%B6%E6%9E%84%E5%8F%98%E8%BF%81%E5%8F%B2/</link>
      <pubDate>Mon, 12 Feb 2018 12:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E7%9F%A5%E4%B9%8E%E6%9E%B6%E6%9E%84%E5%8F%98%E8%BF%81%E5%8F%B2/</guid>
      <description>知乎架构变迁史 引言  You jump off a cliff and you assemble an aeroplane on the way down. - Reid Hoffman   阶段 上线   选型
 Python.Tornado  Python  简单强大、快速上手、开发效率高、社区活跃  Tornado  支持异步、适合实时Comet应用开发、简单轻量、学习成本低 FriendFeed 的成熟案例 Facebook 的社区支持    优化
 主从延迟  参见参考项「MySQL主从复制延迟的监测及缓解」和「彻底终结mysql同步延迟问题」  资源隔离  图片资源独立部署  内网优化  更换设备  硬盘升级   应用层灵活调用 Redis Shard  github.com/zhihu/redis-shard   工具</description>
    </item>
    
    <item>
      <title>云开-服务端架构-20171203</title>
      <link>http://domain.yqjdcyy.com/post/%E4%BA%91%E5%BC%80-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%9E%B6%E6%9E%84-20171203/</link>
      <pubDate>Sun, 03 Dec 2017 22:07:46 +0800</pubDate>
      
      <guid>http://domain.yqjdcyy.com/post/%E4%BA%91%E5%BC%80-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%9E%B6%E6%9E%84-20171203/</guid>
      <description>流程  华山分享现有架构整理 志高补充压测等情况 讨论瓶颈优化  系统架构  客户端  微信 NW 老师端 PC 学习端  连接方式  HTTP TCP/IP  微服务  用户中心 直播相关 业务服务相关 推荐相关  模块  用户 直播  FFMpeg Nginx rtmp  NFS IM 转换  PPT  Gateway NSQ PPT.Command  音视频   底层服务  日志 持久化  Mysql，主从  缓存  Redis，仅主从无集群  文件数据   讨论  实现目标  两万人并发 目前900 QPS  确认瓶颈  缓存  解决方案  Twemproxy  参考  twitter/twemproxy Redis 存储分片之代理服务Twemproxy 测试 存储分片和Twemproxy核心解读  性能  性能损耗，最差低于 20%  优点  统一对外节点，多服务池 长连接，pipelinling 处理请求和响应，大大减少连接数 哈希分片，请求分配均匀  缺点  无法平滑地扩容或缩容 运维管理困难，无操作界面   Codis  参考  Redis集群技术及Codis实践 常见的redis集群方案有哪些优缺点？ []()  性能  最初比Twemproxy慢20%，现在比Twemproxy快近100%    优点  有图形化界面，扩容及运维方便 开发简单，对应用透明 不负责主从同步，轻量伦 提供 Jodis，支持 Java 程序的 HA  缺点  修改过 Redis 代码，无法与官方版本同步，新特性跟进缓慢 Value 字段大小小于 888B 字节时，性能较优秀 第三方组件较多     相关工作  AV-Server  可能存在问题？  CPU 使用率  GO 中使用  如何快速扩容  Kafka，多服务连接    Talk.</description>
    </item>
    
  </channel>
</rss>